WEBVTT

1
00:00:00.406 --> 00:00:04.676
[MUSIC]

2
00:00:04.676 --> 00:00:08.470
For the second exercise,
we are going to be looking at how subtotal

3
00:00:08.470 --> 00:00:12.420
interacts with any subtotals that
may already exist in the data set.

4
00:00:13.640 --> 00:00:17.856
If we look at cell D82,
we will notice that this cell is

5
00:00:17.856 --> 00:00:22.794
currently calculating the total sales for
the month of January by

6
00:00:22.794 --> 00:00:27.664
doing a subtotal using a sum
function on the January sales data.

7
00:00:27.664 --> 00:00:32.354
This is also the case for the cells below,

8
00:00:32.354 --> 00:00:35.843
cell D85, D88 and D91.

9
00:00:35.843 --> 00:00:38.143
If we select all of these the sales,

10
00:00:38.143 --> 00:00:42.525
we will notice that this column is
a named range, labeled sales 2.

11
00:00:42.525 --> 00:00:44.950
We will be using named
ranges going forward.

12
00:00:44.950 --> 00:00:48.200
First, we are asked to calculate
the total number of sales

13
00:00:48.200 --> 00:00:49.920
using the basic sum function.

14
00:00:49.920 --> 00:00:54.277
So let's start by typing equal,
followed by sum, and

15
00:00:54.277 --> 00:01:00.353
then we're going to be summing the sales,
which we know is called sales 2.

16
00:01:00.353 --> 00:01:02.566
Notice how this total has changed.

17
00:01:02.566 --> 00:01:07.234
It is now equal to 36,826.

18
00:01:07.234 --> 00:01:11.130
Next we're going to calculate
the total number of sales.

19
00:01:11.130 --> 00:01:15.010
But this time we will be using
the subtotal function to do so.

20
00:01:15.010 --> 00:01:18.010
We start by typing equal
followed by subtotal.

21
00:01:18.010 --> 00:01:22.904
Now from the previous exercise we remember
that sum was function number 9 in

22
00:01:22.904 --> 00:01:23.906
the dropdown.

23
00:01:23.906 --> 00:01:26.609
So we type 9 followed by a comma, and

24
00:01:26.609 --> 00:01:31.684
then we know that we're summing
the sales data, so we type sales 2.

25
00:01:31.684 --> 00:01:35.766
You will notice that the basic
sum formula is double counting

26
00:01:35.766 --> 00:01:39.645
the total number of sales that
are listed in the dataset.

27
00:01:39.645 --> 00:01:41.985
It's counting both the individual records,

28
00:01:41.985 --> 00:01:44.625
as well as the lines that
have the subtotals in them.

29
00:01:45.640 --> 00:01:50.080
However, subtotal is only calculated
in the sum for the values and

30
00:01:50.080 --> 00:01:53.940
is ignoring the subtotal
fields that are in the table.

31
00:01:53.940 --> 00:01:57.540
This is one of the key advantages
of the Subtotal function.

32
00:01:57.540 --> 00:02:01.981
It allows you to have subtotals within
a data table and still calculate

33
00:02:01.981 --> 00:02:06.584
the total without running the risk of
double counting any of the values.

34
00:02:06.584 --> 00:02:13.196
[MUSIC]