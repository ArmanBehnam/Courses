WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:13.518 --> 00:00:16.185
Welcome to the logical functions module.

3
00:00:16.185 --> 00:00:18.385
In this module,
we will learn some simple and

4
00:00:18.385 --> 00:00:22.785
very useful functions Excel offers
to evaluate conditional logic.

5
00:00:22.785 --> 00:00:26.633
The functions we will cover in this module
are a subset of the logical functions

6
00:00:26.633 --> 00:00:28.380
provided by Excel.

7
00:00:28.380 --> 00:00:32.230
We will share references to where you can
learn more about logical functions in

8
00:00:32.230 --> 00:00:35.790
Excel as part of the materials
provided with this module.

9
00:00:35.790 --> 00:00:40.420
We encourage course participants to study
these powerful functions independently to

10
00:00:40.420 --> 00:00:44.619
master their use as they are foundational
building blocks in spreadsheet analysis.

11
00:00:45.830 --> 00:00:48.220
Let's review the functions we
will cover in this module.

12
00:00:49.250 --> 00:00:54.840
The CountIfs function allows you to count
the number of occurrences of a value

13
00:00:54.840 --> 00:00:58.270
in a range based on specific criteria.

14
00:00:58.270 --> 00:01:02.840
It takes as parameters the range in
which you wish to count values and

15
00:01:02.840 --> 00:01:07.119
the criteria against which to apply to
those values in order to make the count.

16
00:01:08.720 --> 00:01:12.530
The SumIfs function allows
you to sum values in a range

17
00:01:12.530 --> 00:01:15.000
based on specific criteria.

18
00:01:15.000 --> 00:01:20.595
SumIfs takes, as parameters, first
the range of values which you care to sum.

19
00:01:20.595 --> 00:01:26.455
Then, arrange with values you'd like
to apply criteria against when summing,

20
00:01:26.455 --> 00:01:30.085
and lastly criteria to
apply against this range.

21
00:01:31.145 --> 00:01:34.505
You'll note that you can feed any
number of criteria ranges and

22
00:01:34.505 --> 00:01:37.610
criteria into SumIfs,
which makes it quite powerful.

23
00:01:38.670 --> 00:01:42.770
The IF function allows you to compare
different values or variables and

24
00:01:42.770 --> 00:01:46.970
return a specified value depending
on the outcome of that test.

25
00:01:46.970 --> 00:01:51.890
The test must be structured as
a boolean or true or false test.

26
00:01:51.890 --> 00:01:57.760
If no outputs are specified, the function
will return true if the test is true and

27
00:01:57.760 --> 00:01:59.672
false, if the test is false.

28
00:01:59.672 --> 00:02:06.150
IF requires, as parameters,
firstly the logical test,

29
00:02:06.150 --> 00:02:11.520
then the value if that test is true and
lastly the value if that test is false.

30
00:02:12.620 --> 00:02:15.530
Combining And with the If function

31
00:02:15.530 --> 00:02:20.310
allows multiple logical tests in
evaluating values in a data set.

32
00:02:20.310 --> 00:02:24.580
It is useful when we want to do something
only if all of our tests are true and

33
00:02:24.580 --> 00:02:27.230
if we want to do something else
if any of our tests is false.

34
00:02:28.370 --> 00:02:32.700
Each function within the And function
must be structured as a boolean test.

35
00:02:32.700 --> 00:02:34.810
You can't simply list
the values being compared.

36
00:02:35.940 --> 00:02:39.600
The And function itself can be
nested to run more advanced tests.

37
00:02:39.600 --> 00:02:42.080
We'll talk more about If and And

38
00:02:42.080 --> 00:02:44.920
in conjunction as we work through
the problems of this modular.

39
00:02:45.990 --> 00:02:47.820
Combining the If + Or

40
00:02:47.820 --> 00:02:52.470
functions allows multiple logical
tests in evaluating a data set.

41
00:02:52.470 --> 00:02:56.520
This is useful when we want to do
something when any of the tests is true

42
00:02:56.520 --> 00:02:58.990
and something else when all
of the tests are false.

43
00:03:00.080 --> 00:03:03.810
Each function within the OR function
must be structured as a unique test.

44
00:03:03.810 --> 00:03:06.870
You can't simply list
the values being compared.

45
00:03:06.870 --> 00:03:10.390
And again, we'll come back to
specific examples of using If and

46
00:03:10.390 --> 00:03:13.940
Or during the problem sets for
this module.

47
00:03:13.940 --> 00:03:18.190
Lastly, combining, or nesting,
multiple If functions

48
00:03:18.190 --> 00:03:22.500
can be a powerful way to evaluate
chains of conditional logic.

49
00:03:22.500 --> 00:03:29.150
We can think of this as If a given
test is true, then do this.

50
00:03:29.150 --> 00:03:33.820
Otherwise, If our first test is true and

51
00:03:33.820 --> 00:03:37.740
another test is true,
then do something else.

52
00:03:37.740 --> 00:03:41.430
Otherwise, because none of
the previous tests is true and

53
00:03:41.430 --> 00:03:43.220
then do this other thing.

54
00:03:43.220 --> 00:03:46.898
Nested If functions can incorporate
additional formulas as parameters.

55
00:03:46.898 --> 00:03:50.163
We'll unlock some of the powerful uses for

56
00:03:50.163 --> 00:03:55.344
nested If functions as we work
through the problems in this module.

57
00:03:55.344 --> 00:04:00.140
Let's begin with the spreadsheet
accompanying this module.

58
00:04:00.140 --> 00:04:03.570
Before we dig into the exercises
associated with the module,

59
00:04:03.570 --> 00:04:07.050
let's take a moment to explore the data
set underlying all these problems.

60
00:04:08.240 --> 00:04:12.400
You see here that we have 11 columns and
just over a hundred or so

61
00:04:12.400 --> 00:04:16.810
records that comprise sales records for
a fictitional company

62
00:04:16.810 --> 00:04:20.250
across sales channels for their various
products throughout a period of time.

63
00:04:21.940 --> 00:04:27.010
One important thing to note about this
dataset is that it is structured formally

64
00:04:27.010 --> 00:04:28.030
as an Excel table.

65
00:04:29.320 --> 00:04:33.650
One thing this provides us is convenient
references when referring to data

66
00:04:33.650 --> 00:04:34.340
in that table.

67
00:04:35.450 --> 00:04:40.760
Rather than using column letters and row
numbers, we can use the name of the table,

68
00:04:40.760 --> 00:04:45.390
and special syntax,
to refer to the names of each column.

69
00:04:45.390 --> 00:04:49.720
These special references
are called structured references.

70
00:04:49.720 --> 00:04:52.170
We will provide additional
reading material for you, so

71
00:04:52.170 --> 00:04:55.400
that you can learn more
about this feature in Excel.

72
00:04:55.400 --> 00:04:58.730
Structured references and
named ranges in general,

73
00:04:58.730 --> 00:05:02.560
significantly increased
the readability of our spreadsheets.

74
00:05:02.560 --> 00:05:07.218
We encourage you to incorporate these
in your own spreadsheet analysis.

75
00:05:08.883 --> 00:05:15.037
[MUSIC]