WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:11.848 --> 00:00:12.876
Welcome back.

3
00:00:12.876 --> 00:00:17.440
In this video, we're going to look at
the role Python plays in data science and

4
00:00:17.440 --> 00:00:18.209
analytics.

5
00:00:18.209 --> 00:00:22.644
Python is an open source, general purpose
programming language that can be used for

6
00:00:22.644 --> 00:00:25.143
everything from building
web applications and

7
00:00:25.143 --> 00:00:29.760
enterprise programs to performing
analysis on large amounts of data.

8
00:00:29.760 --> 00:00:33.250
Python is popular because it
is freely available to use,

9
00:00:33.250 --> 00:00:37.800
emphasizes code readability, and
it is easy for newcomers to learn.

10
00:00:37.800 --> 00:00:41.020
Also, it is popular because
of its user friendliness and

11
00:00:41.020 --> 00:00:45.830
the ability to integrate with a variety
of programs, tools and websites.

12
00:00:45.830 --> 00:00:49.770
Python has become one of the most popular
languages for data management and

13
00:00:49.770 --> 00:00:50.590
analysis.

14
00:00:50.590 --> 00:00:53.490
Today, Python is widely
used by startups and

15
00:00:53.490 --> 00:00:57.330
tech companies to embed analytics
into their products, and

16
00:00:57.330 --> 00:01:01.970
by data scientists to quickly manage and
analyze large amounts of data.

17
00:01:01.970 --> 00:01:06.010
Python has a set of tools called
the Python Data Analytics Stack

18
00:01:06.010 --> 00:01:09.240
that address every step of
the analytics workflow.

19
00:01:09.240 --> 00:01:12.040
These tools are assembled
into Python libraries,

20
00:01:12.040 --> 00:01:15.220
which are collections of
code that are easy to use.

21
00:01:15.220 --> 00:01:18.200
While the names of these
specific libraries may change,

22
00:01:18.200 --> 00:01:21.970
here's a few examples of common
libraries for data science.

23
00:01:21.970 --> 00:01:26.550
Pandas for importing and assessing
data including outline analysis, and

24
00:01:26.550 --> 00:01:29.500
data cleansing,
as well as summary statistics.

25
00:01:29.500 --> 00:01:33.560
NumPY and SciPy for
performing extremely fast matrix,

26
00:01:33.560 --> 00:01:36.600
mathematical and scientific operations.

27
00:01:36.600 --> 00:01:41.351
Statsmodels for fitting a wide range
of statistical models to the data.

28
00:01:41.351 --> 00:01:45.363
Scikit-Learn from applying machine
learning techniques like, clustering,

29
00:01:45.363 --> 00:01:49.670
dimensionality reduction,
random forests and logistic regression.

30
00:01:49.670 --> 00:01:55.240
Matplotlib, Seaborn and Bokeh for
producing attractive visuals.

31
00:01:55.240 --> 00:01:57.380
And finally, Apache Spark, for

32
00:01:57.380 --> 00:02:01.980
processing data on a massive scale
across a cluster of computers.

33
00:02:01.980 --> 00:02:04.960
In addition to normal data science and
numeric data,

34
00:02:04.960 --> 00:02:09.730
Python has libraries that can also handle
unstructured data like text and images.

35
00:02:09.730 --> 00:02:15.510
For example, NLTK, Spacy, and
Gensim process text data.

36
00:02:15.510 --> 00:02:19.070
OpenCV manipulates and analyzes images.

37
00:02:19.070 --> 00:02:23.870
BeautifulSoup and Scrapy make
web scraping easy and intuitive.

38
00:02:23.870 --> 00:02:28.465
Python can interact with tools like
Caffe to use deep learning techniques

39
00:02:28.465 --> 00:02:30.762
on powerful GPU enabled machines for

40
00:02:30.762 --> 00:02:34.632
cutting edge machine learning on images,
sound, and text.

41
00:02:34.632 --> 00:02:38.644
And Flask or Django for building websites
and web services that can embed machine

42
00:02:38.644 --> 00:02:41.659
learning models that can be
accessed through the Internet.

43
00:02:42.710 --> 00:02:45.620
We've outlined some of
the capabilities of Python, but

44
00:02:45.620 --> 00:02:47.660
the big question is, why Python?

45
00:02:48.770 --> 00:02:53.040
Well, our boasts more extensive, advanced,
statistical model and capabilities.

46
00:02:53.040 --> 00:02:57.210
Where Python really shines is
when the data is unstructured or

47
00:02:57.210 --> 00:03:01.470
analytics need to be embedded in
other programs or applications.

48
00:03:01.470 --> 00:03:06.110
Because Python is a general purpose
programming language, it was easy for

49
00:03:06.110 --> 00:03:10.580
the community to build extremely efficient
libraries to process all kinds of data,

50
00:03:10.580 --> 00:03:16.605
and interact with many of the leading big
data tools like Hadoop or Apache Spark.

51
00:03:16.605 --> 00:03:22.375
Here at PWC, we rely on Python extensively
for many of our demonstration projects.

52
00:03:22.375 --> 00:03:26.775
We evaluate which leading data tool
to use based on the client's need.

53
00:03:26.775 --> 00:03:30.080
I'll highlight a couple of
examples where Python was used.

54
00:03:30.080 --> 00:03:33.700
First, there are projects that
use natural language processing.

55
00:03:33.700 --> 00:03:38.070
For example, you've heard describe our
work to help a major banking client

56
00:03:38.070 --> 00:03:41.760
understand the feedback it was getting
from it's customers through customer

57
00:03:41.760 --> 00:03:44.640
support channels, as well as social media.

58
00:03:44.640 --> 00:03:48.620
We use Python to scrape the data,
parse and understand it, and

59
00:03:48.620 --> 00:03:52.650
then describe the customer's sentiment
present in it to better priorities

60
00:03:52.650 --> 00:03:56.870
the issues the bank needed to address
to improve customer satisfaction.

61
00:03:56.870 --> 00:04:00.300
Ultimately, the client was able
to better mean customers need and

62
00:04:00.300 --> 00:04:01.670
increase customer engagement.

63
00:04:02.840 --> 00:04:07.275
On another recent project with an oil and
gas client who had a massive amount of

64
00:04:07.275 --> 00:04:13.770
census on pumps and oil wells, almost 1
billion records, we used Python as well.

65
00:04:13.770 --> 00:04:18.200
The goal was to create a machine learning
model to predict when any given pump

66
00:04:18.200 --> 00:04:21.030
might fail given its sensor readings.

67
00:04:21.030 --> 00:04:25.840
We used Python and Apache Spark to
efficiently process the data in parallel

68
00:04:25.840 --> 00:04:28.310
so we could do all of
our data cleaning and

69
00:04:28.310 --> 00:04:31.890
feature engineering before finally
fitting a variety of models to it.

70
00:04:32.960 --> 00:04:37.600
This was a good example of why Python
was chosen, not only because it let us

71
00:04:37.600 --> 00:04:42.870
process all high volume data, but
also because the client used Python and

72
00:04:42.870 --> 00:04:47.978
wanted deployable code that could be
kept after the engagement was completed.

73
00:04:47.978 --> 00:04:52.310
Ultimately, we were able to provide them
with models to predict pump failures

74
00:04:52.310 --> 00:04:54.780
two days in advance of an actual failure.

75
00:04:54.780 --> 00:04:55.460
Enough time for

76
00:04:55.460 --> 00:04:59.530
them to perform maintenance and
save on costly pump replacements.

77
00:04:59.530 --> 00:05:03.760
Sometimes the choice of the appropriate
analysis tool can seem daunting

78
00:05:03.760 --> 00:05:06.250
as there are so many options.

79
00:05:06.250 --> 00:05:10.100
Python is a great choice because it
handles many of the data science use

80
00:05:10.100 --> 00:05:14.910
cases, from simple descriptive statistic,s
to statistical models, to complex

81
00:05:14.910 --> 00:05:20.110
machine learning and distributed computing
embedded in dynamic web applications.

82
00:05:20.110 --> 00:05:24.460
Python is easy to use because it was
designed to be easy for programmers so

83
00:05:24.460 --> 00:05:27.450
that the learning curve is not too steep.

84
00:05:27.450 --> 00:05:30.510
If you haven't tried it yet,
it's worth exploring.

85
00:05:30.510 --> 00:05:34.790
In this video, we've discussed the role
of Python in data and analytics.

86
00:05:34.790 --> 00:05:38.986
Python is free, easy to use,
fast, and useful for

87
00:05:38.986 --> 00:05:42.800
both simple and
complex data analysis tasks.

88
00:05:42.800 --> 00:05:47.520
[MUSIC]