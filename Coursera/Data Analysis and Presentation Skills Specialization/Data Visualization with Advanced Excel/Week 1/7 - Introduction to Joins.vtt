WEBVTT

1
00:00:00.000 --> 00:00:08.071
[MUSIC]

2
00:00:08.071 --> 00:00:12.242
In this video we are going to
talk about the concept of joins.

3
00:00:12.242 --> 00:00:17.301
We will talk about what they are and
explore different types of joins.

4
00:00:17.301 --> 00:00:19.641
Let's start with what are joins and

5
00:00:19.641 --> 00:00:22.850
how they are used within
a relational database.

6
00:00:24.500 --> 00:00:29.300
Joins allow two different rows from
different tables to come together

7
00:00:29.300 --> 00:00:33.310
to become one large row containing
the value from both rows.

8
00:00:34.310 --> 00:00:37.530
This is why we build the relationships.

9
00:00:37.530 --> 00:00:41.600
Earlier we discussed how Vlookups
are types of relationships and

10
00:00:41.600 --> 00:00:46.260
allow us to append related
data to the end of a row.

11
00:00:46.260 --> 00:00:52.380
The joins now replace the Vlookup through
the primary and foreign key bridges.

12
00:00:52.380 --> 00:00:58.110
However, we now preserve the integrity
of table 1, while at the same time,

13
00:00:58.110 --> 00:01:02.240
it prevents the need to store
data in more than 1 table.

14
00:01:03.360 --> 00:01:09.120
If we did not have joins, data would
have to be captured in both tables

15
00:01:09.120 --> 00:01:13.600
as opposed to only one,
increasing the likelihood of an error.

16
00:01:14.640 --> 00:01:21.020
There are two primary types of joins,
one, inner join, and two, outer join.

17
00:01:22.370 --> 00:01:26.740
Let's look at the first type of join,
an inner join, and

18
00:01:26.740 --> 00:01:29.120
how it is used in a relational database.

19
00:01:30.190 --> 00:01:34.110
An inner join refers to
the intersection of the two tables.

20
00:01:34.110 --> 00:01:37.800
Let's say we have two tables, A and B.

21
00:01:37.800 --> 00:01:43.383
And let's say that the data
inside of table A is 1, 2, 3,

22
00:01:43.383 --> 00:01:49.856
4, and, let's say,
the data inside of table B is 3, 4, 5, 6.

23
00:01:49.856 --> 00:01:53.012
Inner join of A and B would give 3, 4,

24
00:01:53.012 --> 00:01:57.430
because that is where the two
tables have common data.

25
00:01:58.800 --> 00:02:02.120
Notice the venn diagram
shown on the screen.

26
00:02:02.120 --> 00:02:06.750
When we perform an inner join,
the result is common data.

27
00:02:06.750 --> 00:02:11.790
Going back to our example of the drivers
table and the vehicle table,

28
00:02:11.790 --> 00:02:17.370
the inner join would produce a table with
the data in common with the driver and

29
00:02:17.370 --> 00:02:19.130
the vehicle table.

30
00:02:19.130 --> 00:02:24.980
This is a nice representation of what data
we will get when we do each specific join.

31
00:02:26.070 --> 00:02:28.915
Now let's look at the next type of join,
outer join.

32
00:02:28.915 --> 00:02:32.920
An outer join will give
you the unions of A and

33
00:02:32.920 --> 00:02:36.950
B, all the columns in A and
all the columns in B.

34
00:02:36.950 --> 00:02:41.520
If something in A does not have
a corresponding data in B,

35
00:02:41.520 --> 00:02:44.360
then the B portion is null,
and vice versa.

36
00:02:45.530 --> 00:02:50.580
Let's say A has 1, 2, 3, 4 and B has 3,

37
00:02:50.580 --> 00:02:53.320
4, 5, 6, then an outer join on A and

38
00:02:53.320 --> 00:02:57.980
B will return the following data
set as shown on your screen.

39
00:02:59.460 --> 00:03:03.330
Notice how all data from
both tables is brought in.

40
00:03:03.330 --> 00:03:08.930
Also note how the missing data in
each data table is filled with null.

41
00:03:08.930 --> 00:03:14.360
The Venn diagram has a good representation
of what data is being brought in.

42
00:03:14.360 --> 00:03:19.020
The values of null are there
because it is unlinked data.

43
00:03:19.020 --> 00:03:21.170
For our driver example,

44
00:03:21.170 --> 00:03:25.830
the outer join would provide all
the fields from both the tables.

45
00:03:25.830 --> 00:03:30.660
So for each driver, that corresponding
personal information such as sex and

46
00:03:30.660 --> 00:03:34.100
from the vehicle table, make, model, etc.

47
00:03:34.100 --> 00:03:38.820
If a driver did not own a car, their
vehicle identification would be null.

48
00:03:40.340 --> 00:03:45.940
With outer joins, there are two sub-types,
left outer join and right outer join.

49
00:03:45.940 --> 00:03:51.120
A left outer join will give all columns
in A, plus any common columns in B.

50
00:03:52.210 --> 00:03:58.240
Let's say A has 1, 2, 3,
4, and B has 3, 4, 5, 6.

51
00:03:58.240 --> 00:04:02.120
Then a left outer join would yield 1,
2, 3, 4.

52
00:04:03.210 --> 00:04:08.220
This is because 1 and
2 already exist in table A, and

53
00:04:08.220 --> 00:04:11.740
3 and 4 are common between both tables.

54
00:04:11.740 --> 00:04:17.500
Notice in the result,
how we see null in the values of 1 and 2.

55
00:04:17.500 --> 00:04:22.960
This is because they do not exist in B but
they do exist in A.

56
00:04:24.680 --> 00:04:30.570
Again the Venn diagram is a good way to
visualize what data is being selected.

57
00:04:30.570 --> 00:04:35.200
For our driver example,
the left outer join would combine all

58
00:04:35.200 --> 00:04:40.187
the columns in the driver table
with corresponding common columns

59
00:04:40.187 --> 00:04:45.012
from the vehicle table, for
example, driver license number.

60
00:04:45.012 --> 00:04:48.989
If personal data like sex does
not exist in vehicle table,

61
00:04:48.989 --> 00:04:51.270
then it will be filled in as null.

62
00:04:52.430 --> 00:04:55.010
The last type of join is
the right outer join.

63
00:04:56.360 --> 00:05:00.350
A right outer join will
give all columns in table B

64
00:05:00.350 --> 00:05:03.780
plus any common columns in table A.

65
00:05:03.780 --> 00:05:09.551
Let's say A has 1, 2, 3,
4 and B has 3, 4, 5, 6.

66
00:05:09.551 --> 00:05:15.624
Then a right outer join would yield 3,
4, 5, 6, because 3 and

67
00:05:15.624 --> 00:05:21.500
4 are common in both tables and
5 and 6 already exist in table B.

68
00:05:23.000 --> 00:05:27.725
Again, notice how the null
value appears in the A column,

69
00:05:27.725 --> 00:05:29.951
but along side of 5 and 6.

70
00:05:29.951 --> 00:05:35.210
This is because 5 and
6 are present in B, but not in A.

71
00:05:35.210 --> 00:05:38.150
They are unlinked rows of data.

72
00:05:38.150 --> 00:05:43.730
As you can see, the right outer join and
left outer join have same functionality.

73
00:05:43.730 --> 00:05:47.610
If the order of the table is
reversed when joining you will

74
00:05:47.610 --> 00:05:52.320
get exactly the same
result as left outer join.

75
00:05:52.320 --> 00:05:55.180
In this video,
we discussed the concept of joins and

76
00:05:55.180 --> 00:05:57.560
explored different types of joins.

77
00:05:57.560 --> 00:06:02.540
This concludes the basic concept that
you need to know when working with and

78
00:06:02.540 --> 00:06:04.810
linking data sets.

79
00:06:04.810 --> 00:06:09.051
In the next video, we will discuss
how this is done in an actual

80
00:06:09.051 --> 00:06:12.978
computing environment using
a standardized language.

81
00:06:12.978 --> 00:06:19.179
[MUSIC]