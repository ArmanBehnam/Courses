WEBVTT

1
00:00:00.740 --> 00:00:03.015
In the last two lectures,

2
00:00:03.015 --> 00:00:06.405
I discussed how bitcoin
reaches distributed consensus.

3
00:00:06.405 --> 00:00:08.970
Nodes in a distributed
network are chosen

4
00:00:08.970 --> 00:00:11.865
at random in a thought
experiment to propose a block.

5
00:00:11.865 --> 00:00:13.800
Nodes that propose
a block receive

6
00:00:13.800 --> 00:00:15.690
bitcoins as a block reward.

7
00:00:15.690 --> 00:00:17.010
More precisely, they get to

8
00:00:17.010 --> 00:00:18.480
choose an address
to which to send

9
00:00:18.480 --> 00:00:22.020
the bitcoins because the
nodes are not addresses.

10
00:00:22.020 --> 00:00:23.970
If the block is accepted by

11
00:00:23.970 --> 00:00:27.045
subsequent nodes and becomes
part of the consensus,

12
00:00:27.045 --> 00:00:30.375
the chosen address gets
to keep the bitcoins.

13
00:00:30.375 --> 00:00:32.460
This is a brilliant scheme

14
00:00:32.460 --> 00:00:34.210
for incentivizing
honest behavior,

15
00:00:34.210 --> 00:00:36.360
but it does require
randomization,

16
00:00:36.360 --> 00:00:39.035
otherwise one node could
potentially take over.

17
00:00:39.035 --> 00:00:41.045
That works in
a thought experiment,

18
00:00:41.045 --> 00:00:43.745
but how can we make it work
in the physical world?

19
00:00:43.745 --> 00:00:46.135
The answer is mining.

20
00:00:46.135 --> 00:00:47.790
Well, bitcoin mining is

21
00:00:47.790 --> 00:00:50.090
a resource-intensive
activity that

22
00:00:50.090 --> 00:00:52.400
results in the discovery
of new coins.

23
00:00:52.400 --> 00:00:53.915
Thus the analogy to

24
00:00:53.915 --> 00:00:56.915
precious metals implicit
in the word mining.

25
00:00:56.915 --> 00:00:59.005
So here's how it works.

26
00:00:59.005 --> 00:01:02.480
Nodes compete to have a chance
to propose the next block,

27
00:01:02.480 --> 00:01:04.610
they succeed if they
are the first to

28
00:01:04.610 --> 00:01:07.175
solve what is called
a hash puzzle,

29
00:01:07.175 --> 00:01:10.675
the hash puzzle is essentially
a cryptographic puzzle.

30
00:01:10.675 --> 00:01:13.500
Puzzle-friendliness,
which if you recall,

31
00:01:13.500 --> 00:01:15.430
is a property of
the hash function,

32
00:01:15.430 --> 00:01:18.460
implies that such puzzles
can be found.

33
00:01:18.460 --> 00:01:20.420
Now, the only way to solve

34
00:01:20.420 --> 00:01:23.290
the cryptographic puzzle is
through trial and error,

35
00:01:23.290 --> 00:01:26.040
lots and lots of trial and error,

36
00:01:26.040 --> 00:01:27.560
think perhaps of hacking into

37
00:01:27.560 --> 00:01:30.215
a system by choosing
passwords at random.

38
00:01:30.215 --> 00:01:32.900
The greater the computing
power of the node,

39
00:01:32.900 --> 00:01:34.820
the more likely it is
to be able to solve

40
00:01:34.820 --> 00:01:35.930
the hash puzzle because the

41
00:01:35.930 --> 00:01:38.150
faster it can do
this trial and error.

42
00:01:38.150 --> 00:01:39.840
When it solves the hash puzzle,

43
00:01:39.840 --> 00:01:41.245
it proposes the block,

44
00:01:41.245 --> 00:01:42.740
with the potential to receive

45
00:01:42.740 --> 00:01:44.795
the block reward if
the block is accepted.

46
00:01:44.795 --> 00:01:49.790
Now, the block reward means
it has mined new bitcoins.

47
00:01:49.790 --> 00:01:51.390
Now, here's something
that's important,

48
00:01:51.390 --> 00:01:52.685
all nodes can verify

49
00:01:52.685 --> 00:01:54.150
that a given node has
solved the puzzle,

50
00:01:54.150 --> 00:01:56.485
so the system is
truly decentralized.

51
00:01:56.485 --> 00:01:57.860
Proof of work is, therefore,

52
00:01:57.860 --> 00:01:59.720
the solving of
a hash puzzle for which

53
00:01:59.720 --> 00:02:02.870
the node is rewarded by being
able to propose a block,

54
00:02:02.870 --> 00:02:04.840
but that may not be
much of a reward,

55
00:02:04.840 --> 00:02:06.410
the main reward, is

56
00:02:06.410 --> 00:02:08.540
the block reward which
is given in bitcoins.

57
00:02:08.540 --> 00:02:09.890
There's also transaction costs

58
00:02:09.890 --> 00:02:11.480
reward that I'll discuss later.

59
00:02:11.480 --> 00:02:13.340
So notice that the proof of work

60
00:02:13.340 --> 00:02:15.545
creates the randomness
that we were missing.

61
00:02:15.545 --> 00:02:17.600
For two competing
nodes, let's say,

62
00:02:17.600 --> 00:02:19.699
with roughly equal
processing power,

63
00:02:19.699 --> 00:02:21.695
there is simply no way to predict

64
00:02:21.695 --> 00:02:24.100
which node will solve
the puzzle first,

65
00:02:24.100 --> 00:02:26.695
and get to propose its block.

66
00:02:26.695 --> 00:02:30.570
Does this mean that block
selection is random?

67
00:02:30.570 --> 00:02:33.575
Well, if by random you
mean unpredictable?

68
00:02:33.575 --> 00:02:35.080
Then yes.

69
00:02:35.080 --> 00:02:36.800
Well, because the only way to

70
00:02:36.800 --> 00:02:38.720
predict which of
the competing nodes will

71
00:02:38.720 --> 00:02:40.760
win is by having
as much computing power

72
00:02:40.760 --> 00:02:42.395
as the two nodes combined.

73
00:02:42.395 --> 00:02:43.820
Because the answer of

74
00:02:43.820 --> 00:02:45.320
which one solves
the puzzle first can

75
00:02:45.320 --> 00:02:48.515
only be done by actually
solving the puzzle first.

76
00:02:48.515 --> 00:02:51.530
That means that to us which

77
00:02:51.530 --> 00:02:53.255
competing node will win is

78
00:02:53.255 --> 00:02:55.490
it's unpredictable
and hence random.

79
00:02:55.490 --> 00:02:59.690
Now, if by random you
mean non-deterministic?

80
00:02:59.690 --> 00:03:01.100
Then no.

81
00:03:01.100 --> 00:03:02.690
Because given a set of

82
00:03:02.690 --> 00:03:05.300
initial conditions of
the competing nodes,

83
00:03:05.300 --> 00:03:07.340
the process of which one gets

84
00:03:07.340 --> 00:03:09.845
to win is completely
deterministic.

85
00:03:09.845 --> 00:03:13.430
What this illustrates is
actually a deep point about

86
00:03:13.430 --> 00:03:15.080
randomness that
a process can both

87
00:03:15.080 --> 00:03:17.360
be deterministic and random,

88
00:03:17.360 --> 00:03:20.935
Henri Poincare made this point
in the 19th century,

89
00:03:20.935 --> 00:03:24.635
and it's pretty useful
for our purposes here.

90
00:03:24.635 --> 00:03:26.930
Block rewards are
the only way within

91
00:03:26.930 --> 00:03:30.080
the bitcoin reference software
for new coins to be mined.

92
00:03:30.080 --> 00:03:32.915
However, even block
rewards are limited.

93
00:03:32.915 --> 00:03:36.120
For every 210,000 blocks,

94
00:03:36.120 --> 00:03:38.160
the block reward is cut in half

95
00:03:38.160 --> 00:03:41.490
because the blocks are created
at a deterministic rate,

96
00:03:41.490 --> 00:03:44.350
this occurs approximately
every four years.

97
00:03:44.350 --> 00:03:47.540
So because the block reward
is cut in half,

98
00:03:47.540 --> 00:03:48.830
there is an exponential rate of

99
00:03:48.830 --> 00:03:51.275
decay in the growth
rate of blocks.

100
00:03:51.275 --> 00:03:52.790
It means that the total number of

101
00:03:52.790 --> 00:03:55.475
bitcoins will converge
to 21 million.

102
00:03:55.475 --> 00:03:58.265
So here's a graph that shows

103
00:03:58.265 --> 00:04:00.560
the total bitcoins as
a function of the year

104
00:04:00.560 --> 00:04:03.110
and so we've passed
the first inflection point.

105
00:04:03.110 --> 00:04:05.130
So the creation of new bitcoins

106
00:04:05.130 --> 00:04:06.670
allows the currency to be in

107
00:04:06.670 --> 00:04:08.600
limited supply at the beginning
and then the supply to

108
00:04:08.600 --> 00:04:11.060
grow and then to converge
to a fixed amount.

109
00:04:11.060 --> 00:04:12.410
By the way, this does not

110
00:04:12.410 --> 00:04:14.000
imply that bitcoin is subject to

111
00:04:14.000 --> 00:04:17.105
deflationary pressures as
claimed by Nouriel Roubini,

112
00:04:17.105 --> 00:04:18.590
even if the economy grows,

113
00:04:18.590 --> 00:04:21.290
we can just buy more things
with the current bitcoins.

114
00:04:21.290 --> 00:04:23.030
But what it does imply is that

115
00:04:23.030 --> 00:04:26.045
the bitcoin supply
cannot be manipulated.

116
00:04:26.045 --> 00:04:28.520
Now, the potential
rewards to mining

117
00:04:28.520 --> 00:04:30.740
go beyond the receipt
of bitcoins.

118
00:04:30.740 --> 00:04:32.450
They also include the receipt of

119
00:04:32.450 --> 00:04:34.280
something called a
transaction fee.

120
00:04:34.280 --> 00:04:36.740
The node proposes transactions
in which the value of

121
00:04:36.740 --> 00:04:38.210
the bitcoins coming in exceed

122
00:04:38.210 --> 00:04:40.010
the value of
the bitcoins going out.

123
00:04:40.010 --> 00:04:41.570
The remainder get to be paid

124
00:04:41.570 --> 00:04:43.445
to an address of the
nodes' choosing.

125
00:04:43.445 --> 00:04:46.280
So what the transactions
fees do is they

126
00:04:46.280 --> 00:04:49.485
ensure continuing incentives
for trade in bitcoin.

127
00:04:49.485 --> 00:04:52.400
So here's a graph of
the transaction fees,

128
00:04:52.400 --> 00:04:54.890
fees skyrocket in late 2017,

129
00:04:54.890 --> 00:04:57.110
but are now back to
being negligible.

130
00:04:57.110 --> 00:04:58.840
So to summarize,

131
00:04:58.840 --> 00:05:02.240
proof-of-work incentivizes
behavior through block reward.

132
00:05:02.240 --> 00:05:04.850
It creates randomization
by making nodes

133
00:05:04.850 --> 00:05:07.955
compete as to be the first
to solve a hash puzzle.

134
00:05:07.955 --> 00:05:09.920
Randomization that was only among

135
00:05:09.920 --> 00:05:11.975
nodes with the greatest
computing power.

136
00:05:11.975 --> 00:05:14.240
Proof of work builds
in currency creation

137
00:05:14.240 --> 00:05:16.265
and then ensure stabilization,

138
00:05:16.265 --> 00:05:18.050
transaction fees can then step

139
00:05:18.050 --> 00:05:19.930
into incentivize honest trading.

140
00:05:19.930 --> 00:05:22.070
Now, there are
drawbacks to proof of

141
00:05:22.070 --> 00:05:25.380
work that will be discussed
in the next lecture.