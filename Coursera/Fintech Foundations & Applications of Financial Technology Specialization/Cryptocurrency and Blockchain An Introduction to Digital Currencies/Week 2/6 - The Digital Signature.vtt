WEBVTT

1
00:00:01.339 --> 00:00:05.929
So as I discussed in the introduction
to this module, the first problem

2
00:00:05.929 --> 00:00:10.989
a cryptocurrency must solve, is it must
develop a system of property rights.

3
00:00:10.989 --> 00:00:14.501
So previous digital currencies
established property rights in

4
00:00:14.501 --> 00:00:17.890
somewhat cumbersome way and
this is perhaps why they failed.

5
00:00:17.890 --> 00:00:21.914
Now governments established a system
of property rights for their citizens.

6
00:00:21.914 --> 00:00:27.691
And for this reason, transferring assets
between jurisdictions is difficult.

7
00:00:27.691 --> 00:00:34.189
So as an experiment, let's say I want
to send $3,000 to a friend in Turkey.

8
00:00:34.189 --> 00:00:38.530
So I can do this very
easily using Western Union.

9
00:00:38.530 --> 00:00:43.075
So I can type in the amount I want to
send and I where I want to send it to.

10
00:00:43.075 --> 00:00:47.107
But whoa,
what kind of fees do I have to pay?

11
00:00:47.107 --> 00:00:52.922
Either I can do it practically for free,
maybe for $6, but I have to wait for

12
00:00:52.922 --> 00:00:58.130
four days, or if I want to do it
quickly I have to spend nearly $50.

13
00:00:58.130 --> 00:01:02.878
So it's actually quite expensive
to send some money to Turkey.

14
00:01:02.878 --> 00:01:05.086
Now why is it so expensive?

15
00:01:05.086 --> 00:01:08.573
Well, it comes down to
the institutions clearly.

16
00:01:08.573 --> 00:01:12.825
But ultimately, because institutions
arise for specific reasons.

17
00:01:12.825 --> 00:01:16.829
It is because we're dealing with
two different soverance here,

18
00:01:16.829 --> 00:01:20.336
and thus two different
definitions of property rights.

19
00:01:20.336 --> 00:01:24.924
Transferring between two systems of
property rights is inherently difficult,

20
00:01:24.924 --> 00:01:29.587
it's like you have to go through a no
man's land and that's why it's expensive.

21
00:01:29.587 --> 00:01:34.462
So in Bitcoin and other cryptocurrencies,
the system of property

22
00:01:34.462 --> 00:01:39.520
rights must somehow arise on its own and
they must be self enforcing.

23
00:01:39.520 --> 00:01:40.577
So how is this done?

24
00:01:40.577 --> 00:01:46.782
so the first question is who is it that
possesses the property rights anyway?

25
00:01:46.782 --> 00:01:52.113
So when it comes to us as citizens
of a country, we know who we are.

26
00:01:52.113 --> 00:01:57.612
But it's different when we think about
our participation in an online network.

27
00:01:57.612 --> 00:02:02.035
And in particular, if we want to say
link our participation in an online

28
00:02:02.035 --> 00:02:04.468
network to ourselves as human beings,

29
00:02:04.468 --> 00:02:09.355
this might be pretty cumbersome,
recall what happened to, say, DigiCash.

30
00:02:09.355 --> 00:02:13.404
So Bitcoin has quite an elegant answer.

31
00:02:13.404 --> 00:02:17.155
It just dispenses with the notion of the
human being in the background entirely.

32
00:02:17.155 --> 00:02:22.270
As far as Bitcoin is concerned,
you are your signature.

33
00:02:22.270 --> 00:02:27.124
And by a signature, I mean something quite
precise that I'm going to explain shortly.

34
00:02:27.124 --> 00:02:30.562
And you can have as many signatures and
hence as many identities as you want,

35
00:02:30.562 --> 00:02:32.182
there's nothing wrong with that.

36
00:02:32.182 --> 00:02:35.934
The signature has a private component,
sometimes called the private key and

37
00:02:35.934 --> 00:02:36.984
a public component.

38
00:02:36.984 --> 00:02:41.710
And this public component, the public
signature is synonymous with another

39
00:02:41.710 --> 00:02:45.209
term that's often used in
Bitcoin which is the address.

40
00:02:45.209 --> 00:02:49.788
So one key ingredient is one's
ability to authenticate transactions,

41
00:02:49.788 --> 00:02:54.076
and this is why linking identity
with the signature is so powerful.

42
00:02:54.076 --> 00:02:59.438
Now this authentication is especially
important when there's no physical cash or

43
00:02:59.438 --> 00:03:01.897
a check book as in an online currency.

44
00:03:01.897 --> 00:03:04.296
So our first question thus is,

45
00:03:04.296 --> 00:03:09.018
how is authentication enforced
in a decentralized system?

46
00:03:09.018 --> 00:03:12.630
In other words,
what is the digital signature?

47
00:03:12.630 --> 00:03:14.177
Well what is a signature?

48
00:03:14.177 --> 00:03:16.585
Of course we all have an intuition for
what a signature is.

49
00:03:16.585 --> 00:03:20.889
What is a signature when you
boil it down to its essentials?

50
00:03:20.889 --> 00:03:24.023
Well, signature is an object
with the following properties.

51
00:03:24.023 --> 00:03:27.744
First, only you can make it,
it's not foregeable.

52
00:03:27.744 --> 00:03:30.727
Second, anyone can verify it.

53
00:03:30.727 --> 00:03:33.223
And third, it's permanent.

54
00:03:33.223 --> 00:03:34.818
That's a signature.

55
00:03:34.818 --> 00:03:36.696
So what's a digital signature?

56
00:03:36.696 --> 00:03:40.621
It takes these properties and
makes them digital.

57
00:03:40.621 --> 00:03:44.511
So the first aspect of the digital
signature is something

58
00:03:44.511 --> 00:03:46.056
called a private key.

59
00:03:46.056 --> 00:03:50.923
What this literally is, is a 256 bit
number that's often expressed as

60
00:03:50.923 --> 00:03:54.308
a hexadecimal,
we'll see some examples of this.

61
00:03:54.308 --> 00:03:57.408
This private key is generated at random.

62
00:03:57.408 --> 00:04:01.390
Let's just assume for a moment that we
can generate a private key, at random.

63
00:04:01.390 --> 00:04:05.595
You can think about this as some
abstract notion of your signature.

64
00:04:05.595 --> 00:04:10.477
So you have a sense of what your signature
is even before it's written down on

65
00:04:10.477 --> 00:04:12.398
a particular piece of paper.

66
00:04:12.398 --> 00:04:14.835
So that's part one of a digital signature.

67
00:04:14.835 --> 00:04:20.112
Part two is a protocol for affixing this
private key to an electronic message.

68
00:04:20.112 --> 00:04:23.202
Think about this as
the actual written signature.

69
00:04:23.202 --> 00:04:27.449
And finally, there needs to be a protocol
for verifying that the signature is valid.

70
00:04:27.449 --> 00:04:32.114
This protocol, you have to be pretty
careful with it because it can't reveal

71
00:04:32.114 --> 00:04:33.925
the private key underneath.

72
00:04:33.925 --> 00:04:37.457
You can think about this as
people looking at your signature.

73
00:04:37.457 --> 00:04:40.126
And all of this has to
happen automatically.

74
00:04:40.126 --> 00:04:44.501
So we talked about the Bitcoin wallet,
say, Coinbase in the previous lecture.

75
00:04:44.501 --> 00:04:46.502
So when you transact with Bitcoin,

76
00:04:46.502 --> 00:04:49.446
your wallet automatically
affixes the signature.

77
00:04:49.446 --> 00:04:56.545
And then the Bitcoin exchange,
automatically verifies the signature.

78
00:04:56.545 --> 00:05:00.373
So as I said, it's very important
that no one can forge your signature.

79
00:05:00.373 --> 00:05:04.390
And this really needs to be impossible
here because there is no police department

80
00:05:04.390 --> 00:05:07.831
or course that can come in and
say well, this was a forged signature.

81
00:05:07.831 --> 00:05:09.853
It really needs to be impossible.

82
00:05:09.853 --> 00:05:14.637
And it is also very important that no one
can replicate your signature after reading

83
00:05:14.637 --> 00:05:15.331
a message.

84
00:05:15.331 --> 00:05:20.857
Thus, the creation of the signature must
truly be random or as close to random as

85
00:05:20.857 --> 00:05:27.293
possible, otherwise somebody could reverse
engineer the signature creation algorithm,

86
00:05:27.293 --> 00:05:31.187
say, from your wallet and
then obtain your signature.

87
00:05:31.187 --> 00:05:35.663
And affixing the signature to the message
must also be a process involving

88
00:05:35.663 --> 00:05:40.573
encryption because it must be impossible
to back out your signature from looking

89
00:05:40.573 --> 00:05:44.273
at the signed message, and
that also involves randomness.

90
00:05:44.273 --> 00:05:46.819
And this is actually a challenge.

91
00:05:46.819 --> 00:05:52.575
So think about for a moment what makes
physical signatures so difficult to forge.

92
00:05:52.575 --> 00:05:55.439
A physical signature is
created by a human being and

93
00:05:55.439 --> 00:05:59.701
as we all know there's a lot of built-in
randomness to being a human being,

94
00:05:59.701 --> 00:06:03.121
no two humans are alike and
thus no two signatures are alike.

95
00:06:03.121 --> 00:06:05.605
And moreover,
no person is the same on everyday.

96
00:06:05.605 --> 00:06:08.979
So, your signature is not
the same on everyday.

97
00:06:08.979 --> 00:06:14.565
So there's randomness at both
steps of signature creation.

98
00:06:14.565 --> 00:06:18.989
First, there's abstract signature
that you've created that you attempt

99
00:06:18.989 --> 00:06:21.823
to replicate every time
you sign something, and

100
00:06:21.823 --> 00:06:25.851
second, the actual signing both
of those involve true randomness.

101
00:06:25.851 --> 00:06:30.956
Now one might think that producing
randomness is easy, but actually it's not.

102
00:06:30.956 --> 00:06:35.901
So this randomness that we
as humans possess must be

103
00:06:35.901 --> 00:06:39.470
produced by the Bitcoin protocols.

104
00:06:39.470 --> 00:06:43.904
Now those familiar with coding
will heard of the concept known as

105
00:06:43.904 --> 00:06:48.924
a random-number generators is very,
very useful as a coding concept.

106
00:06:48.924 --> 00:06:53.415
And many programs have in them
random number generators.

107
00:06:53.415 --> 00:06:57.017
This is software that produces
a string of random numbers.

108
00:06:57.017 --> 00:07:02.308
It's software that produces
a string of random numbers, really?

109
00:07:02.308 --> 00:07:04.434
No, of course not, right?

110
00:07:04.434 --> 00:07:07.945
How could it actually be random?

111
00:07:07.945 --> 00:07:09.060
It's not random, right?

112
00:07:09.060 --> 00:07:14.372
It is an algorithm for producing
a series of numbers that look random,

113
00:07:14.372 --> 00:07:17.531
but really are not random at all, right?

114
00:07:17.531 --> 00:07:22.297
How could a deterministic process which is
what a software is, produce randomness?

115
00:07:22.297 --> 00:07:23.322
Answer, it can't.

116
00:07:23.322 --> 00:07:27.632
So in fact,
there is no such thing as a random number

117
00:07:27.632 --> 00:07:30.656
generator when applied to coding.

118
00:07:30.656 --> 00:07:32.276
So the more correct name for

119
00:07:32.276 --> 00:07:36.081
a random number generator is
a pseudo random number generator,

120
00:07:36.081 --> 00:07:41.020
because a computer algorithm created by
a human could potentially be discovered.

121
00:07:41.020 --> 00:07:46.919
So Bitcoin uses a very good source of
randomness for generating signatures,

122
00:07:46.919 --> 00:07:50.834
but no computer generated
randomness is perfect.

123
00:07:50.834 --> 00:07:55.691
Now, this is not proven to be a problem,
so far.

124
00:07:55.691 --> 00:08:00.343
So just to summarize, Bitcoin is
a decentralized system of property rights.

125
00:08:00.343 --> 00:08:04.767
And key to this notion of property
rights is a notion of identity.

126
00:08:04.767 --> 00:08:09.448
Now, the way we verify our identities
is through the use of a signature,

127
00:08:09.448 --> 00:08:12.156
that's in the real non-digital world.

128
00:08:12.156 --> 00:08:16.415
And what Bitcoin does is it makes
a signature in the identity one and

129
00:08:16.415 --> 00:08:17.108
the same.

130
00:08:17.108 --> 00:08:21.023
So a digital signature defines
each Bitcoin transactions.

131
00:08:21.023 --> 00:08:26.423
These signatures at the core of Bitcoin
require randomness and the randomness

132
00:08:26.423 --> 00:08:31.843
is imperfect, but so far this imperfection
has not proved to be problematic.