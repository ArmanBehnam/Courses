WEBVTT

1
00:00:00.580 --> 00:00:03.400
You're almost ready to use your new model.

2
00:00:03.400 --> 00:00:06.910
All you have left to do is
compute the accuracy metric.

3
00:00:06.910 --> 00:00:08.170
To evaluate your model,

4
00:00:08.170 --> 00:00:12.490
you want to start by passing the test
sets through it to get your predictions.

5
00:00:12.490 --> 00:00:14.240
Then compute the arg max or

6
00:00:14.240 --> 00:00:18.150
the points where your function reaches
its maximum, across the prediction array.

7
00:00:19.215 --> 00:00:23.450
You'll also need to make sure your
arrays are padded using the PAT token,

8
00:00:23.450 --> 00:00:25.130
which makes your arrays the same length.

9
00:00:26.250 --> 00:00:27.330
At last,

10
00:00:27.330 --> 00:00:32.330
compare the outputs against your test
labels to see how accurate your model is.

11
00:00:32.330 --> 00:00:36.090
This is how those operations
might look in Python and NumPy.

12
00:00:36.090 --> 00:00:39.940
Note that the arg max function
takes an access parameter.

13
00:00:39.940 --> 00:00:44.990
To indicate this accurately, you'll need
to consider the dimensions of your array.

14
00:00:44.990 --> 00:00:46.730
Here it's set to 2.

15
00:00:46.730 --> 00:00:49.400
The mask variable is where you identify

16
00:00:49.400 --> 00:00:53.170
any token IDs you need to
skip over during evaluation.

17
00:00:53.170 --> 00:00:56.470
One token you might want
to skip is your PAT token.

18
00:00:56.470 --> 00:00:59.210
Think about how you might
write this quickly and simply.

19
00:01:00.220 --> 00:01:06.170
Finally, the accuracy metric is computed
by taking the sum of all your test labels,

20
00:01:06.170 --> 00:01:09.960
and dividing it by the sum
of all your mask tokens.

21
00:01:09.960 --> 00:01:12.320
Nice, that's right, no?

22
00:01:12.320 --> 00:01:14.410
You've now reached
the conclusion of this week.

23
00:01:14.410 --> 00:01:18.550
Congratulations, and remember,
when you pad your tokens,

24
00:01:18.550 --> 00:01:20.800
you should mask them
before computing accuracy.

25
00:01:21.840 --> 00:01:26.830
Now you're able to process your data,
generate it in batches, and test it for

26
00:01:26.830 --> 00:01:27.410
accuracy.

27
00:01:28.430 --> 00:01:31.700
You should have everything you need for
the coding assignments.

28
00:01:31.700 --> 00:01:34.530
Best of luck with the assignments,
and remember to have fun.