WEBVTT

1
00:00:00.700 --> 00:00:04.680
Hello, in this video you're going
to learn about Euclidean distance,

2
00:00:04.680 --> 00:00:06.870
which is a similarity metric.

3
00:00:06.870 --> 00:00:10.380
This metric allows you to
identify how far two points or

4
00:00:10.380 --> 00:00:13.180
two vectors are apart from each other.

5
00:00:13.180 --> 00:00:17.160
During this segment, you will get the
Euclidean distance between two documents

6
00:00:17.160 --> 00:00:19.940
vectors like the ones
from the previous video.

7
00:00:19.940 --> 00:00:24.730
And then generalize that notion to
vector spaces in higher dimensions.

8
00:00:24.730 --> 00:00:28.580
Let's use two of the corpora
vectors you saw previously.

9
00:00:28.580 --> 00:00:31.261
Remember, in that's example,
there were two dimensions.

10
00:00:31.261 --> 00:00:35.848
The number of times that the word data and
the word film appeared in the Corpus.

11
00:00:35.848 --> 00:00:39.160
Corpus A will be
the entertainment Corpus and

12
00:00:39.160 --> 00:00:43.070
Corpus B will be the machine
learning Corpus.

13
00:00:43.070 --> 00:00:46.280
Now let's represent those vectors
as points in the vector space.

14
00:00:47.450 --> 00:00:52.550
The Euclidean distance is the length of
the straight line segment connecting them.

15
00:00:52.550 --> 00:00:55.690
To get that value,
you should use the following formula.

16
00:00:55.690 --> 00:00:59.770
The first term is their
horizontal distance squared and

17
00:00:59.770 --> 00:01:03.160
the second term is their
vertical distance squared.

18
00:01:03.160 --> 00:01:07.640
As you see, this formula is an example
of the Pythagorean theorem.

19
00:01:07.640 --> 00:01:09.968
If you solve for
each of the terms in the equation,

20
00:01:09.968 --> 00:01:11.804
you should arrive at this expression.

21
00:01:11.804 --> 00:01:18.372
And at last, get a Euclidean distance
approximately equal to 10,667,

22
00:01:18.372 --> 00:01:22.760
feel free to pause the video and
check this process.

23
00:01:25.426 --> 00:01:27.427
When you have higher dimensions,

24
00:01:27.427 --> 00:01:30.467
the Euclidean distance is
not much more difficult.

25
00:01:30.467 --> 00:01:33.689
Let's walk through an example using
the following co-occurrence matrix.

26
00:01:33.689 --> 00:01:39.089
Suppose that you want to know
the Euclidean distance between the vector

27
00:01:39.089 --> 00:01:44.495
v of the word ice cream and the vector
representation w of the word boba.

28
00:01:44.495 --> 00:01:48.338
To start, you need to get the difference
between each of their dimensions,

29
00:01:48.338 --> 00:01:53.170
square those differences, sum them up and
then get the square root of your results.

30
00:01:53.170 --> 00:01:57.020
This process is the generalization
of the one from the last slide.

31
00:01:57.020 --> 00:02:00.920
This is the formula that you would
use to get the Euclidean distance

32
00:02:00.920 --> 00:02:05.570
between vector representations on
an n-dimensional vector space.

33
00:02:05.570 --> 00:02:09.490
If you remember from algebra,
this formula is known as the norm

34
00:02:09.490 --> 00:02:12.080
of the difference between
the vectors that you are comparing.

35
00:02:14.020 --> 00:02:18.340
Let's take a look at the implementation
of the Euclidean distance in Python.

36
00:02:18.340 --> 00:02:20.769
If you have to vector a presentations,

37
00:02:20.769 --> 00:02:23.787
like the ones from the previous example,
you can

38
00:02:23.787 --> 00:02:28.736
use the linalg module from numpy to get
the norm of the difference between them.

39
00:02:28.736 --> 00:02:32.484
If you implement this code in Python,
you should get this results,

40
00:02:32.484 --> 00:02:35.461
the norm function works for
n-dimensional spaces.

41
00:02:37.753 --> 00:02:41.800
The primary takeaways here are that the
Euclidean distance is basically the length

42
00:02:41.800 --> 00:02:45.190
of the straight line that's
connects two vectors.

43
00:02:45.190 --> 00:02:48.700
And that to get the Euclidean distance,
you have to calculate the norm

44
00:02:48.700 --> 00:02:52.050
of the difference between
the vectors that you are comparing.

45
00:02:52.050 --> 00:02:57.432
By using this metric, you can get a sense
of how similar two documents or words are.

46
00:02:57.432 --> 00:03:01.529
Now that you have learned Euclidean
distance, in the next video,

47
00:03:01.529 --> 00:03:05.050
I will show you a different
type of similarity function.

48
00:03:05.050 --> 00:03:08.241
Concretely, I'll show you
the cosine similarity function,

49
00:03:08.241 --> 00:03:11.470
which is one of the most
popular similarity functions.

50
00:03:11.470 --> 00:03:12.440
See you in the next video.