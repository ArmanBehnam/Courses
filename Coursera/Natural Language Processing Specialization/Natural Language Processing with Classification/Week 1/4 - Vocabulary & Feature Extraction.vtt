WEBVTT

1
00:00:00.000 --> 00:00:02.940
Hello. Welcome back.
In this video,

2
00:00:02.940 --> 00:00:04.170
you're going to learn how to

3
00:00:04.170 --> 00:00:07.305
represent a text as a vector.

4
00:00:07.305 --> 00:00:09.180
In order for you to do so,

5
00:00:09.180 --> 00:00:10.455
you first have to build

6
00:00:10.455 --> 00:00:12.960
a vocabulary and that
will allow you to

7
00:00:12.960 --> 00:00:17.460
encode any text or any tweet
as an array of numbers.

8
00:00:17.460 --> 00:00:20.565
So let's dive in and see
how you can do this.

9
00:00:20.565 --> 00:00:22.815
Picture a list of tweets,

10
00:00:22.815 --> 00:00:24.945
visually it would look like this.

11
00:00:24.945 --> 00:00:26.955
Then your vocabulary, V,

12
00:00:26.955 --> 00:00:28.830
would be the list of unique words

13
00:00:28.830 --> 00:00:30.120
from your list of tweets.

14
00:00:30.120 --> 00:00:31.770
To get that list,

15
00:00:31.770 --> 00:00:33.825
you'll have to go through
all the words from

16
00:00:33.825 --> 00:00:35.415
all your tweets and save

17
00:00:35.415 --> 00:00:37.845
every new word that
appears in your search.

18
00:00:37.845 --> 00:00:39.390
So in this example,

19
00:00:39.390 --> 00:00:41.695
you'd have the word I,

20
00:00:41.695 --> 00:00:45.700
then the word, am and happy,

21
00:00:45.700 --> 00:00:48.915
because, and so forth.

22
00:00:48.915 --> 00:00:51.140
But note that the
word I and the word

23
00:00:51.140 --> 00:00:55.170
am would not be repeated
in the vocabulary.

24
00:00:55.610 --> 00:00:58.240
Let's take this
tweets and extract

25
00:00:58.240 --> 00:01:00.755
features using your vocabulary.

26
00:01:00.755 --> 00:01:02.690
To do so, you'd have to check if

27
00:01:02.690 --> 00:01:05.705
every word from your vocabulary
appears in the tweet.

28
00:01:05.705 --> 00:01:09.455
If it does like in the
case of the word I,

29
00:01:09.455 --> 00:01:13.865
you would assign a value of 1
to that feature, like this.

30
00:01:13.865 --> 00:01:16.580
If it doesn't appear,
you'd assign a value

31
00:01:16.580 --> 00:01:19.065
of 0, like that.

32
00:01:19.065 --> 00:01:22.040
In this example, the
representation of your tweet would

33
00:01:22.040 --> 00:01:25.685
have six ones and many zeros.

34
00:01:25.685 --> 00:01:27.860
These correspond to
every unique word from

35
00:01:27.860 --> 00:01:30.505
your vocabulary that
isn't in the tweet.

36
00:01:30.505 --> 00:01:32.630
Now, this type of representation

37
00:01:32.630 --> 00:01:34.400
with a small relative number of

38
00:01:34.400 --> 00:01:38.645
non-zero values is called
a sparse representation.

39
00:01:38.645 --> 00:01:40.490
Now let's take a closer look at

40
00:01:40.490 --> 00:01:42.470
this representation
of these tweet.

41
00:01:42.470 --> 00:01:43.940
In the last slides,

42
00:01:43.940 --> 00:01:45.350
I walked you through extracting

43
00:01:45.350 --> 00:01:47.210
features to represent the tweet

44
00:01:47.210 --> 00:01:51.205
based on a vocabulary and
I arrived at this vector.

45
00:01:51.205 --> 00:01:53.630
This representation
would have a number of

46
00:01:53.630 --> 00:01:56.930
features equal to the size
of your entire vocabulary.

47
00:01:56.930 --> 00:01:58.790
This would have a lot of

48
00:01:58.790 --> 00:02:01.645
features equal to
0 for every tweet.

49
00:02:01.645 --> 00:02:03.710
With the sparse representation,

50
00:02:03.710 --> 00:02:05.600
a logistic regression
model would have

51
00:02:05.600 --> 00:02:07.790
to learn n plus 1 parameters,

52
00:02:07.790 --> 00:02:09.950
where n would be
equal to the size of

53
00:02:09.950 --> 00:02:11.930
your vocabulary and you can

54
00:02:11.930 --> 00:02:14.270
imagine that for large
vocabulary sizes,

55
00:02:14.270 --> 00:02:15.905
this would be problematic.

56
00:02:15.905 --> 00:02:18.440
It would take an excessive
amount of time to train

57
00:02:18.440 --> 00:02:20.150
your model and much more time

58
00:02:20.150 --> 00:02:22.475
than necessary to
make predictions.

59
00:02:22.475 --> 00:02:25.825
Given a text, you learned
how to represent this text

60
00:02:25.825 --> 00:02:28.910
as a vector of dimension
V. Specifically,

61
00:02:28.910 --> 00:02:31.640
you did this for a tweet
and you were able to build

62
00:02:31.640 --> 00:02:33.410
a vocabulary of dimension

63
00:02:33.410 --> 00:02:35.900
V. Now as V gets
larger and larger,

64
00:02:35.900 --> 00:02:37.580
you will face certain problems.

65
00:02:37.580 --> 00:02:38.705
In the next video,

66
00:02:38.705 --> 00:02:41.850
you will learn to
identify these problems.