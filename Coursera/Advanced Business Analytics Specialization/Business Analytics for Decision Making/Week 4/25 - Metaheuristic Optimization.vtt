WEBVTT

1
00:00:00.280 --> 00:00:04.324
Optimization problems with integer
variables are very difficult to solve.

2
00:00:04.324 --> 00:00:09.550
In the last video, you learned how to
formulate a problem with binary variables.

3
00:00:09.550 --> 00:00:13.480
The mathematical formulation looks
very similar to the formulation

4
00:00:13.480 --> 00:00:15.650
of problems with continuous variables.

5
00:00:16.650 --> 00:00:21.918
While the formulations might look similar,
the solution methods are very different.

6
00:00:21.918 --> 00:00:26.462
If the models are as small as the ones we
have been using in this course then you

7
00:00:26.462 --> 00:00:31.148
are not going to notice the difference
between solving models with continuous

8
00:00:31.148 --> 00:00:34.170
variables and
models with integer variables.

9
00:00:34.170 --> 00:00:36.660
They're both going to solve fairly fast.

10
00:00:36.660 --> 00:00:40.059
The problem starts when you're
trying to solve larger models.

11
00:00:41.170 --> 00:00:45.750
The techniques for solving problems
with continuous variables are such that

12
00:00:45.750 --> 00:00:48.040
they can tackle very large models.

13
00:00:48.040 --> 00:00:52.610
The same cannot be said about solution
methods for models with integer variables.

14
00:00:52.610 --> 00:00:57.439
This is why researchers have developed
alternative methodologies to

15
00:00:57.439 --> 00:00:59.493
deal with integer problems.

16
00:00:59.493 --> 00:01:03.514
These methodologies are capable of
finding very good solutions but

17
00:01:03.514 --> 00:01:06.982
they cannot guarantee for
these solutions to be optimal.

18
00:01:06.982 --> 00:01:12.070
The solution procedures based on these
methodologies are designed to search for

19
00:01:12.070 --> 00:01:15.902
improved solutions, however,
at some point they give up.

20
00:01:15.902 --> 00:01:19.396
And they return the best
solution that they find,

21
00:01:19.396 --> 00:01:24.880
the best solution that they found
could be optimal, but we don't know.

22
00:01:24.880 --> 00:01:28.342
These methodologies are known
as Metaheuristics, and

23
00:01:28.342 --> 00:01:32.327
the solutions that they find
are known as heuristic solutions.

24
00:01:32.327 --> 00:01:35.970
Metaheuristics provide great flexibility.

25
00:01:35.970 --> 00:01:39.890
The modeling of the problem is
not limited to linear functions.

26
00:01:39.890 --> 00:01:45.050
An Excel model to be solved with
Metaheuristics can have anything you want.

27
00:01:45.050 --> 00:01:50.519
For example, nonlinear functions, such
as logarithmic or exponential functions.

28
00:01:50.519 --> 00:01:54.706
Non-smooth functions,
such as IF or LOOKUP functions.

29
00:01:54.706 --> 00:01:57.460
Let's take a look at an example.

30
00:01:57.460 --> 00:02:02.200
Market basket analysis is a technique
to generate practical rules.

31
00:02:02.200 --> 00:02:07.910
That the store can apply in order to
maximize its cross-selling opportunities.

32
00:02:07.910 --> 00:02:12.940
The objective of the analysis is
to establish rules that state if

33
00:02:12.940 --> 00:02:17.000
x is purchased,
then y is also likely to be purchased.

34
00:02:17.000 --> 00:02:21.731
The analyses also produces
statistical evidence that the rules

35
00:02:21.731 --> 00:02:26.819
are the result of some systematic
behavior and not just pure chance.

36
00:02:26.819 --> 00:02:31.360
To measure the strength of
the relationship between two items,

37
00:02:31.360 --> 00:02:35.238
market basket analysis uses the so
called Lift Ratio.

38
00:02:35.238 --> 00:02:37.238
If we have items x and

39
00:02:37.238 --> 00:02:42.888
y then the Lift Ratio tells us
how much more likely it is for

40
00:02:42.888 --> 00:02:49.320
item y to be purchased given
that item x has been purchased.

41
00:02:49.320 --> 00:02:54.500
For example, a Lift Ratio of
two tells us that the moment

42
00:02:54.500 --> 00:02:59.640
x is purchased then the probability
that y is also purchased doubles.

43
00:02:59.640 --> 00:03:05.840
A common assumption is that maximizing
cross-selling opportunities is equivalent

44
00:03:05.840 --> 00:03:12.310
to maximizing the total lift ratios of
products that are close to each other.

45
00:03:12.310 --> 00:03:15.080
Proximity depends on the context,

46
00:03:15.080 --> 00:03:20.520
in e-commerce proximity means showing
related products on a web page.

47
00:03:20.520 --> 00:03:24.338
For example,
proximity is to show an ad for

48
00:03:24.338 --> 00:03:30.074
a toner cartridge on a web page
that advertises a laser printer.

49
00:03:30.074 --> 00:03:31.625
In physical spaces,

50
00:03:31.625 --> 00:03:37.330
proximity is achieved by placing
related products near each other.

51
00:03:37.330 --> 00:03:41.150
Let's see how Heuristic Optimization
can help with this problem.

52
00:03:41.150 --> 00:03:45.550
Assume that a market basket analysis for
a chain of grocery stores

53
00:03:45.550 --> 00:03:50.850
produces the Lift Ratios for six
product categories shown in this table.

54
00:03:50.850 --> 00:03:55.410
The store will like to figure out
the optimal placement of the products

55
00:03:55.410 --> 00:03:59.120
in order to maximize the total lift ratio

56
00:03:59.120 --> 00:04:02.600
of product categories that
are close to each other.

57
00:04:02.600 --> 00:04:07.260
The lift of a location is a sum of for
the lift ratios for

58
00:04:07.260 --> 00:04:09.950
the immediately adjacent locations.

59
00:04:09.950 --> 00:04:15.820
In this example the lift for Produce is
the sum of the lift ratios of Produce and

60
00:04:15.820 --> 00:04:20.500
Dairy, Produce and Meat, and
Produce and Soft Drinks.

61
00:04:20.500 --> 00:04:23.465
Let's take a look at the special mold for
this problem.

62
00:04:23.465 --> 00:04:28.420
Locate and open the Excel file
Store Layout Optimization.

63
00:04:28.420 --> 00:04:31.122
There are three tables
in this spreadsheet.

64
00:04:31.122 --> 00:04:36.440
The first one contains the Lift Ratios
produced by the market basket analysis.

65
00:04:36.440 --> 00:04:39.710
The second table contains
the decision variables.

66
00:04:39.710 --> 00:04:43.730
The variables consist of
the index of the product category

67
00:04:43.730 --> 00:04:47.360
that is placed in each
position of the Store Layout.

68
00:04:47.360 --> 00:04:49.999
The placement shown here is arbitrary,

69
00:04:49.999 --> 00:04:53.190
it follows the order of
the product categories.

70
00:04:53.190 --> 00:05:00.850
We have 1, 2, and 3 in the first row,
and then 4, 5, and 6 in the second row.

71
00:05:00.850 --> 00:05:05.451
The next table calculates the lift
values for each position in the layout.

72
00:05:05.451 --> 00:05:12.070
For instance, product category 1, which
is Produce, is assigned to position A1.

73
00:05:13.150 --> 00:05:18.534
The lift for position of A1 is the sum
of the Lift Ratios between Produce and

74
00:05:18.534 --> 00:05:21.781
Dairy, which is assigned
to position A2 and

75
00:05:21.781 --> 00:05:26.331
Produce and Soft Drinks,
which are assigned to position B1.

76
00:05:26.331 --> 00:05:32.322
That is 1.2 plus 0.9, which equals 2.1.

77
00:05:32.322 --> 00:05:38.070
Note that the model uses the INDEX
Function to calculate all the Lift values.

78
00:05:38.070 --> 00:05:41.330
The use of this function
is not allowed in Linear or

79
00:05:41.330 --> 00:05:43.720
into your programming formulations.

80
00:05:43.720 --> 00:05:48.900
This is why we are not going to be able
the standard LP solver for this problem.

81
00:05:48.900 --> 00:05:53.130
The Total lift is the sum
of all the lift values.

82
00:05:53.130 --> 00:05:58.320
Click on the ASP tab to
access the Optimization Mode.

83
00:05:58.320 --> 00:06:02.440
You can see that the objective
is to maximize the Total lift.

84
00:06:02.440 --> 00:06:05.875
The variables are the product category

85
00:06:05.875 --> 00:06:10.777
placements in the light
gold cells from C14 to E15.

86
00:06:10.777 --> 00:06:14.930
ASP includes the all
different Constraints.

87
00:06:14.930 --> 00:06:19.100
This constraint type is only
available in heuristic optimization.

88
00:06:19.100 --> 00:06:24.499
It indicates that the values of
the decision variables must be integer and

89
00:06:24.499 --> 00:06:25.728
all different.

90
00:06:25.728 --> 00:06:28.800
This is exactly what we need for
this model.

91
00:06:28.800 --> 00:06:33.225
The metaheuristic solver in ASP
is called evolutionary engine.

92
00:06:33.225 --> 00:06:38.705
We can either click on the Engine tab and
choose Standard Evolutionary Engine

93
00:06:38.705 --> 00:06:44.240
from the drop-down menu or
let ASP choose the engine automatically.

94
00:06:44.240 --> 00:06:46.838
We're going to let ASP choose an engine.

95
00:06:46.838 --> 00:06:49.919
Click on the Mall tab, and
then on the Play Button,

96
00:06:49.919 --> 00:06:52.150
to start the optimization process.

97
00:06:53.165 --> 00:06:57.095
ASP finds a solution, and
reports that the solver has converged.

98
00:06:57.095 --> 00:07:02.032
Note, that this message is different from
me stating that the optimal solution has

99
00:07:02.032 --> 00:07:02.817
been found.

100
00:07:02.817 --> 00:07:08.962
ASP uses green as an indicator that it has
found and confirmed the optimal solution.

101
00:07:08.962 --> 00:07:11.285
Click on the Output tab,

102
00:07:11.285 --> 00:07:16.570
ASP runs a diagnosis to figure
out what engine to use.

103
00:07:16.570 --> 00:07:21.753
During this process you found out that
the model includes a non-smooth operation,

104
00:07:21.753 --> 00:07:23.430
the INDEX function.

105
00:07:23.430 --> 00:07:29.000
The model is diagnosed as NSP,
non-smooth problem.

106
00:07:29.000 --> 00:07:33.620
This is why ASP selected
the Standard Evolutionary Engine.

107
00:07:33.620 --> 00:07:37.200
The rest of the output shows some
information about the search

108
00:07:37.200 --> 00:07:39.420
that we're not going to discuss.

109
00:07:39.420 --> 00:07:41.335
As you can see from this example,

110
00:07:41.335 --> 00:07:47.060
metaheuristic optimization allows
you to develop very flexible models.

111
00:07:47.060 --> 00:07:51.790
With this technology, we are not
restricted to linear functions or

112
00:07:51.790 --> 00:07:54.700
to the three standard
types of constraints.

113
00:07:54.700 --> 00:07:58.911
The application of metaheuristic
optimization to problems

114
00:07:58.911 --> 00:08:03.789
in industry has increased
exponentially since the early 1990s.

115
00:08:04.890 --> 00:08:09.663
Commercial software is available to
tackle large and complex problems.

116
00:08:09.663 --> 00:08:14.346
The purpose of this video was to
introduce you to a technology that

117
00:08:14.346 --> 00:08:19.470
represents one of the most advanced
forms of prescriptive analytics.