WEBVTT

1
00:00:00.320 --> 00:00:06.330
For the most part, we had kept uncertainty
out of our prescriptive analytic models.

2
00:00:06.330 --> 00:00:08.890
In this last part of our course,

3
00:00:08.890 --> 00:00:14.360
you will learn how to consider uncertainty
when developing optimization models.

4
00:00:14.360 --> 00:00:19.530
This video, in particular, deals with
the notion of chance constraints and

5
00:00:19.530 --> 00:00:20.780
value at risk.

6
00:00:20.780 --> 00:00:24.950
To illustrate these concepts,
let's consider the following situation.

7
00:00:24.950 --> 00:00:29.930
Maintenance at a production facility
is an ongoing process that occurs 24

8
00:00:29.930 --> 00:00:31.440
hours a day.

9
00:00:31.440 --> 00:00:36.450
Because it is a long drive from mass
residential areas to the facility,

10
00:00:36.450 --> 00:00:40.630
employees do not like to work
shifts of fewer than 8 hours.

11
00:00:40.630 --> 00:00:45.674
These 8-hour shifts start every
4 hours throughout the day.

12
00:00:45.674 --> 00:00:49.653
The number of maintenance workers
needed at different times

13
00:00:49.653 --> 00:00:51.532
throughout the day varies.

14
00:00:51.532 --> 00:00:55.281
The expected number of workers needed
in each time period is given in

15
00:00:55.281 --> 00:00:57.150
the following table.

16
00:00:57.150 --> 00:01:01.630
The facility manager would like to
determine the number of employees to

17
00:01:01.630 --> 00:01:06.270
schedule in order to meet
the expected staff requirements.

18
00:01:06.270 --> 00:01:10.190
This problem can be solved by
setting up an optimization model

19
00:01:10.190 --> 00:01:12.060
using the expected values.

20
00:01:12.060 --> 00:01:17.780
The optimal solution to this problem is
a crew of 64 employees that are scheduled,

21
00:01:17.780 --> 00:01:19.470
as shown in this table.

22
00:01:19.470 --> 00:01:22.820
Sees the employees work eight-hour shifts,

23
00:01:22.820 --> 00:01:27.440
the available employees in the table
are the ones that start their shift

24
00:01:27.440 --> 00:01:31.900
in the current period plus the ones
that start in the previous period.

25
00:01:31.900 --> 00:01:36.076
For example, there are 34 employees
available between 4:00 and

26
00:01:36.076 --> 00:01:40.410
8:00 in the morning,
9 that start at midnight and

27
00:01:40.410 --> 00:01:43.990
25 that start at 4:00 in the morning.

28
00:01:43.990 --> 00:01:47.730
The requirements that we have used
to come up with these solutions

29
00:01:47.730 --> 00:01:49.440
are expected values.

30
00:01:49.440 --> 00:01:54.890
This means that the actual requirements
at a given day are random variables.

31
00:01:54.890 --> 00:02:00.248
Consider the requirement of 30 employees
for the period between 4 PM and 8 PM.

32
00:02:00.248 --> 00:02:03.690
Supposed that after some data analysis,

33
00:02:03.690 --> 00:02:08.210
it is determined that there are ten
possible requirement scenarios.

34
00:02:08.210 --> 00:02:12.400
The average requirement is 30,
but there is some variability.

35
00:02:12.400 --> 00:02:18.110
Because of this variability, the optimal
solution found with expected values

36
00:02:18.110 --> 00:02:24.470
results in only 5 times out of 10 where
the staff requirements are satisfied.

37
00:02:24.470 --> 00:02:29.710
In other words, there is a 50% chance
that the requirement constraint for

38
00:02:29.710 --> 00:02:33.640
the period between 4 and
8 PM is satisfied.

39
00:02:33.640 --> 00:02:36.830
To increase the chance of
satisfying the constraint,

40
00:02:36.830 --> 00:02:41.720
we will need to increase the number of
employees available in that period.

41
00:02:41.720 --> 00:02:46.710
For instance, if the number of
employees that start at 4:00 is changed

42
00:02:46.710 --> 00:02:53.550
from 13 to 15, then the chance that the
constraint is satisfied increases to 70%.

43
00:02:53.550 --> 00:02:57.280
This illustrates the notion
of a chance constraint.

44
00:02:57.280 --> 00:03:01.220
This special type of constraint
is such that it is satisfied

45
00:03:01.220 --> 00:03:04.120
only in a fraction of these scenarios.

46
00:03:04.120 --> 00:03:08.632
This fraction is known as
the Value at Risk, or VaR.

47
00:03:08.632 --> 00:03:14.150
Note that Value at Risk doesn't account
for the magnitude of the violation.

48
00:03:14.150 --> 00:03:19.000
It just counts the number of times
that the constraint was not satisfied.

49
00:03:19.000 --> 00:03:22.110
To account for
the magnitude of the validation,

50
00:03:22.110 --> 00:03:26.310
you can use what is called
Conditional Value at Risk.

51
00:03:26.310 --> 00:03:32.540
However, here, we're only going to
illustrate Value at Risk constraints.

52
00:03:32.540 --> 00:03:35.270
Simulation is the most
common mechanism for

53
00:03:35.270 --> 00:03:38.350
developing a model with VaR constraints.

54
00:03:38.350 --> 00:03:43.960
Locate and open the Excel file
Maintenance Staff Scheduling.

55
00:03:43.960 --> 00:03:48.411
In this spreadsheet, we use our
traditional color scheme where the light

56
00:03:48.411 --> 00:03:52.865
gold indicates decision variables,
green indicates uncertainty, and

57
00:03:52.865 --> 00:03:56.350
light orange indicates
the objective function.

58
00:03:56.350 --> 00:04:00.710
The difference between this model and
the one that uses expected values

59
00:04:00.710 --> 00:04:05.660
is that the staff requirements are modeled
with a probability distribution function.

60
00:04:05.660 --> 00:04:10.080
This model uses the Poisson distribution
for all the staff requirements.

61
00:04:10.080 --> 00:04:14.400
Click on the ASP tab to
access the model panel.

62
00:04:14.400 --> 00:04:18.920
You can see that the objective of
the model is to minimize the total staff.

63
00:04:18.920 --> 00:04:22.950
The decision variables
are the scheduled employees.

64
00:04:22.950 --> 00:04:25.740
There is a single set
of chance constraints.

65
00:04:25.740 --> 00:04:29.024
Double click on the constraints
to display the dialogue window.

66
00:04:29.024 --> 00:04:33.310
The form of the constraint is
the same as a normal constraint, but

67
00:04:33.310 --> 00:04:37.480
we have chosen VaR as
the type of constraint.

68
00:04:37.480 --> 00:04:40.400
We also need to choose a chance value.

69
00:04:40.400 --> 00:04:44.770
In this case, we have chosen 0.6, or 60%.

70
00:04:44.770 --> 00:04:49.820
The optimal solution found with expected
values results in probabilities

71
00:04:49.820 --> 00:04:54.920
of satisfying requirement constraints
that are less than 60% for

72
00:04:54.920 --> 00:04:57.680
several of the periods during the day.

73
00:04:57.680 --> 00:05:01.640
These values are given
in the chance column.

74
00:05:01.640 --> 00:05:04.804
The total number of employees
in this solution is 64.

75
00:05:06.050 --> 00:05:11.210
Click the solve button to find
a solution with the chance constraints.

76
00:05:11.210 --> 00:05:15.910
The output tab states that the solver
found a conservative solution

77
00:05:15.910 --> 00:05:18.620
to the robust constraint problem.

78
00:05:18.620 --> 00:05:24.240
This solution is conservative because the
probability of satisfying the requirements

79
00:05:24.240 --> 00:05:28.589
is much higher than the 60%
that we established.

80
00:05:29.700 --> 00:05:33.300
This is due to the way
ASP solves the problem.

81
00:05:33.300 --> 00:05:37.940
So it is a good idea to display
these probabilities to figure out

82
00:05:37.940 --> 00:05:40.640
how conservative the solution is.

83
00:05:40.640 --> 00:05:45.860
In this case, setting up the chance
value at 60% gives a solution

84
00:05:45.860 --> 00:05:51.410
that is very robust with
an increase of 21 employees.

85
00:05:51.410 --> 00:05:54.010
We could even try
lowering the chance value

86
00:05:54.010 --> 00:05:56.810
to find solutions with fewer employees and

87
00:05:56.810 --> 00:06:00.990
with a reasonable probability
of satisfying the requirements.

88
00:06:00.990 --> 00:06:05.800
We have seen how chance constraints
can be used to add on certainty

89
00:06:05.800 --> 00:06:07.760
to optimization models.

90
00:06:07.760 --> 00:06:12.010
Conceptually, chance
constraints are fairly simple.

91
00:06:12.010 --> 00:06:17.650
Instead of insisting that a constraint
is satisfied 100% of the time,

92
00:06:17.650 --> 00:06:21.610
we allow the constraint to be
satisfied a fraction of the time.

93
00:06:21.610 --> 00:06:26.380
This allows us to find solutions that
are more robust than those found with

94
00:06:26.380 --> 00:06:31.360
expected values but that they are not
trying to cover all possible scenarios.

95
00:06:32.400 --> 00:06:35.590
Solutions that cover
all possible scenarios

96
00:06:35.590 --> 00:06:39.670
tend to be very expensive because
they require a lot of resources.

97
00:06:39.670 --> 00:06:43.988
In our next and final video,
will go beyond chance constraints to

98
00:06:43.988 --> 00:06:48.870
take advantage of the full integration
of simulation and optimization.