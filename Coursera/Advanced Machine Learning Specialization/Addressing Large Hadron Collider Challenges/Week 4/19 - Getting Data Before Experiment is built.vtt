WEBVTT

1
00:00:00.295 --> 00:00:03.412
[MUSIC]

2
00:00:03.412 --> 00:00:09.896
So how can we build an algorithm that will
be capable of discriminating the patterns

3
00:00:09.896 --> 00:00:16.500
corresponding to the signal or
background before the experiment is built?

4
00:00:16.500 --> 00:00:20.530
So, partially, we can rely on

5
00:00:20.530 --> 00:00:24.580
simulators that can produce
those electromagnetic showers.

6
00:00:24.580 --> 00:00:30.550
But we would be interested in getting
some more realistic background.

7
00:00:30.550 --> 00:00:36.910
And for this, we can use experiment
that has been running for five years.

8
00:00:36.910 --> 00:00:41.500
It runs in laboratory on
the beam come from CERN.

9
00:00:41.500 --> 00:00:45.801
And it was actually looking for
oscillation of neutrinos.

10
00:00:45.801 --> 00:00:50.139
And sensitive element
of this detector was so

11
00:00:50.139 --> 00:00:55.047
precise, the cheap experiment
is also going to use

12
00:00:55.047 --> 00:01:01.040
very same detector parts for
detection of the showers.

13
00:01:01.040 --> 00:01:04.760
So those elements are based
on nuclear emulsion.

14
00:01:05.880 --> 00:01:13.230
The emulsion consists of silver
crystals merged into a polymer.

15
00:01:13.230 --> 00:01:17.042
And as a charged particle
passes through those crystals,

16
00:01:17.042 --> 00:01:19.469
it activates individual crystals.

17
00:01:19.469 --> 00:01:26.928
And after development, we can see black
dots at the places of activated crystals.

18
00:01:26.928 --> 00:01:31.058
And you can see on the right
side of the slide,

19
00:01:31.058 --> 00:01:38.730
the trajectories that are coming or
produced by different kinds of particles.

20
00:01:38.730 --> 00:01:43.840
So there is one electron that passes
on high energy through the volume

21
00:01:43.840 --> 00:01:51.580
of the detector, and there is another that
is framed electron with less energetic.

22
00:01:51.580 --> 00:01:59.790
And you see that the size or scale of this
emulsion of this image is really small.

23
00:01:59.790 --> 00:02:05.090
So it is a 550 microns
depicted on the slide.

24
00:02:05.090 --> 00:02:13.610
Those emulsion layers are put
on a plastic plate on two sides.

25
00:02:13.610 --> 00:02:15.840
You see them on the left.

26
00:02:15.840 --> 00:02:20.860
And those interweaved with lead plates,

27
00:02:20.860 --> 00:02:26.820
massive target that make particles
interact with it and produce some

28
00:02:26.820 --> 00:02:32.530
kind of traces, are formed into a brick.

29
00:02:32.530 --> 00:02:37.330
So this is like a building block for
OPERA experiment.

30
00:02:37.330 --> 00:02:43.855
Remember, from the slides before,
that OPERA is a huge experiment,

31
00:02:43.855 --> 00:02:49.286
so it is like a wall or
three story building made of bricks.

32
00:02:49.286 --> 00:02:54.517
So those bricks are designed
according to these techniques.

33
00:02:54.517 --> 00:02:58.348
So you can see at
the bottom of this slide,

34
00:02:58.348 --> 00:03:04.940
examples of electromagnetic showers
that are produced by neutrinos.

35
00:03:04.940 --> 00:03:09.470
And looking at those trajectories,
you can measure energy and

36
00:03:09.470 --> 00:03:15.740
momentum of the original particles
just by counting number of tracks

37
00:03:15.740 --> 00:03:19.665
that come to the shower.

38
00:03:19.665 --> 00:03:22.870
The additional problem that
comes here is that we have to

39
00:03:24.540 --> 00:03:29.630
dig through a lot of noise,
a lot of background tracks,

40
00:03:29.630 --> 00:03:34.690
that are collected during
the period of data taking,

41
00:03:34.690 --> 00:03:39.480
or that has been produced inside
emulsion plates during transportation.

42
00:03:39.480 --> 00:03:44.320
In case of OPERA, the plates was
transported from Japan to Italy.

43
00:03:45.500 --> 00:03:51.170
During this transportation,
it was subject for cosmic ray radiation.

44
00:03:51.170 --> 00:03:58.170
So we have to clean a lot of background
to get a clear kind of signal.

45
00:03:58.170 --> 00:04:03.238
So in this image, you'll see there's
some kind of clustering technique that

46
00:04:03.238 --> 00:04:08.400
is being applied to the data set, and
you can see the individual showers there.

47
00:04:09.640 --> 00:04:14.720
But in more realistic scenario,
the cleaning goes from

48
00:04:14.720 --> 00:04:19.660
image on the top-left to
the bottom of the picture.

49
00:04:19.660 --> 00:04:24.700
So there are like 10 million base tracks

50
00:04:24.700 --> 00:04:29.540
that every brick consists of,
and you have to identify

51
00:04:29.540 --> 00:04:34.260
maybe 1,000 of base track that
come to an electromagnetic shower.

52
00:04:34.260 --> 00:04:37.019
So machine learning challenges that

53
00:04:37.019 --> 00:04:41.561
are related to this problem come
into the venue of tracking.

54
00:04:41.561 --> 00:04:45.530
So you have to identify
properties of the shower.

55
00:04:45.530 --> 00:04:51.310
So we have to identify original
vertex the shower is coming from and

56
00:04:51.310 --> 00:04:55.570
you have to identify trajectories of
additional particles in the final state,

57
00:04:55.570 --> 00:04:58.440
and identify types of those particles.

58
00:04:58.440 --> 00:04:59.400
Particle identification.

59
00:05:00.450 --> 00:05:06.390
And in case of OPERA,
the datasets consist of background that

60
00:05:06.390 --> 00:05:12.170
are collected in the real environment,
in the bricks,

61
00:05:12.170 --> 00:05:16.440
the same configuration bricks that
are going to be used for SHiP experiment.

62
00:05:16.440 --> 00:05:22.890
And the signal that is simulated,
it is coming in a cone-like shape, and

63
00:05:22.890 --> 00:05:29.248
every shower of a signal consists of
roughly thousand different tracks.

64
00:05:30.824 --> 00:05:36.718
And in OPERA, you also have information
about origin of the shower.

65
00:05:36.718 --> 00:05:38.880
So you know coordinates and

66
00:05:38.880 --> 00:05:44.530
angles of the initial particle
that produced that shower.

67
00:05:44.530 --> 00:05:47.423
So in this example dataset,

68
00:05:47.423 --> 00:05:53.209
each base track is described
by the following features,

69
00:05:53.209 --> 00:05:57.909
coordinates, angles, and goodness of fit,

70
00:05:57.909 --> 00:06:02.490
which could be minimum
mean squared error for

71
00:06:02.490 --> 00:06:09.259
fitting individual argentum crystals
to the line of a base track.

72
00:06:09.259 --> 00:06:13.918
And as I mentioned before,
the background consists of base

73
00:06:13.918 --> 00:06:17.816
track randomly scattered around the brick,
and

74
00:06:17.816 --> 00:06:22.868
there are in real scenario ten
to the seven background tracks.

75
00:06:22.868 --> 00:06:27.677
In the setting that you will
be working with as homework,

76
00:06:27.677 --> 00:06:30.890
there will be less background.

77
00:06:30.890 --> 00:06:36.920
And the signal consists of background
base tracks forming a cone-like shape.

78
00:06:37.940 --> 00:06:41.680
There are several volumes of signal.

79
00:06:41.680 --> 00:06:45.030
And there will be 1,000 base
track pair signal volume.

80
00:06:45.030 --> 00:06:47.660
Origin of a shower is known,
as I mentioned before,

81
00:06:47.660 --> 00:06:50.440
the coordinates and angles are available.

82
00:06:50.440 --> 00:06:56.040
So before going to solution that
you can apply to this problem,

83
00:06:56.040 --> 00:07:02.179
let's consider figure of merit
that physicists are interested in.

84
00:07:02.179 --> 00:07:03.379
In this case,

85
00:07:03.379 --> 00:07:09.740
we are interested in estimated
energy of an electron, right?

86
00:07:09.740 --> 00:07:16.971
So in case we are looking for
tracks that belong to a signal shower,

87
00:07:16.971 --> 00:07:23.460
we can build a regression model
that would connect number of tracks

88
00:07:24.530 --> 00:07:30.490
that algorithm has produced with
energy of original particle.

89
00:07:30.490 --> 00:07:35.170
And then, we can estimate the mean square

90
00:07:36.460 --> 00:07:42.610
error, and by mean square error,
estimate coefficients A and B,

91
00:07:42.610 --> 00:07:47.669
and fit straight line
that will give us mean

92
00:07:47.669 --> 00:07:54.005
energy given number of tracks
returned by our algorithm.

93
00:07:54.005 --> 00:07:58.700
And if we compute the relative error for
every blue point or

94
00:07:58.700 --> 00:08:02.685
the red line, we can plot
a histogram like one on the right.

95
00:08:02.685 --> 00:08:06.966
And it looks like a Gaussian by design,

96
00:08:06.966 --> 00:08:12.172
because we decided to go
to linear regression.

97
00:08:12.172 --> 00:08:16.883
And the width of this shape actually

98
00:08:16.883 --> 00:08:22.075
gives us the uncertainty of our error.

99
00:08:22.075 --> 00:08:26.306
And this is actually energy resolution
that physicists are interested in.

100
00:08:26.306 --> 00:08:31.378
Actually, they're interested in
making it as sharp as possible.

101
00:08:31.378 --> 00:08:36.319
So it will mean that
algorithm is capable of very

102
00:08:36.319 --> 00:08:40.666
accurate reconstruction of the energy.

103
00:08:40.666 --> 00:08:46.930
But the thing is we can design

104
00:08:46.930 --> 00:08:52.550
a proxy metric that can be applied
to design of a regular algorithm.

105
00:08:52.550 --> 00:08:58.520
So in terms of machine learning,
we can substitute the energy resolution with

106
00:08:58.520 --> 00:09:04.510
little simpler metric that
we call metric proxy,

107
00:09:04.510 --> 00:09:11.430
which is average precision
along certain recall range.

108
00:09:11.430 --> 00:09:16.710
So in general, it could just be
area under the precision recall curve.

109
00:09:16.710 --> 00:09:19.815
Or if we're interested
in a specific region,

110
00:09:19.815 --> 00:09:22.608
we can give higher weights for this region.

111
00:09:25.279 --> 00:09:31.008
So as another proxy,
we can also use area under ROC curve metric.

112
00:09:31.008 --> 00:09:36.226
And the baseline solution that
is produced by people at OPERA

113
00:09:36.226 --> 00:09:41.750
experiment is the following, so
we consider only tracks within

114
00:09:41.750 --> 00:09:46.681
a cone of 50 milliradians
from the original particle.

115
00:09:46.681 --> 00:09:50.190
And we iterate for
all based tracks on the cone.

116
00:09:50.190 --> 00:09:54.420
And for every base track, we compute
the distance from the origin, and

117
00:09:54.420 --> 00:09:56.400
we compute input parameter.

118
00:09:56.400 --> 00:09:57.820
See it on the figure.

119
00:09:57.820 --> 00:10:02.450
So it's like a distance from
the base track to the point

120
00:10:02.450 --> 00:10:04.810
of the original particle.

121
00:10:04.810 --> 00:10:07.460
And we compute the angel that

122
00:10:09.480 --> 00:10:13.760
is the angle between original particle and
each base track.

123
00:10:13.760 --> 00:10:19.738
So those features are added to
a classifier like random forest or

124
00:10:19.738 --> 00:10:22.000
XGboost or whatever.

125
00:10:22.000 --> 00:10:26.540
And then we can get a solution that gives

126
00:10:26.540 --> 00:10:30.807
baseline result around 0.96 for

127
00:10:30.807 --> 00:10:36.035
area under the ROC curve, or precision that

128
00:10:36.035 --> 00:10:41.276
is roughly 1.0 at recall equal to 0.5.

129
00:10:41.276 --> 00:10:46.767
[MUSIC]