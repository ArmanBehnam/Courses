WEBVTT

1
00:00:04.550 --> 00:00:08.370
In this video, we're going
to look at how we can

2
00:00:08.370 --> 00:00:12.670
generate valid dates using
Excel's date function,

3
00:00:12.670 --> 00:00:14.625
and for this example,

4
00:00:14.625 --> 00:00:16.140
we're going to be working in

5
00:00:16.140 --> 00:00:18.180
our supply invoice statement.

6
00:00:18.180 --> 00:00:20.550
So I'm just going to
click back into that,

7
00:00:20.550 --> 00:00:24.014
and you may recall that
in the supply statement,

8
00:00:24.014 --> 00:00:25.590
the paid dates and

9
00:00:25.590 --> 00:00:28.605
the invoice dates are not
actually valid dates,

10
00:00:28.605 --> 00:00:31.050
they are just text.

11
00:00:31.050 --> 00:00:35.910
Now we need to help Zara
convert those two valid dates,

12
00:00:35.910 --> 00:00:37.875
so that we can do comparisons

13
00:00:37.875 --> 00:00:40.455
and operations with that data.

14
00:00:40.455 --> 00:00:45.335
Now the function we're going
to use is the DATE function,

15
00:00:45.335 --> 00:00:47.330
and we're going to start with

16
00:00:47.330 --> 00:00:51.380
a really simple example so
you can see how it works.

17
00:00:51.380 --> 00:00:54.215
So clicking into S2,

18
00:00:54.215 --> 00:01:01.090
we're going to type "=da" and tab to select date.

19
00:01:01.090 --> 00:01:06.575
The DATE function requires
three arguments; the year,

20
00:01:06.575 --> 00:01:08.995
the month, and the day,

21
00:01:08.995 --> 00:01:13.675
and each of these has to be
a number rather than text.

22
00:01:13.675 --> 00:01:17.730
Well, our year is
2020 and a comma.

23
00:01:17.730 --> 00:01:22.835
All of the invoices were paid
on the fourth and a comma,

24
00:01:22.835 --> 00:01:27.520
and this particular invoice
was paid on the 17th.

25
00:01:27.520 --> 00:01:30.650
So I type 17 and now

26
00:01:30.650 --> 00:01:34.910
notice no quotes because
these are just numbers,

27
00:01:34.910 --> 00:01:40.450
and then I press "Enter"
and there's my valid date.

28
00:01:40.450 --> 00:01:43.800
So that's how the
DATE function works.

29
00:01:43.800 --> 00:01:45.950
But obviously we can't type in

30
00:01:45.950 --> 00:01:50.405
the 17th because the pay
dates were different.

31
00:01:50.405 --> 00:01:54.605
So we did another function
to extract that for us.

32
00:01:54.605 --> 00:01:58.055
Yeah, you guessed it,
it's the RIGHT function.

33
00:01:58.055 --> 00:02:01.250
So coming back to
our calculation,

34
00:02:01.250 --> 00:02:03.470
we're just going to
double-click into

35
00:02:03.470 --> 00:02:06.290
S2 and then I'm going to

36
00:02:06.290 --> 00:02:08.690
remove that 17 because we're

37
00:02:08.690 --> 00:02:11.480
going to replace it
with a calculation,

38
00:02:11.480 --> 00:02:13.700
and like I said, the calculation

39
00:02:13.700 --> 00:02:16.395
we need is using
the right function.

40
00:02:16.395 --> 00:02:21.075
So I type ri and tab
to select right.

41
00:02:21.075 --> 00:02:23.975
The text we're using
is the pay date,

42
00:02:23.975 --> 00:02:26.000
then a comma, and we need

43
00:02:26.000 --> 00:02:28.495
the two characters on the right.

44
00:02:28.495 --> 00:02:30.795
Don't forget to
close your brackets.

45
00:02:30.795 --> 00:02:34.270
Press "Enter" and now
we have a valid date.

46
00:02:34.270 --> 00:02:36.305
But if we copy it down,

47
00:02:36.305 --> 00:02:41.075
we can generate the pay dates
for all of our invoices.

48
00:02:41.075 --> 00:02:43.820
That was quite a
simple example because

49
00:02:43.820 --> 00:02:47.885
our year and our month were
the same in every case.

50
00:02:47.885 --> 00:02:50.030
The next example
we're going to look

51
00:02:50.030 --> 00:02:52.910
at is the invoice date.

52
00:02:52.910 --> 00:02:56.765
Now the years still
stays at 2020,

53
00:02:56.765 --> 00:03:00.040
but the invoice
months actually vary.

54
00:03:00.040 --> 00:03:03.845
So we need to have a way
of somehow converting

55
00:03:03.845 --> 00:03:08.405
MAR to a three and APR to a four,

56
00:03:08.405 --> 00:03:11.630
and actually we already
know the answer.

57
00:03:11.630 --> 00:03:14.660
Interestingly, the month
function will retrieve

58
00:03:14.660 --> 00:03:16.250
the numeric month for us

59
00:03:16.250 --> 00:03:18.800
from anything that
looks like a date,

60
00:03:18.800 --> 00:03:21.995
even if it's not
actually a valid date.

61
00:03:21.995 --> 00:03:24.890
So this is a nice
little surprise.

62
00:03:24.890 --> 00:03:27.725
I'm going to click into R2,

63
00:03:27.725 --> 00:03:29.930
and I'm just going to
have a look at how

64
00:03:29.930 --> 00:03:33.010
the MONTH function
works with this data.

65
00:03:33.010 --> 00:03:38.730
So I'm going to type
"=mon" and tab,

66
00:03:38.730 --> 00:03:43.100
we're going to click onto
our Invoice Date and click

67
00:03:43.100 --> 00:03:44.870
"Enter" and it actually

68
00:03:44.870 --> 00:03:47.510
returns the three,
which is fantastic.

69
00:03:47.510 --> 00:03:50.300
Often however, we
don't actually have

70
00:03:50.300 --> 00:03:53.305
the luxury of something
that looks like a date.

71
00:03:53.305 --> 00:03:56.410
It is more common to just
have the month name,

72
00:03:56.410 --> 00:03:59.404
and if I tried that with
the MONTH function,

73
00:03:59.404 --> 00:04:01.730
you see that doesn't work because

74
00:04:01.730 --> 00:04:04.280
that doesn't look
anything like a date.

75
00:04:04.280 --> 00:04:07.230
That's just really text.

76
00:04:07.300 --> 00:04:10.040
But there's a clever
little trick you can

77
00:04:10.040 --> 00:04:12.185
do to get around that.

78
00:04:12.185 --> 00:04:14.660
So coming back into here,

79
00:04:14.660 --> 00:04:16.940
what I'm going to do is,

80
00:04:16.940 --> 00:04:20.615
I'm actually going to join
a one onto the front.

81
00:04:20.615 --> 00:04:25.220
So I'm going to type one
and then I'll ampersand,

82
00:04:25.220 --> 00:04:27.950
which is our
concatenate operator.

83
00:04:27.950 --> 00:04:31.640
So basically I'm saying
the 1st of March,

84
00:04:31.640 --> 00:04:34.375
I'm only worrying about a space,

85
00:04:34.375 --> 00:04:37.860
and curiously, that also works.

86
00:04:37.860 --> 00:04:40.370
So that's a really useful trick.

87
00:04:40.370 --> 00:04:41.555
If you happen to have

88
00:04:41.555 --> 00:04:45.365
just the month name on
a column in its own,

89
00:04:45.365 --> 00:04:48.200
you can convert it
to a number using

90
00:04:48.200 --> 00:04:52.930
the month function by
just joining it to a one.

91
00:04:52.930 --> 00:04:55.065
Let's just finish this off.

92
00:04:55.065 --> 00:04:56.850
So I'm going to double-click back

93
00:04:56.850 --> 00:04:59.015
in right at the beginning,

94
00:04:59.015 --> 00:05:01.960
we're going to put
our date function,

95
00:05:01.960 --> 00:05:04.965
and our year is still 2020.

96
00:05:04.965 --> 00:05:08.495
So I'm going to type that
followed by a comma.

97
00:05:08.495 --> 00:05:11.060
We've then got our
MONTH function,

98
00:05:11.060 --> 00:05:14.300
which is going to calculate
our month number for us,

99
00:05:14.300 --> 00:05:17.645
so another comma,
and then once again,

100
00:05:17.645 --> 00:05:20.175
we're going to need
a RIGHT function.

101
00:05:20.175 --> 00:05:24.725
So I'm just going to
type "ri" tab for right.

102
00:05:24.725 --> 00:05:28.190
The text I'm trying to work
with is the invoice date.

103
00:05:28.190 --> 00:05:30.530
Again, I need the
two characters on

104
00:05:30.530 --> 00:05:34.110
the right, close my
brackets for right,

105
00:05:34.110 --> 00:05:36.285
close my brackets for my date,

106
00:05:36.285 --> 00:05:39.600
and there's our
valid invoice date.

107
00:05:39.600 --> 00:05:43.305
Again, we can just
copy that down.

108
00:05:43.305 --> 00:05:45.680
So we've seen that we can use

109
00:05:45.680 --> 00:05:48.980
the DATE function to
generate valid dates,

110
00:05:48.980 --> 00:05:50.960
provided we give it a year,

111
00:05:50.960 --> 00:05:53.480
a month, and a day.

112
00:05:53.480 --> 00:05:55.475
In the next video,

113
00:05:55.475 --> 00:05:57.740
we're going to start
looking at how we can do

114
00:05:57.740 --> 00:06:02.190
mathematical operations
with our date functions.