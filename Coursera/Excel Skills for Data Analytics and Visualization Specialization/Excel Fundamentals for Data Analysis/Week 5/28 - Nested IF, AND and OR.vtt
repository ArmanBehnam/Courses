WEBVTT

1
00:00:00.000 --> 00:00:05.312
[MUSIC]

2
00:00:05.312 --> 00:00:08.942
In this video, we're going to
look at how we can solve more

3
00:00:08.942 --> 00:00:11.981
complex logical problems using nested IFs,
and

4
00:00:11.981 --> 00:00:17.040
we're also going to introduce two other
logical functions called AND, and OR.

5
00:00:18.900 --> 00:00:23.420
Zara has been asked to
recalculate the late charges.

6
00:00:23.420 --> 00:00:24.530
The system has changed,

7
00:00:24.530 --> 00:00:29.718
and we're now going to charge a different
rate depending on the location.

8
00:00:29.718 --> 00:00:30.800
If it's Sydney,

9
00:00:30.800 --> 00:00:34.980
we're going to multiply the amount by
the overdue days by the penalty rate.

10
00:00:34.980 --> 00:00:39.540
But if it's Melbourne, we're just
going to charge the $5 flat rate.

11
00:00:39.540 --> 00:00:46.970
The problem is, we now actually
have three possible outcomes.

12
00:00:46.970 --> 00:00:49.140
If it's not overdue,
we're going to charge zero.

13
00:00:50.220 --> 00:00:54.460
If it is overdue, we're going to then have
to decide if it's Sydney or Melbourne.

14
00:00:54.460 --> 00:00:58.850
The IF on its own can only
handle two possible outcomes.

15
00:00:58.850 --> 00:01:03.490
So the moment you have more outcomes,
you need more IFs.

16
00:01:03.490 --> 00:01:05.510
This is called nesting IFs.

17
00:01:05.510 --> 00:01:07.920
So the way it's going to work is,

18
00:01:07.920 --> 00:01:12.440
the first IF is going to check
if our invoice is overdue.

19
00:01:12.440 --> 00:01:14.610
If it's not, we're going to charge zero.

20
00:01:15.980 --> 00:01:18.760
We then still have two possibilities.

21
00:01:18.760 --> 00:01:22.460
So our second IF, is going to
check if our location is Sydney.

22
00:01:23.870 --> 00:01:26.690
If it is,
we're going to do the calculation.

23
00:01:26.690 --> 00:01:28.620
If it's not,
we're going to do the flat rate.

24
00:01:29.910 --> 00:01:31.710
So let's see this in action.

25
00:01:31.710 --> 00:01:36.280
So we're going to start by clicking
into O5 and typing equals IF and tab.

26
00:01:36.280 --> 00:01:40.730
Now, the first thing we're going
to check is if we're overdue.

27
00:01:40.730 --> 00:01:45.210
So we're going to check if
overdue is equal to nothing.

28
00:01:45.210 --> 00:01:47.390
In other words, it's not overdue.

29
00:01:47.390 --> 00:01:53.520
If this is the case, well, we're going to
charge zero late charge, so nice and easy.

30
00:01:53.520 --> 00:01:54.510
Now, type a comma.

31
00:01:55.660 --> 00:01:58.490
We now have two more possibilities.

32
00:01:58.490 --> 00:02:00.940
So we're going to need another IF.

33
00:02:00.940 --> 00:02:03.975
We're going to type our IF,
and tab to open the brackets.

34
00:02:03.975 --> 00:02:10.653
Our logical test, this time, is going to
check if our location is equal to Sydney.

35
00:02:14.679 --> 00:02:16.620
Then our comma.

36
00:02:16.620 --> 00:02:23.600
If it is, we're going to need to take our
amount, multiply it by our overdue days,

37
00:02:23.600 --> 00:02:28.050
and multiply that by our penalty rate,
then type a comma.

38
00:02:29.270 --> 00:02:32.830
If it's not Sydney,
there's only one more possibility.

39
00:02:32.830 --> 00:02:34.210
It must be Melbourne.

40
00:02:34.210 --> 00:02:36.390
And were charging them the flat rate,

41
00:02:36.390 --> 00:02:39.000
which you may recall we
have a named range for.

42
00:02:40.150 --> 00:02:43.290
Now, we can close our bracket for
our second IF, and

43
00:02:43.290 --> 00:02:46.430
very important,
close your bracket with your first IF.

44
00:02:47.730 --> 00:02:53.710
If you now press Enter,
late charges are corrected.

45
00:02:53.710 --> 00:02:55.744
You can nest up to 64 IFs.

46
00:02:55.744 --> 00:02:58.660
But let's hope, you never need to.

47
00:03:00.270 --> 00:03:03.950
There's one more potential limitation for
the IF.

48
00:03:03.950 --> 00:03:07.550
It can only process a single logical test.

49
00:03:07.550 --> 00:03:11.260
But sometimes,
we need to check multiple things.

50
00:03:11.260 --> 00:03:16.050
So in the next example,
if the invoice is overdue, and

51
00:03:16.050 --> 00:03:21.040
it is more than $500,
Zara needs to take some action.

52
00:03:22.280 --> 00:03:25.100
But here,
there are two things we have to check.

53
00:03:26.330 --> 00:03:30.600
Now, the functions that can help us with
this are the AND and the OR function.

54
00:03:32.440 --> 00:03:36.360
Both are designed to
evaluate logical tests, and

55
00:03:36.360 --> 00:03:39.189
both of them can evaluate up to 255.

56
00:03:41.060 --> 00:03:43.450
The AND is the fussy one.

57
00:03:43.450 --> 00:03:48.290
If all of the logical tests are true,
the AND will return true.

58
00:03:48.290 --> 00:03:50.950
If even one of them are false,
it will return false.

59
00:03:52.080 --> 00:03:54.470
The OR is a little bit more relaxed.

60
00:03:54.470 --> 00:03:58.220
As long as one of the logical test
is true, it will return true.

61
00:03:59.440 --> 00:04:02.430
Now, for our example, we need the AND.

62
00:04:02.430 --> 00:04:09.330
So we're going to click into P5 and
type "=AND", and open our brackets.

63
00:04:09.330 --> 00:04:16.090
The first logical test is going to be,
is our invoice overdue?

64
00:04:16.090 --> 00:04:18.820
And we'll use our overdue days as time.

65
00:04:18.820 --> 00:04:24.090
So I'm going to check if overdue is
greater than zero, then type a comma.

66
00:04:25.335 --> 00:04:30.190
Our second logical test is going to
check if our amount is greater than or

67
00:04:30.190 --> 00:04:32.360
equal to 500.

68
00:04:32.360 --> 00:04:37.340
This will also include amounts
that are equal to 500.

69
00:04:37.340 --> 00:04:40.770
And then we're going to close
our brackets and press Enter.

70
00:04:42.760 --> 00:04:47.060
You'll see we have got a few trues
where both conditions are met, but

71
00:04:47.060 --> 00:04:48.680
most of them are returning false.

72
00:04:50.270 --> 00:04:54.480
If we'd used the OR, we would have
found we got a lot more trues,

73
00:04:54.480 --> 00:04:57.110
because just one of the conditions
would need to be true.

74
00:04:59.630 --> 00:05:03.020
Now, the thing with the AND and the OR
is they only return true or false.

75
00:05:03.020 --> 00:05:05.020
And if that's what you want, that's great.

76
00:05:05.020 --> 00:05:08.090
But that doesn't look amazing.

77
00:05:08.090 --> 00:05:11.650
Zara would actually like to see
the word action if it's true,

78
00:05:11.650 --> 00:05:13.800
and nothing if it's false.

79
00:05:13.800 --> 00:05:18.216
So what we're going to do now
is nest our AND inside an if.

80
00:05:18.216 --> 00:05:22.277
So coming back to P5,
we're going to double click, and

81
00:05:22.277 --> 00:05:26.360
just after the equals,
we're going to slip in IF in there.

82
00:05:26.360 --> 00:05:29.960
The logical test has already
been done by our AND.

83
00:05:29.960 --> 00:05:36.090
So we're just going to type
a comma after that red bracket.

84
00:05:36.090 --> 00:05:40.550
If the AND returns true, well,
we need to take some action.

85
00:05:43.330 --> 00:05:48.870
If it doesn't, we can leave the cell
empty, which is open quotes, close quotes.

86
00:05:48.870 --> 00:05:52.400
Now, close your brackets for
your if, press Enter, and

87
00:05:52.400 --> 00:05:56.330
we can instantly see our actionable items.

88
00:05:56.330 --> 00:06:02.290
So just to recap,
if you have more than two outcomes,

89
00:06:02.290 --> 00:06:05.220
you may need to look at using nested IFs.

90
00:06:06.250 --> 00:06:09.740
On the other hand,
if you need to evaluate logical tests,

91
00:06:10.810 --> 00:06:14.670
you can use the AND, the OR,
or a combination of the two.