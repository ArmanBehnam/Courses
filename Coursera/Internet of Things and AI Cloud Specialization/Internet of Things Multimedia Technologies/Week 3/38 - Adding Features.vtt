WEBVTT

1
00:00:00.130 --> 00:00:04.420
So it's time now to take what we just
showed you in the last video were we

2
00:00:04.420 --> 00:00:09.690
you know took the camera, execute
the little script using the CV Library.

3
00:00:09.690 --> 00:00:12.650
And show you how it printed
out on the screen there.

4
00:00:12.650 --> 00:00:14.860
>> Yep.
>> We're going to take that and

5
00:00:14.860 --> 00:00:17.270
add some features to it to
make it a little bit cooler.

6
00:00:17.270 --> 00:00:18.415
>> Take some cooler pictures.

7
00:00:18.415 --> 00:00:19.860
[CROSSTALK] And go and screenshot.

8
00:00:19.860 --> 00:00:20.498
>> So let's check it out.

9
00:00:20.498 --> 00:00:21.798
>> Yeah.

10
00:00:21.798 --> 00:00:26.870
So what I first want to talk about is for
facial recognition and any other kind of

11
00:00:26.870 --> 00:00:32.430
shape or feature recognitions, you'll
need something called the hard cascades.

12
00:00:34.030 --> 00:00:38.270
It's something that these XML files
are provided in the OpenCV library, but

13
00:00:38.270 --> 00:00:40.919
we'll also provide it on the website for
everyone to use.

14
00:00:42.270 --> 00:00:43.980
So, let's see here.

15
00:00:43.980 --> 00:00:49.860
Again, we'll just go back into
our basic CV application here.

16
00:00:49.860 --> 00:00:52.600
So, we have a regular image right here,
and

17
00:00:52.600 --> 00:00:57.820
I want to let's just try the facial
recognition thing I mentioned earlier.

18
00:00:57.820 --> 00:00:58.350
So, say img2.

19
00:01:00.758 --> 00:01:05.200
Go to image.copy.

20
00:01:05.200 --> 00:01:11.320
This one just create a copy of
that image and put it to image2.

21
00:01:11.320 --> 00:01:14.869
The one I saw a while back
was like a wide outline of

22
00:01:14.869 --> 00:01:17.190
a picture
>> Well do it.

23
00:01:17.190 --> 00:01:19.220
Try it out
>> So

24
00:01:19.220 --> 00:01:22.750
you can find all these
things I'm doing online.

25
00:01:22.750 --> 00:01:25.130
Also, they're in a sample code.

26
00:01:25.130 --> 00:01:29.770
In the documentation that simple CV and
political CV

27
00:01:29.770 --> 00:01:34.420
book provide and we'll just go ahead and
do one more and make a grey scale image.

28
00:01:35.430 --> 00:01:36.200
Simple filter here.

29
00:01:39.040 --> 00:01:40.370
All right.

30
00:01:40.370 --> 00:01:43.860
>> So real quick, just so you know, on
the code right there is he's making three

31
00:01:43.860 --> 00:01:49.560
copies of that image and he's calling
each copy image two or img2, img3, img4.

32
00:01:49.560 --> 00:01:52.070
So now he's going to apply little
filters to each one of those images.

33
00:01:52.070 --> 00:01:54.590
>> And then facial it's
called facial recognition.

34
00:01:57.740 --> 00:01:58.750
>> Almost man.

35
00:02:00.060 --> 00:02:04.272
>> So, let's see.
We'll do faces is equal to

36
00:02:04.272 --> 00:02:09.652
image2.FindHaar.

37
00:02:10.840 --> 00:02:17.170
So, this we'll call the FindHaar
features on this image we have.

38
00:02:17.170 --> 00:02:18.170
>> Which is that outline.

39
00:02:18.170 --> 00:02:23.261
>> Yeah, so then,
when it calls this, you'll need

40
00:02:23.261 --> 00:02:28.717
to provide the file that I'll look at,
so right now,

41
00:02:28.717 --> 00:02:34.440
we have it on the desktop,
so we're going to try.

42
00:02:34.440 --> 00:02:39.619
So we'll load the feature
finder with this XML files,

43
00:02:39.619 --> 00:02:44.913
so home/linaro/Desktop,
it's called haarcascade

44
00:02:44.913 --> 00:02:50.490
frontalface atl.xml Cool.

45
00:02:50.490 --> 00:02:56.930
Now let's make this a little bigger for
it's a little one-liner here.

46
00:02:56.930 --> 00:02:59.740
There we go.
It will find all the faces for us.

47
00:02:59.740 --> 00:03:01.698
Then, I'll make a green box for us.

48
00:03:01.698 --> 00:03:05.660
Green is equal to zero.

49
00:03:05.660 --> 00:03:06.669
These are just RBG values.

50
00:03:07.990 --> 00:03:09.080
So, I'm setting up the color green.

51
00:03:09.080 --> 00:03:13.202
And then, for every face in faces.

52
00:03:17.850 --> 00:03:21.100
Yeah, one, two, three, four.

53
00:03:21.100 --> 00:03:24.640
f.draw(green).

54
00:03:24.640 --> 00:03:25.950
So, this will find every face.

55
00:03:25.950 --> 00:03:28.550
For every face,
it'll draw a green box around it.

56
00:03:28.550 --> 00:03:31.340
>> Yeah, so, let's just walk them
through that little piece real quick.

57
00:03:31.340 --> 00:03:36.240
Right, so, green, he's basically saying
RGB, the three values of RGB equals 0,

58
00:03:36.240 --> 00:03:39.700
for R, which is red, 255,
which is the max point,

59
00:03:39.700 --> 00:03:43.710
for green, and then B, blue, is 0, right?

60
00:03:43.710 --> 00:03:46.850
So he's giving all green, and
then he's saying, for f in faces,

61
00:03:46.850 --> 00:03:49.060
for every face, make it green.

62
00:03:49.060 --> 00:03:49.800
Right, because inside.

63
00:03:49.800 --> 00:03:50.830
>> Yeah.
Draw the green box around it.

64
00:03:50.830 --> 00:03:51.670
>> Draw the green box around it.

65
00:03:51.670 --> 00:03:52.400
So for every face,

66
00:03:52.400 --> 00:03:57.110
draw a green box around it and he already
has that variable green set to 0 255 0.

67
00:03:57.110 --> 00:03:57.830
So, yeah.

68
00:03:57.830 --> 00:04:01.790
>> So the next thing we'll
do is outline the edges.

69
00:04:01.790 --> 00:04:04.761
Call it edges.

70
00:04:04.761 --> 00:04:09.838
So, image two.

71
00:04:12.601 --> 00:04:18.804
Is equal to image, sorry,

72
00:04:18.804 --> 00:04:23.531
image three, my bad.

73
00:04:23.531 --> 00:04:27.200
Image three equal image three.edges.

74
00:04:27.200 --> 00:04:28.850
And then you'll need
to try a parameter of.

75
00:04:29.970 --> 00:04:32.670
How the picture will sort
of render each line, right?

76
00:04:32.670 --> 00:04:35.830
So the lower the number,
the more wide lines it'll draw, and

77
00:04:35.830 --> 00:04:38.680
the thicker the number,
it'll look for more defined lines.

78
00:04:38.680 --> 00:04:40.580
We'll just give it,
say, let's go with 130.

79
00:04:40.580 --> 00:04:42.600
Sounds pretty good.

80
00:04:42.600 --> 00:04:43.130
>> What are the two?

81
00:04:43.130 --> 00:04:43.890
What's the max?

82
00:04:45.780 --> 00:04:47.948
>> You'll have to look at
the augmentation for that.

83
00:04:47.948 --> 00:04:49.910
>> Okay.
>> I think it's 250, though.

84
00:04:49.910 --> 00:04:50.760
>> All right.

85
00:04:50.760 --> 00:04:51.950
>> I believe.

86
00:04:51.950 --> 00:04:55.930
The last one we'll do is
a little gray scale image.

87
00:04:58.010 --> 00:04:59.900
Gray scale image.

88
00:04:59.900 --> 00:05:02.490
Go to img4.grayscale.

89
00:05:02.490 --> 00:05:03.810
Pretty simple?

90
00:05:03.810 --> 00:05:04.390
>> Sounds good.

91
00:05:04.390 --> 00:05:06.220
>> Yep.
Like I said before,

92
00:05:06.220 --> 00:05:10.530
you can simply do this to
any other kind of images.

93
00:05:10.530 --> 00:05:13.920
Whatever the documentation has.

94
00:05:13.920 --> 00:05:17.320
And remember, we need to save them all.

95
00:05:17.320 --> 00:05:24.817
So
img2.save("/home/linaro/Desktop/facial_re-

96
00:05:24.817 --> 00:05:28.800
cognition.png").

97
00:05:28.800 --> 00:05:34.362
Then we have img3.save(" /home/

98
00:05:36.789 --> 00:05:41.630
/Desktop/
>> Randy, you're getting good at this.

99
00:05:42.699 --> 00:05:44.469
>> [LAUGH]
>> Man, tons of practice.

100
00:05:44.469 --> 00:05:54.241
img4.save(/home/linaro/Desktop/ what
is it?

101
00:05:54.241 --> 00:05:55.343
Wait, gray-scale.
>> Gray, yeah.

102
00:05:55.343 --> 00:05:56.040
So just put gray.

103
00:05:56.040 --> 00:05:57.584
>> Gray.png.

104
00:05:57.584 --> 00:05:58.362
Cool.

105
00:05:58.362 --> 00:06:01.020
And then we'll go ahead and save it.

106
00:06:01.020 --> 00:06:02.297
Quit.

107
00:06:02.297 --> 00:06:03.585
Ready, Robert?

108
00:06:03.585 --> 00:06:04.317
>> I'm ready.

109
00:06:04.317 --> 00:06:05.469
Wait, are we going to?

110
00:06:05.469 --> 00:06:07.882
It's just taking a copy of that first one,
right?

111
00:06:07.882 --> 00:06:09.010
>> No,
we're going to take a picture actually.

112
00:06:09.010 --> 00:06:10.360
>> All right, so let's do another.

113
00:06:10.360 --> 00:06:10.860
>> All right, so let's do.

114
00:06:11.910 --> 00:06:13.610
>> How do we know if it's honest?

115
00:06:13.610 --> 00:06:14.290
We don't, right?

116
00:06:14.290 --> 00:06:16.170
>> Yeah.
So run the script and wait a bit,

117
00:06:16.170 --> 00:06:18.280
let the camera boot up and
take a picture of us.

118
00:06:20.780 --> 00:06:24.570
>> So we got an error, actually,
but we did troubleshoot this,

119
00:06:24.570 --> 00:06:28.030
so let's go back into our VM and
see what we messed up.

120
00:06:28.030 --> 00:06:29.430
>> Yeah.
So,

121
00:06:29.430 --> 00:06:32.090
actually let's look at the error message.

122
00:06:32.090 --> 00:06:35.370
It says,
warning could not find Haar cascade file.

123
00:06:35.370 --> 00:06:38.150
>> Yeah, show them with the mouse so
they can see what we're looking here.

124
00:06:38.150 --> 00:06:39.420
>> Right here.

125
00:06:39.420 --> 00:06:40.200
This one.

126
00:06:40.200 --> 00:06:44.820
>> So, apparently actually-
>> It couldn't find it.

127
00:06:44.820 --> 00:06:46.625
>> Randy typed it wrong.

128
00:06:46.625 --> 00:06:47.330
[LAUGH]
>> So,

129
00:06:47.330 --> 00:06:51.090
as you see it says Haar
cascade frontalface atl.

130
00:06:51.090 --> 00:06:54.411
When it should be alt right here.

131
00:06:54.411 --> 00:06:56.700
[CROSSTALK]
>> We went in there and fix that, so

132
00:06:56.700 --> 00:06:57.380
we kind of cut.

133
00:06:57.380 --> 00:06:58.657
But we fixed it.

134
00:06:58.657 --> 00:07:01.670
So now let's actually try running it
again now that we've changed that.

135
00:07:01.670 --> 00:07:03.380
>> Take a picture.

136
00:07:03.380 --> 00:07:03.880
Go ahead.

137
00:07:06.584 --> 00:07:08.244
>> Are you in there?
>> Maybe.

138
00:07:13.654 --> 00:07:14.803
Cool.

139
00:07:14.803 --> 00:07:16.420
All right.

140
00:07:16.420 --> 00:07:19.270
It looks like it took it.

141
00:07:19.270 --> 00:07:19.840
>> Yep.

142
00:07:19.840 --> 00:07:21.730
So we'll take my first image again.

143
00:07:21.730 --> 00:07:23.060
All right, we never changed the name.

144
00:07:23.060 --> 00:07:24.690
So that's us, the very first one.

145
00:07:26.080 --> 00:07:27.430
Yeah, put that up there,
let's keep them all up.

146
00:07:27.430 --> 00:07:28.960
>> Let's put up over here, all right.

147
00:07:28.960 --> 00:07:30.680
>> Yeah,
then the next one was facial recognition.

148
00:07:30.680 --> 00:07:32.030
>> Facial recognition.

149
00:07:32.030 --> 00:07:32.640
Bam.

150
00:07:32.640 --> 00:07:33.240
Look at that.
>> What?

151
00:07:34.310 --> 00:07:35.380
>> Two faces.

152
00:07:35.380 --> 00:07:38.775
So also know that the reason

153
00:07:38.775 --> 00:07:43.270
the hard cascade file is very important
is because this one is a frontal face.

154
00:07:43.270 --> 00:07:45.870
So if me or Robert turn to our sides,

155
00:07:45.870 --> 00:07:49.490
we wouldn't be boxed right now because
it doesn't detect those things.

156
00:07:49.490 --> 00:07:54.460
You can also do other cool neat detection
stuff such as eyes or nose or mouth and

157
00:07:54.460 --> 00:07:55.920
then, yeah, we also did the edges.

158
00:07:55.920 --> 00:07:59.540
I thought this one was pretty cool so
I wanted to include it.

159
00:07:59.540 --> 00:08:02.580
>> Man.
>> Look at that, with all its lines.

160
00:08:02.580 --> 00:08:04.580
>> And that's the one where you
can kind of change that threshold.

161
00:08:04.580 --> 00:08:07.920
>> Yeah, so at a higher number, you'll
see fewer lines, and at a lower number,

162
00:08:07.920 --> 00:08:09.470
you see many more.

163
00:08:09.470 --> 00:08:10.270
>> And actually, it's kind of cool.

164
00:08:10.270 --> 00:08:13.930
If you look at Randy's hair,
kind of on the top right side,

165
00:08:13.930 --> 00:08:16.970
it almost blends in with the background,
so it couldn't detect any edges there.

166
00:08:16.970 --> 00:08:17.660
Pretty cool.

167
00:08:17.660 --> 00:08:21.190
>> Finally, we have our little
grayscale image, as you can see.

168
00:08:22.615 --> 00:08:25.310
So, we're all black and white right now.

169
00:08:25.310 --> 00:08:26.580
Pretty neat, right?

170
00:08:26.580 --> 00:08:29.220
And so those are some simple
features you can add.

171
00:08:29.220 --> 00:08:30.000
And there are a ton more.

172
00:08:30.000 --> 00:08:31.680
You can go ahead and look it up.

173
00:08:31.680 --> 00:08:32.750
>> OpenCV.
>> OpenCV.

174
00:08:32.750 --> 00:08:33.400
SimpleCV.

175
00:08:33.400 --> 00:08:34.840
>> SimpleCV, there you go.

176
00:08:34.840 --> 00:08:36.380
>> Very simple, awesome.

177
00:08:36.380 --> 00:08:39.060
>> Cool.
All right, so now that you've kind of seen

178
00:08:39.060 --> 00:08:42.650
our program or our application and
we've walked you through those steps,

179
00:08:42.650 --> 00:08:47.660
I would suggest maybe rewatching this,

180
00:08:47.660 --> 00:08:52.680
pausing it, getting familiar with
the code, going through those libraries,

181
00:08:52.680 --> 00:08:56.510
everything, the documentation that's
provided to you in the read me files.

182
00:08:56.510 --> 00:09:00.230
>> Go ahead and
check out some other sample code online.

183
00:09:00.230 --> 00:09:02.482
There's been a ton posted.

184
00:09:02.482 --> 00:09:05.190
Apply them to your own application and
mess around with it.

185
00:09:05.190 --> 00:09:09.560
>> Yeah because next, we're actually
going to show you how to send that image

186
00:09:10.590 --> 00:09:13.080
after it's been ran through a script.

187
00:09:13.080 --> 00:09:14.380
>> Yeah.

188
00:09:14.380 --> 00:09:16.590
>> To a host computer, through a network.

189
00:09:16.590 --> 00:09:17.510
All right.
So we'll see you then.