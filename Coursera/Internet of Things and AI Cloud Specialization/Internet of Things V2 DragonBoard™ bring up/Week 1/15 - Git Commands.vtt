WEBVTT

1
00:00:03.617 --> 00:00:04.880
Welcome back everyone.

2
00:00:04.880 --> 00:00:07.070
In this section,
we're gonna be going over different and

3
00:00:07.070 --> 00:00:09.560
various Git commands that
you use to utilize Git.

4
00:00:11.470 --> 00:00:14.743
>> So first, before you create,
or essentially what you

5
00:00:14.743 --> 00:00:18.900
want to do to start your Git
repository is the git init command.

6
00:00:18.900 --> 00:00:22.334
And this will just initialize
a git repository and create a dot

7
00:00:22.334 --> 00:00:26.900
git file that will essentially be the key
to being able to use Git on your computer.

8
00:00:28.000 --> 00:00:30.760
>> However, if you don't want to
create your own repository initially,

9
00:00:30.760 --> 00:00:33.712
you want to just copy someone
else's from GitHub or Bitbucket or

10
00:00:33.712 --> 00:00:38.310
from some other repository, the git clone
command actually helps you achieve that.

11
00:00:38.310 --> 00:00:39.590
You just type in git clone and

12
00:00:41.120 --> 00:00:44.810
type in the URL to wherever
that repository is located.

13
00:00:45.900 --> 00:00:50.310
>> And next we have the git add
command and the git rm or git remove.

14
00:00:50.310 --> 00:00:53.740
And what these commands do is
they essentially add files or

15
00:00:53.740 --> 00:00:56.540
remove files that are being
tracked with your git.

16
00:00:56.540 --> 00:01:00.730
So for example, if Ara has or
if Ara created a new file,

17
00:01:00.730 --> 00:01:07.280
let's say awesome.java, and he wants
to add that to the local repository,

18
00:01:07.280 --> 00:01:12.070
you'd have to do git add awesome.java,
and then if he wants to

19
00:01:12.070 --> 00:01:15.820
remove that file from being tracked with
Git, the he can do git rm to remove it.

20
00:01:17.610 --> 00:01:21.820
>> Next is the git commit command,
which is actually the bread and butter for

21
00:01:21.820 --> 00:01:25.050
Git and basically any type
of version control system.

22
00:01:25.050 --> 00:01:28.380
After you've added all your
files to be tracked, or

23
00:01:28.380 --> 00:01:30.480
removed any files from tracking,

24
00:01:30.480 --> 00:01:34.990
using a git commit command basically
creates a snapshot of that moment in time.

25
00:01:34.990 --> 00:01:40.780
And basically, that's really good for
if you do subsequent commits,

26
00:01:40.780 --> 00:01:44.990
it's gonna go ahead and
keep different versions over time.

27
00:01:44.990 --> 00:01:49.430
>> And also, with commits, you're able to
leave messages to a lot of your teammates,

28
00:01:49.430 --> 00:01:54.180
or your friends, or whoever, to see what
kind of changes you've made, as well.

29
00:01:54.180 --> 00:01:54.870
>> Exactly.

30
00:01:54.870 --> 00:01:58.915
And then the last two commands are the git
push and the git pull command,

31
00:01:58.915 --> 00:02:00.870
which basically go hand in hand.

32
00:02:00.870 --> 00:02:05.537
So we are talking about GitHub and
Bitbucket, so how exactly do we push code

33
00:02:05.537 --> 00:02:09.539
from our computer to those online
repositories and vice versa,

34
00:02:09.539 --> 00:02:14.725
git push pushes code from your computer to
the online repository, whereas git pull

35
00:02:14.725 --> 00:02:20.260
actually pulls any changes that were made
from the repository onto your computer.

36
00:02:20.260 --> 00:02:23.390
So in that way you're able to keep
not only your code updated but

37
00:02:23.390 --> 00:02:25.160
also the repositories.

38
00:02:25.160 --> 00:02:29.130
>> And do note that there are other
Git commands that are available,

39
00:02:29.130 --> 00:02:33.060
however we found that these
are the most common ones that are used.

40
00:02:33.060 --> 00:02:37.780
For full documentation,
you can probably go the Git website and

41
00:02:37.780 --> 00:02:39.364
kind of check them out, as well.

42
00:02:39.364 --> 00:02:40.525
>> Exactly.

43
00:02:40.525 --> 00:02:43.135
So now what we're gonna do is we're gonna,
in the next section,

44
00:02:43.135 --> 00:02:45.715
we're gonna be going over
basically the life cycle of Git.

45
00:02:45.715 --> 00:02:48.766
And as you know, it's kind of in
the same order that these commands are,

46
00:02:48.766 --> 00:02:49.715
more or less.

47
00:02:49.715 --> 00:02:50.635
So I'll go ahead and see you there.