WEBVTT

1
00:00:00.618 --> 00:00:04.798
Hey guys, we're going to be going
over what Git is in this section.

2
00:00:04.798 --> 00:00:10.310
So, Git is a version control system, which
basically stands for, when you write code

3
00:00:10.310 --> 00:00:15.994
or whatever, you basically, keep track of
the different versions at different times.

4
00:00:15.994 --> 00:00:20.527
In this case, Git is actually
a distributed version control system which

5
00:00:20.527 --> 00:00:25.424
actually means that you have one central
place where all your code is located and

6
00:00:25.424 --> 00:00:29.445
every single time you want to
do modifications, you basically,

7
00:00:29.445 --> 00:00:32.396
make a copy of that code
onto your own computer.

8
00:00:32.396 --> 00:00:36.666
So, that means, if I were to check out
from that repository and Jacob were to

9
00:00:36.666 --> 00:00:40.834
check out from that repository,
we get an entire copy of the entire code.

10
00:00:40.834 --> 00:00:44.476
And we get to play around however we want
as much as we want on our own computers.

11
00:00:44.476 --> 00:00:49.163
>> And changes made in my repository
would be separate from changes

12
00:00:49.163 --> 00:00:50.996
made in his repository.

13
00:00:50.996 --> 00:00:53.036
And with version control system,

14
00:00:53.036 --> 00:00:57.194
you are actually able to create
snapshots of your code in repository.

15
00:00:57.194 --> 00:01:02.412
For example, if I make modifications
with my code, I can save that and

16
00:01:02.412 --> 00:01:08.515
perhaps, later if I make an error or do
something that causes the system to crash,

17
00:01:08.515 --> 00:01:11.354
I can always go back to that snapshot.

18
00:01:11.354 --> 00:01:12.476
>> Exactly.

19
00:01:12.476 --> 00:01:16.194
And also a huge part of Git
also is to share code and

20
00:01:16.194 --> 00:01:20.476
basically to have everyone
be able to access your code.

21
00:01:20.476 --> 00:01:24.849
Because with Git, you're able to upload
it to some sort of remote repository, and

22
00:01:24.849 --> 00:01:27.794
you can just have everybody
just point everybody to it.

23
00:01:27.794 --> 00:01:30.836
And with a simple command,
you can basically copy the code over.

24
00:01:30.836 --> 00:01:35.112
It kinda takes away the struggle where
you had to upload it onto a USB or

25
00:01:35.112 --> 00:01:38.674
you had to zip up all your files and
send it through email.

26
00:01:38.674 --> 00:01:43.301
>> Yeah, and also Git,
it handles all the different, perhaps,

27
00:01:43.301 --> 00:01:47.594
I made a change to a file and
Ora also made a change to a file.

28
00:01:47.594 --> 00:01:51.792
As opposed to rewriting it over, Git has
a system that will either integrate them

29
00:01:51.792 --> 00:01:54.773
together or let you know when
there is like merge conflict

30
00:01:54.773 --> 00:01:55.294
>> Exactly.

31
00:01:55.294 --> 00:01:56.193
Yeah.

32
00:01:56.193 --> 00:02:01.234
>> So, Ora, did you have any experiences
with Git or how do you feel about Git?

33
00:02:01.234 --> 00:02:05.676
>> If you're going to be a real
programmer, like you need Git.

34
00:02:05.676 --> 00:02:07.034
It doesn't even have to be Git.

35
00:02:07.034 --> 00:02:11.354
It could be SVN or Mercurial or
any type of version control system.

36
00:02:11.354 --> 00:02:16.190
Git just happens to be the trending
version control system at the time, and

37
00:02:16.190 --> 00:02:19.031
it happens to be actually
pretty awesome and

38
00:02:19.031 --> 00:02:22.594
easy to use, especially for
individual developers.

39
00:02:22.594 --> 00:02:27.078
But without a doubt,
if you plan on doing any real programming,

40
00:02:27.078 --> 00:02:30.398
you need to have Git just
in case you mess up, and

41
00:02:30.398 --> 00:02:35.154
you will mess up, you can always
go back to your previous instance.

42
00:02:35.154 --> 00:02:36.154
How about you?

43
00:02:36.154 --> 00:02:39.596
>> For me,
I do agree with all the points you said.

44
00:02:39.596 --> 00:02:45.110
Just as an example, I was writing
this program for one of my classes,

45
00:02:45.110 --> 00:02:49.116
and I accidentally deleted
a couple of the files.

46
00:02:49.116 --> 00:02:49.916
>> Yeah.

47
00:02:49.916 --> 00:02:54.436
>> And that those files were very crucial.

48
00:02:54.436 --> 00:02:54.994
>> Yeah.

49
00:02:54.994 --> 00:02:59.963
>> And as opposed to rewriting
the files and kind of trying

50
00:02:59.963 --> 00:03:05.039
to sort through all that problem,
all I had to do was pull

51
00:03:05.039 --> 00:03:09.914
from the repository and
I saved myself a lot of hours.

52
00:03:09.914 --> 00:03:10.594
>> I can imagine.

53
00:03:10.594 --> 00:03:11.236
>> Yeah.

54
00:03:11.236 --> 00:03:15.196
>> I can imagine you have these core files
and all of a sudden, they're deleted.

55
00:03:15.196 --> 00:03:17.716
So, Git help solve that problem.

56
00:03:17.716 --> 00:03:19.900
So, we definitely recommend you
guys to learn more about Git and

57
00:03:19.900 --> 00:03:20.956
get more comfortable with it.

58
00:03:20.956 --> 00:03:22.676
>> Yeah.

59
00:03:22.676 --> 00:03:24.954
In the next section,
we'll show you how to set it up.

60
00:03:24.954 --> 00:03:26.370
See you then.