WEBVTT

1
00:00:00.320 --> 00:00:02.700
Hello everyone. In this video,

2
00:00:02.700 --> 00:00:05.010
we will be demo-ing the home surveillance system made by

3
00:00:05.010 --> 00:00:08.265
one of Linaro's applications engineers.

4
00:00:08.265 --> 00:00:10.289
Basically, the idea was,

5
00:00:10.289 --> 00:00:14.824
instead of buying a commercial surveillance system for your home,

6
00:00:14.824 --> 00:00:18.286
we understand how to use a Dragonboard and the sensors at this point,

7
00:00:18.286 --> 00:00:21.110
so might as well just add on a camera and do

8
00:00:21.110 --> 00:00:25.950
some Cloud services to do our own home surround system.

9
00:00:25.950 --> 00:00:32.370
These tools do touch on some topics we will cover it

10
00:00:32.370 --> 00:00:35.475
in future videos more in depth but the blog

11
00:00:35.475 --> 00:00:38.970
that the application that Drew and I created is very good.

12
00:00:38.970 --> 00:00:45.075
So it's a very easy way to go through and understanding how to do this project.

13
00:00:45.075 --> 00:00:49.440
So as we mentioned earlier,

14
00:00:49.440 --> 00:00:57.220
it was created by an application engineer in Linaro with the name of Manivannan.

15
00:00:57.220 --> 00:01:02.805
Sorry I don't want to mispronounced his name so I'm not gonna try.

16
00:01:02.805 --> 00:01:05.325
So it's a five part in

17
00:01:05.325 --> 00:01:12.220
depth instruction guide on how to build it and you can find it on this website below and

18
00:01:12.220 --> 00:01:16.655
you can find the repository to look at the code in detail or

19
00:01:16.655 --> 00:01:21.680
other files such as the readme to know what more you can do.

20
00:01:21.680 --> 00:01:28.810
It uses AWS and S and S for storage and

21
00:01:28.810 --> 00:01:36.576
email notification and these are just little snippets of stuff we'll cover later.

22
00:01:36.576 --> 00:01:42.340
And this isn't itself an in depth guide on either one of these topics.

23
00:01:42.340 --> 00:01:45.890
So here are some of the requirements that you need.

24
00:01:45.890 --> 00:01:53.190
First you'll need the Dragonboard 410C and power supply and then you will need a webcam.

25
00:01:53.190 --> 00:01:56.100
It would be recommended if you could find

26
00:01:56.100 --> 00:02:00.199
a USB webcam as it is easy to connect to the Dragonboard.

27
00:02:00.199 --> 00:02:04.150
Sensors Mezzanine, these are used to connect the Servo.

28
00:02:04.150 --> 00:02:09.700
Webcam mount which is kind of optional depending on what webcam

29
00:02:09.700 --> 00:02:15.320
you have but we kind of found it hard to place the webcam on top of the Servo.

30
00:02:15.320 --> 00:02:24.700
So just find the mount that seems applicable to this application and then we have

31
00:02:24.700 --> 00:02:33.442
two Servos that we will normally connect to pins 9 and 10 on the blue headers on

32
00:02:33.442 --> 00:02:38.230
the Mezzanine but instead we decided to connect it to D5s and 6

33
00:02:38.230 --> 00:02:43.590
as it's easier with the Grove connectors instead of having wires on it.

34
00:02:43.590 --> 00:02:48.520
So we wanted to stress that the code that we gave

35
00:02:48.520 --> 00:02:55.010
you will use D5 and D6 instead of the headers.

36
00:02:55.010 --> 00:02:59.320
And here are some of the software requirements that we need,

37
00:02:59.320 --> 00:03:02.880
OpenCV which we will cover later, Pillows,

38
00:03:02.880 --> 00:03:07.650
an Image Processing library that we won't cover in

39
00:03:07.650 --> 00:03:13.400
this course but you can look at it in more detail if you want to.

40
00:03:13.400 --> 00:03:16.995
We will be using Arduino for some of our programs.

41
00:03:16.995 --> 00:03:23.850
Flask, which is a web server and as we mentioned earlier we will be using AWS.

42
00:03:23.850 --> 00:03:27.345
So in this example,

43
00:03:27.345 --> 00:03:31.545
we won't be covering Port Forwarding because this is used

44
00:03:31.545 --> 00:03:36.475
for access outside of your general area.

45
00:03:36.475 --> 00:03:41.694
So since we're connected through UC San Diego's network,

46
00:03:41.694 --> 00:03:43.775
we can do everything locally.

47
00:03:43.775 --> 00:03:50.115
But if you want to learn more about how to access your home surveillance,

48
00:03:50.115 --> 00:03:55.465
we recommend you go look at Port Forwarding.

49
00:03:55.465 --> 00:04:00.185
Here's a little description of our home surveillance.

50
00:04:00.185 --> 00:04:09.200
So it will detect anyone who go will over to camera and if it

51
00:04:09.200 --> 00:04:13.430
recognizes the face then it won't notify you or anything but

52
00:04:13.430 --> 00:04:18.725
if it recognizes someone that isn't supposed to be at your home,

53
00:04:18.725 --> 00:04:20.990
then you'll get an email.

54
00:04:20.990 --> 00:04:25.280
And it also allows you to have a livestream of

55
00:04:25.280 --> 00:04:30.710
your home when you're away so you can see what's going on and stuff like that.

56
00:04:30.710 --> 00:04:36.047
So now we'll be going through the Dragonboard terminal to show you guys a demo,

57
00:04:36.047 --> 00:04:41.917
just a phase checking and the Servo is moving around accordingly.

58
00:04:41.917 --> 00:04:51.695
So if we go into the Dragonboard we'll have first LS and you see all these files.

59
00:04:51.695 --> 00:04:53.870
This is directly from the GitHub that they came

60
00:04:53.870 --> 00:04:57.245
with and we're just going to run a phase check.

61
00:04:57.245 --> 00:05:01.175
There's other parts to doing this that we skipped that is in the blog,

62
00:05:01.175 --> 00:05:03.315
but we skipped those over.

63
00:05:03.315 --> 00:05:05.270
That's just gathering a phase data and then

64
00:05:05.270 --> 00:05:10.945
training the algorithm that they have already.

65
00:05:10.945 --> 00:05:13.115
And then we run this.

66
00:05:13.115 --> 00:05:19.036
Takes a bit to set up because OpenCV is so big and then just put in who you want to do.

67
00:05:19.036 --> 00:05:24.458
So as you can see in here it tags

68
00:05:24.458 --> 00:05:27.830
Simon and then if we cut through the Mezzanine

69
00:05:27.830 --> 00:05:32.021
itself you can see that some of the Servos are twitching.

70
00:05:32.021 --> 00:05:38.788
That's because it's trying to center more by phases according to the image.

71
00:05:38.788 --> 00:05:41.960
We don't have the Gimbal at the moment because our Servos are a little

72
00:05:41.960 --> 00:05:45.685
weaker and we see that these Servos,

73
00:05:45.685 --> 00:05:46.830
they're kind of twitching,

74
00:05:46.830 --> 00:05:48.630
not because they reached the max

75
00:05:48.630 --> 00:05:52.220
but they should twitch the other way depending on how I move.

76
00:05:52.220 --> 00:05:55.800
It's very subtle.

77
00:05:55.800 --> 00:05:59.530
It's just to gradually put my face in the middle of the thing.

78
00:05:59.530 --> 00:06:03.075
Now just to prove to you that I'm just not putting Simon at all times,

79
00:06:03.075 --> 00:06:08.730
we can put whatever old presidents on there.

80
00:06:08.730 --> 00:06:10.856
As you can see, it correctly identifies Obama.

81
00:06:10.856 --> 00:06:12.855
And then if we actually try Andrew,

82
00:06:12.855 --> 00:06:16.275
it doesn't know who Andrew is but there is a chance for errors.

83
00:06:16.275 --> 00:06:23.878
So if he looks into it,

84
00:06:23.878 --> 00:06:27.880
it doesn't even see that you're a face.

85
00:06:27.880 --> 00:06:33.448
Try of move around a bit.

86
00:06:33.448 --> 00:06:35.455
Okay. So it tags you as me.

87
00:06:35.455 --> 00:06:37.090
Okay. So this isn't the best thing.

88
00:06:37.090 --> 00:06:42.550
The training for this is not even 10 minutes because there's two minutes on 30 images.

89
00:06:42.550 --> 00:06:44.985
So there's a lot of room for error.

90
00:06:44.985 --> 00:06:47.800
Not as good as some machine learning models

91
00:06:47.800 --> 00:06:51.015
such as like deep learning but good enough for our purposes.

92
00:06:51.015 --> 00:06:54.110
So if we exit this using 'Q',

93
00:06:54.110 --> 00:07:01.165
we can go to the final whole surveillance system.

94
00:07:01.165 --> 00:07:06.400
Is located in part five.

95
00:07:07.920 --> 00:07:10.970
And there you go.

96
00:07:10.970 --> 00:07:13.790
We have home surveillance.

97
00:07:13.790 --> 00:07:15.680
So before we do this,

98
00:07:15.680 --> 00:07:19.365
let's jump to my laptop and then we can see

99
00:07:19.365 --> 00:07:23.390
Amazon's S3 bucket which is basically a hard drive

100
00:07:23.390 --> 00:07:26.505
on Amazon Web Services that you can use and put files in.

101
00:07:26.505 --> 00:07:32.670
As you can see here, we're on Amazon Web Services and this might look unfamiliar to you.

102
00:07:32.670 --> 00:07:35.525
Again, we'll be talking about this more in detail

103
00:07:35.525 --> 00:07:39.350
in our next course which will cover cloud services in depth.

104
00:07:39.350 --> 00:07:43.735
But essentially, we should think of this is just a hard drive.

105
00:07:43.735 --> 00:07:48.230
Sort of some computer owned by Amazon that you've access to through the Internet.

106
00:07:48.230 --> 00:07:52.295
Basic S3 is, I think

107
00:07:52.295 --> 00:07:55.240
simple storage solution or something like

108
00:07:55.240 --> 00:07:59.305
that but it's just a complicated name for a simple concept.

109
00:07:59.305 --> 00:08:03.380
But essentially, what they call their hard drives that are available

110
00:08:03.380 --> 00:08:07.495
to customers are buckets and you can put files and folders here.

111
00:08:07.495 --> 00:08:08.970
As you can see here,

112
00:08:08.970 --> 00:08:10.895
my current bucket called UCSD home

113
00:08:10.895 --> 00:08:14.595
is empty and it's telling me all the different ways to put it in.

114
00:08:14.595 --> 00:08:18.365
And then we'll actually be putting in one of the images directly from

115
00:08:18.365 --> 00:08:21.810
our capture on the direct board to this program.

116
00:08:21.810 --> 00:08:24.650
So now we'll jump back to the Dragonboard and show you guys how

117
00:08:24.650 --> 00:08:28.250
to run the program to detect a face.

118
00:08:28.250 --> 00:08:32.983
So, if I just press Enter and run this,

119
00:08:32.983 --> 00:08:37.530
it takes a bit to load up for Flask and OpenCV and all that.

120
00:08:37.530 --> 00:08:41.240
And it should detect my face.

121
00:08:41.240 --> 00:08:45.718
I saw the Servos twitching but if I look into it,

122
00:08:45.718 --> 00:08:54.590
it doesn't really display an image here but hopefully that worked and we have an image.

123
00:08:54.590 --> 00:08:56.940
So if we jump back to my computer,

124
00:08:56.940 --> 00:09:02.630
we can see on S3 that there's this newly created folder here called Capture.

125
00:09:02.630 --> 00:09:04.815
Before there was just nothing, just instructions.

126
00:09:04.815 --> 00:09:05.930
But if we go into captured,

127
00:09:05.930 --> 00:09:09.715
you can see my name and then a little zero to show the image.

128
00:09:09.715 --> 00:09:15.575
And now if I actually open this and download it and then open it there,

129
00:09:15.575 --> 00:09:16.720
you can see my face.

130
00:09:16.720 --> 00:09:18.800
And this just got sent directly from

131
00:09:18.800 --> 00:09:23.195
the Dragonboard to Amazon Web Services and now I can put it on my computer.

132
00:09:23.195 --> 00:09:25.965
Just like an easy way of connecting everything together.

133
00:09:25.965 --> 00:09:28.910
And one more thing we added to it

134
00:09:28.910 --> 00:09:34.484
is one of the other services that Amazon offers is S and S,

135
00:09:34.484 --> 00:09:38.180
which is simple notification service and essentially allows us to

136
00:09:38.180 --> 00:09:43.135
email whoever we want as long as they allow it on email.

137
00:09:43.135 --> 00:09:50.515
So one of the settings we set for this is that it will send me an email if it detects me.

138
00:09:50.515 --> 00:09:52.655
Ideally, you'd want this for an intruder,

139
00:09:52.655 --> 00:09:56.890
identifying an intruder or someone you just hate that you don't want in your house.

140
00:09:56.890 --> 00:10:01.225
But as you can see here, we got a notification, "Something happened."

141
00:10:01.225 --> 00:10:04.085
This is mostly just all the data that is inside of it

142
00:10:04.085 --> 00:10:10.810
but we just know that this will mean an intruder has come into our house.

143
00:10:10.810 --> 00:10:13.730
And the last thing is, once you get this notification,

144
00:10:13.730 --> 00:10:16.625
if you have this computer

145
00:10:16.625 --> 00:10:21.260
accessible not only on your network but through the router and to the rest of the world,

146
00:10:21.260 --> 00:10:27.340
we can just go to this webpage and then see a video,

147
00:10:27.340 --> 00:10:30.120
a live stream of whatever the camera sees.

148
00:10:30.120 --> 00:10:32.745
So you can imagine some person breaks to your home,

149
00:10:32.745 --> 00:10:34.487
you get an email, you're,

150
00:10:34.487 --> 00:10:35.550
"I want to see what's happening."

151
00:10:35.550 --> 00:10:37.890
And then you're going to see what it is.

152
00:10:37.890 --> 00:10:42.403
Now it could have been actually a burglar or some cat that it triggered falsely

153
00:10:42.403 --> 00:10:48.365
but ideally the face recognition would make that occur less.

154
00:10:48.365 --> 00:10:53.625
So, that's most of the project.

155
00:10:53.625 --> 00:10:56.805
Pretty nice system that you can build in

156
00:10:56.805 --> 00:11:01.270
just five hours or so through instructions and stuff.

157
00:11:01.270 --> 00:11:05.497
It's not too bad. So stay tuned for learning about more Cloud

158
00:11:05.497 --> 00:11:10.000
in the next course and that should be it for this course. Thank you.