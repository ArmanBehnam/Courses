WEBVTT

1
00:00:01.290 --> 00:00:03.515
Hello.

2
00:00:03.515 --> 00:00:05.737
We're going to introduce Lex to you guys,

3
00:00:05.737 --> 00:00:09.160
which is basically the Engine dial exe runtime.

4
00:00:09.160 --> 00:00:15.565
Let's just go onto the overview sites to talk about what we're going to go over.

5
00:00:15.565 --> 00:00:16.825
So, the first step,

6
00:00:16.825 --> 00:00:19.980
we're going to describe what Lex is.

7
00:00:19.980 --> 00:00:25.435
Afterwards, we're going to show you how to create a Lex chatbot on the console and then,

8
00:00:25.435 --> 00:00:30.490
we're going to have some fun with that bot through Python.

9
00:00:30.490 --> 00:00:34.665
Lex is essentially a service on

10
00:00:34.665 --> 00:00:40.220
a day to have an Amazon Web Services and it allows for conversational interfaces.

11
00:00:40.220 --> 00:00:41.600
And basically, what it means is,

12
00:00:41.600 --> 00:00:46.245
if you have ever done this before but if you ever interacted with a chatbot

13
00:00:46.245 --> 00:00:51.310
like on Facebook or through a text and then they respond with certain messages,

14
00:00:51.310 --> 00:00:53.110
let's say you want to order something like,

15
00:00:53.110 --> 00:00:56.800
I want to order a hamburger from McDonald's and then they have a chatbot,

16
00:00:56.800 --> 00:01:01.705
you can talk to them like in natural language and then you understand,

17
00:01:01.705 --> 00:01:04.300
what burger you want, asked if you want pickles.

18
00:01:04.300 --> 00:01:07.885
So, it's more natural than pressing buttons and stuff.

19
00:01:07.885 --> 00:01:12.470
And it just allows you to make bots for that, for certain purposes.

20
00:01:12.470 --> 00:01:15.340
And basically, it can either understand audio or text.

21
00:01:15.340 --> 00:01:17.780
In this demo, we're just going to using text

22
00:01:17.780 --> 00:01:21.015
but you could give it an audio file and you would understand.

23
00:01:21.015 --> 00:01:24.140
It would convert that to text and try to understand that.

24
00:01:24.140 --> 00:01:26.321
And it responds with some preset messages,

25
00:01:26.321 --> 00:01:29.430
asking you, oh do you want pickles or your hamburger or something like that.

26
00:01:29.430 --> 00:01:33.320
And Lex is actually the thing that powers Amazon Alexa,

27
00:01:33.320 --> 00:01:39.045
so that how Alexa understands people and how to respond.

28
00:01:39.045 --> 00:01:42.480
So, some important notes,

29
00:01:42.480 --> 00:01:47.345
we want to tell you guys that it's only available on certain regions.

30
00:01:47.345 --> 00:01:50.140
The first region is North Virginia,

31
00:01:50.140 --> 00:01:55.435
which can be specified through us- east-1 and Ireland,

32
00:01:55.435 --> 00:01:58.205
which is specified through eu-west-1.

33
00:01:58.205 --> 00:02:01.380
And we are going to use North Virginia

34
00:02:01.380 --> 00:02:08.450
and we want you to change your region and both the console and SDK.

35
00:02:08.450 --> 00:02:09.860
So, on your console,

36
00:02:09.860 --> 00:02:11.710
as Simon we'll show you later,

37
00:02:11.710 --> 00:02:17.405
you want to select your region to be US East 1 North Virginia.

38
00:02:17.405 --> 00:02:22.105
And on your SDK which is like on your terminal,

39
00:02:22.105 --> 00:02:27.665
you want to run aws configure and enter us-east-1 for region.

40
00:02:27.665 --> 00:02:31.815
And then afterwards, we also want you to enable

41
00:02:31.815 --> 00:02:35.983
your IAM user to have access to Amazon Lex.

42
00:02:35.983 --> 00:02:46.430
So, just change the settings of your IAM user so, AmazonLexFullAcess is enable.

43
00:02:46.430 --> 00:02:53.950
Let's go onto Simon's computer to have a deeper look onto how to set it up.

44
00:02:53.950 --> 00:02:58.540
Yes. So on my computer,

45
00:02:58.540 --> 00:03:02.050
you can see that we're currently on the console,

46
00:03:02.050 --> 00:03:06.835
AWS Console here and we're kind of set it to Oregon.

47
00:03:06.835 --> 00:03:08.290
Now, if we had to go to Lex,

48
00:03:08.290 --> 00:03:10.920
down here and try, here we go,

49
00:03:10.920 --> 00:03:14.780
Amazon Lex, next here,

50
00:03:14.780 --> 00:03:16.705
it's not available on US West.

51
00:03:16.705 --> 00:03:18.905
Or you might want to make it bigger as well.

52
00:03:18.905 --> 00:03:21.228
Oh yeah. Because here,

53
00:03:21.228 --> 00:03:23.715
it's a little bit bigger, a region unsupported.

54
00:03:23.715 --> 00:03:25.470
So how you can just access it,

55
00:03:25.470 --> 00:03:29.890
is just change it to US East

56
00:03:29.890 --> 00:03:34.680
and which is also North Virginia and you can just get started through here.

57
00:03:34.680 --> 00:03:38.370
And basically, here we can create a Lex bot.

58
00:03:38.370 --> 00:03:43.490
You can either create your own custom bot or create one of their pre-built ones.

59
00:03:43.490 --> 00:03:45.850
So, one of them is for booking a trip,

60
00:03:45.850 --> 00:03:48.500
ordering flowers and scheduling appointment.

61
00:03:48.500 --> 00:03:53.290
So this one, we just can do OrderFlowers and this is just the IAM role,

62
00:03:53.290 --> 00:03:55.715
one of the roles for this service.

63
00:03:55.715 --> 00:03:57.188
So, not to worry about that,

64
00:03:57.188 --> 00:03:59.875
they make it for you.

65
00:03:59.875 --> 00:04:01.585
This is for COPPA.

66
00:04:01.585 --> 00:04:06.206
We're just going to say no for this one because you're not going to have any child users.

67
00:04:06.206 --> 00:04:11.175
This is only really relevant in the United States but don't worry about it too much,

68
00:04:11.175 --> 00:04:14.715
just post no and for create,

69
00:04:14.715 --> 00:04:19.380
it just takes a second to create and

70
00:04:19.380 --> 00:04:25.175
couple of sections where it takes a little bit to load.

71
00:04:25.175 --> 00:04:31.930
But in the meantime, we can go into this and go into IAM Users and just to double check

72
00:04:31.930 --> 00:04:37.860
that our user has access to Lex.

73
00:04:37.860 --> 00:04:41.110
So, go to Users and then,

74
00:04:41.110 --> 00:04:44.050
the one we were using on our SDK is Lex.

75
00:04:44.050 --> 00:04:50.010
And, we can see here that it has access to the Administrator and AmazonLexFullAccess,

76
00:04:50.010 --> 00:04:51.640
so they can actually use the service.

77
00:04:51.640 --> 00:04:54.340
So, we're good on that and now,

78
00:04:54.340 --> 00:04:57.010
we're back on here and looks like it's all good.

79
00:04:57.010 --> 00:05:00.060
This might look a little muddle here,

80
00:05:00.060 --> 00:05:01.900
so I'll just the change that, there you go.

81
00:05:01.900 --> 00:05:06.315
These are the Sample utterances, basically,

82
00:05:06.315 --> 00:05:09.148
what the bot will take in,

83
00:05:09.148 --> 00:05:12.965
if I say I'll like to pick up flowers, it will respond.

84
00:05:12.965 --> 00:05:16.635
It will know that it want to do this intent, which is order flowers.

85
00:05:16.635 --> 00:05:21.670
Basically, it's like different ways to phrase what you're trying to do with this,

86
00:05:21.670 --> 00:05:23.940
like part of the program.

87
00:05:23.940 --> 00:05:27.820
So, one of the things is Slots,

88
00:05:27.820 --> 00:05:30.160
it's basically, what data that you need.

89
00:05:30.160 --> 00:05:34.240
It's like almost fill out a form but they asked it in a really natural way.

90
00:05:34.240 --> 00:05:36.890
For example, if you need to what kind of flower type you want to get,

91
00:05:36.890 --> 00:05:41.145
asked what types of flowers would you like.

92
00:05:41.145 --> 00:05:43.720
So, one thing you can do is also add your own,

93
00:05:43.720 --> 00:05:49.295
let's say location and choose your location and then choose Slot type and prompt.

94
00:05:49.295 --> 00:05:50.680
We'll do it a little bit later.

95
00:05:50.680 --> 00:05:54.135
For now, we're just going to go to the current settings.

96
00:05:54.135 --> 00:05:57.226
So, when you actually deploy this thing,

97
00:05:57.226 --> 00:06:00.660
you would want to use an Amazon lambda function to do something like

98
00:06:00.660 --> 00:06:06.450
change entry in a database to make it,

99
00:06:06.450 --> 00:06:10.440
so that someone order something and you know that an order is ready.

100
00:06:10.440 --> 00:06:15.400
So for here, we just wanted to build and this will take some time.

101
00:06:15.400 --> 00:06:20.510
In the meantime, we can go into our SDK and make sure the region is set correctly.

102
00:06:20.510 --> 00:06:23.900
If you don't do this, it won't be correct.

103
00:06:23.900 --> 00:06:25.350
If you guys haven't seen this before,

104
00:06:25.350 --> 00:06:30.045
this is just a virtual environment within the terminal.

105
00:06:30.045 --> 00:06:34.695
Basically, it's one of the Python's way of just keeping certain libraries in one place.

106
00:06:34.695 --> 00:06:39.515
So currently, I'm just in that virtual environment. Everything should work the same.

107
00:06:39.515 --> 00:06:43.575
So if just want AWS configure, like you have before.

108
00:06:43.575 --> 00:06:46.080
You can see here asked for the access key again but we're going to use

109
00:06:46.080 --> 00:06:49.035
the one that's already there and asked for the secret again,

110
00:06:49.035 --> 00:06:53.215
again, using the same one and asked for the default for region name.

111
00:06:53.215 --> 00:06:56.815
So, I already set it to us- east-1 but you might be different, so,

112
00:06:56.815 --> 00:07:02.115
I set it to us-east-1 and just press enter, we don't have any for that.

113
00:07:02.115 --> 00:07:04.280
And now, you're set for that.

114
00:07:04.280 --> 00:07:06.395
We can clear this up and go back.

115
00:07:06.395 --> 00:07:08.775
It looks like, this is done building.

116
00:07:08.775 --> 00:07:10.740
So the next step, we have everything set up.

117
00:07:10.740 --> 00:07:12.560
It's ready to receive a message.

118
00:07:12.560 --> 00:07:13.755
You can even test it here.

119
00:07:13.755 --> 00:07:15.105
For example, I can say,

120
00:07:15.105 --> 00:07:22.100
I would like to order flowers and It would just ask, What type of flowers?

121
00:07:22.100 --> 00:07:24.235
So, this is an easy way to test it on here.

122
00:07:24.235 --> 00:07:26.070
The next part that I want to do is publish it,

123
00:07:26.070 --> 00:07:28.520
so the crash use it on our program.

124
00:07:28.520 --> 00:07:32.330
And, we're going to be creating an alias.

125
00:07:32.330 --> 00:07:34.730
An alias is just like an easy way to identify

126
00:07:34.730 --> 00:07:37.960
certain versions of your bot and which one to interact with.

127
00:07:37.960 --> 00:07:41.995
So, you still need a alias even if you just have one version.

128
00:07:41.995 --> 00:07:47.075
So, we're going to call it, I'm actually not gonna call it,

129
00:07:47.075 --> 00:07:49.400
doing the exact for the call because we have defined it in

130
00:07:49.400 --> 00:07:52.310
our program but we just opened this up.

131
00:07:52.310 --> 00:07:56.655
And see here, this is the program that we're going to use.

132
00:07:56.655 --> 00:07:58.950
We go over a little bit more in the future.

133
00:07:58.950 --> 00:08:00.890
But for now, we just want the botName.

134
00:08:00.890 --> 00:08:03.380
So botName is OrderFlowers.

135
00:08:03.380 --> 00:08:08.090
You can see that, it's botName is OrderFlower, right here.

136
00:08:08.090 --> 00:08:11.880
It's the same. And we have botAlias and that's what we want.

137
00:08:11.880 --> 00:08:15.370
So we want to call it FlowerBot because that's what we have in our program.

138
00:08:15.370 --> 00:08:18.905
You can just create a new one here and then,

139
00:08:18.905 --> 00:08:21.195
change it in the program. It doesn't really matter.

140
00:08:21.195 --> 00:08:24.725
It's also the same name. So when you publish, it takes a little bit.

141
00:08:24.725 --> 00:08:30.455
In the meantime, we can just look into this code.

142
00:08:30.455 --> 00:08:35.175
So certainly, this uses boto3 which is the Amazon or the

143
00:08:35.175 --> 00:08:41.665
AWS SDK for Phyton and it just initializes the connection to the Lex runtime,

144
00:08:41.665 --> 00:08:45.100
somewhat a welcome message, don't worry about that.

145
00:08:45.100 --> 00:08:48.410
And then, this is a while loop just a constantly killer conversation

146
00:08:48.410 --> 00:08:51.583
going until we've reached the end of the conversation,

147
00:08:51.583 --> 00:08:53.390
like a flower order.

148
00:08:53.390 --> 00:08:55.070
So, the first part is that,

149
00:08:55.070 --> 00:08:56.680
it takes an input text,

150
00:08:56.680 --> 00:08:59.350
raw input and basically,

151
00:08:59.350 --> 00:09:01.130
just takes in user input like

152
00:09:01.130 --> 00:09:03.950
a sentence that was basically the same thing as I entered here.

153
00:09:03.950 --> 00:09:09.515
And then, it also lets takes in whether or not you want to quit the program or not.

154
00:09:09.515 --> 00:09:14.005
The next part is actually using the Amazon SDK to talk to Lex.

155
00:09:14.005 --> 00:09:17.585
It's basically just choosing the Bot Name, we already said it before.

156
00:09:17.585 --> 00:09:20.270
You can see here that it's done building or publishing.

157
00:09:20.270 --> 00:09:22.625
And here, the Bot Name is OrderFlowers.

158
00:09:22.625 --> 00:09:25.720
We have OrderFlowers here, same thing.

159
00:09:25.720 --> 00:09:27.915
Here, we have Bot Version.

160
00:09:27.915 --> 00:09:30.660
Don't you need to worry about that because alias is the same for this.

161
00:09:30.660 --> 00:09:35.255
And then, we have Bot Alias and it's Flowerbot, so same thing.

162
00:09:35.255 --> 00:09:41.480
Basically, these two things some add for to work and then a user ID.

163
00:09:41.480 --> 00:09:44.975
You don't really need to worry about what it is. You just need to set it.

164
00:09:44.975 --> 00:09:48.110
So, basically, you're just sending

165
00:09:48.110 --> 00:09:52.261
these messages to an endpoint and the only way that AWS can figure out,

166
00:09:52.261 --> 00:09:55.840
if it's the same conversation or not, it's with an ID.

167
00:09:55.840 --> 00:09:56.980
So, you give it just an ID.

168
00:09:56.980 --> 00:09:59.330
You can define this any way you want.

169
00:09:59.330 --> 00:10:02.180
For here, we just defined as a person1.

170
00:10:02.180 --> 00:10:04.160
So, let's say if Andrew tried to talk to it,

171
00:10:04.160 --> 00:10:06.730
we would use person2 to make a new ID.

172
00:10:06.730 --> 00:10:12.670
So here, the ID is like static but it would actually create this for like an app,

173
00:10:12.670 --> 00:10:17.735
you would want it to make it dynamic and changing just depending on what person.

174
00:10:17.735 --> 00:10:19.310
Then, the last part is that,

175
00:10:19.310 --> 00:10:23.510
it just text the dialogState whether or not the order is finished,

176
00:10:23.510 --> 00:10:25.880
and if it's ready for fulfillment,

177
00:10:25.880 --> 00:10:30.025
which means it's done, then your order has been placed.

178
00:10:30.025 --> 00:10:34.040
If else, that means just print the response what Lex says

179
00:10:34.040 --> 00:10:38.845
back and keep going. So we just exit that.

180
00:10:38.845 --> 00:10:40.730
You can see here,

181
00:10:40.730 --> 00:10:43.745
that our Flowerbot has finished publishing.

182
00:10:43.745 --> 00:10:46.970
So now, we can go into the terminal and just run it.

183
00:10:46.970 --> 00:10:50.595
So, type Python Lex and look for the Flowerbot.

184
00:10:50.595 --> 00:10:56.945
I would say, I would like to order flowers again and what kind?

185
00:10:56.945 --> 00:10:58.495
She fires again real quick.

186
00:10:58.495 --> 00:11:01.370
Monday, when do you want it?

187
00:11:01.370 --> 00:11:02.955
And then, What time?

188
00:11:02.955 --> 00:11:06.570
3:00 p.m. And as you can see here, it asked for what city?

189
00:11:06.570 --> 00:11:08.525
Before we didn't do that but now that we added it,

190
00:11:08.525 --> 00:11:14.000
we just add San Diego and accepts that and it just asked, Are you ready?

191
00:11:14.000 --> 00:11:15.170
It didn't ask, as you can see,

192
00:11:15.170 --> 00:11:18.885
it doesn't include a city for a confirmation

193
00:11:18.885 --> 00:11:24.125
just because we didn't include it into the message.

194
00:11:24.125 --> 00:11:29.825
Without that, we added another slot that we needed.

195
00:11:29.825 --> 00:11:31.545
So, as you can see here,

196
00:11:31.545 --> 00:11:33.470
for the confirmation prompt,

197
00:11:33.470 --> 00:11:35.305
you can notice that, it says FlowerType.

198
00:11:35.305 --> 00:11:37.345
You can just enter in the brackets,

199
00:11:37.345 --> 00:11:39.880
in the name of the slot,

200
00:11:39.880 --> 00:11:43.315
which is like a variable and you put it in the phrase.

201
00:11:43.315 --> 00:11:46.180
So, you can like, "Okay, your FlowerType

202
00:11:46.180 --> 00:11:48.310
will be ready for pickup by PickupTime on PickupDate."

203
00:11:48.310 --> 00:11:54.720
And you'd be at our blank location or San Diego location.

204
00:11:54.720 --> 00:12:00.465
So that's how you can create a simple chatbot.

205
00:12:00.465 --> 00:12:04.605
In this, we used one of their pre-made ones like OrderFlowers.

206
00:12:04.605 --> 00:12:06.665
But you can completely just create your own.

207
00:12:06.665 --> 00:12:10.650
You got to create your own intent and then some thought types.

208
00:12:10.650 --> 00:12:12.560
That should be do that.

209
00:12:12.560 --> 00:12:17.660
Will be doing in more advance demo of a kind of chatbot like this,

210
00:12:17.660 --> 00:12:20.330
in the future so be on the look out for that,

211
00:12:20.330 --> 00:12:26.585
and make sure you read up on the documentation for Lex and the API.

212
00:12:26.585 --> 00:12:29.270
So if you run into any problems,

213
00:12:29.270 --> 00:12:31.400
you can better attack them.

214
00:12:31.400 --> 00:12:34.100
In the future, we'll be trying to

215
00:12:34.100 --> 00:12:36.577
build on this and creating a little bit more advanced chatbot and

216
00:12:36.577 --> 00:12:42.000
does little bit more stuff and stay tuned for that and enjoy your day..