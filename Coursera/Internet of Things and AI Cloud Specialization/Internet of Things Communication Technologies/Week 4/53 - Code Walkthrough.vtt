WEBVTT

1
00:00:00.820 --> 00:00:01.340
All right.

2
00:00:01.340 --> 00:00:04.760
So we're gonna go ahead and
walk through the VOIP code,

3
00:00:04.760 --> 00:00:07.790
the VOIP app code that we wrote up.

4
00:00:07.790 --> 00:00:09.250
And let's get started.

5
00:00:09.250 --> 00:00:12.850
This might be a little long, so sit tight.

6
00:00:12.850 --> 00:00:14.779
And let's go ahead and begin.

7
00:00:16.880 --> 00:00:21.930
All right, so right here, we just wrote
everything in one signal activity.

8
00:00:21.930 --> 00:00:22.690
The VOIP activity.

9
00:00:23.760 --> 00:00:29.080
It's not the best coding practice so maybe
someone can, or you guys can improve it by

10
00:00:30.200 --> 00:00:36.720
implementing some kind of design pattern,
something like that.

11
00:00:36.720 --> 00:00:38.890
Oh yeah, like I mentioned,
the app's pretty bare bones.

12
00:00:38.890 --> 00:00:43.860
So what we have here, and
you guys see it later on, is this key is

13
00:00:43.860 --> 00:00:49.320
sort of like an authorization password,
where since we have our username,

14
00:00:49.320 --> 00:00:51.860
domain and password all hard
coded into the program so

15
00:00:51.860 --> 00:00:56.720
it'll automatically log you in as that
user, every time you open or use the app.

16
00:00:56.720 --> 00:01:00.960
We have a level of security,
thinks that it's key right here, so

17
00:01:00.960 --> 00:01:06.600
it'll ask us what's
the authorization password and

18
00:01:06.600 --> 00:01:10.830
if you get the wrong password it won't
make any calls so you won't have any kind

19
00:01:10.830 --> 00:01:16.250
of people that will just be calling
others on your own account.

20
00:01:18.280 --> 00:01:19.610
Let's see, go down here.

21
00:01:19.610 --> 00:01:22.860
So onCreate is when
the app gets created so

22
00:01:22.860 --> 00:01:24.956
we have all these buttons,
things like that.

23
00:01:24.956 --> 00:01:30.230
You know, buttons, views.

24
00:01:30.230 --> 00:01:36.120
All right so Make is where the magic
happens basically and here's a make.

25
00:01:36.120 --> 00:01:44.780
This, the first thing we'll do is
check if your device has VOIP support.

26
00:01:44.780 --> 00:01:49.620
Since we're gonna be using the Dragon
board, this should have VOIP supported, so

27
00:01:49.620 --> 00:01:52.240
you don't need to worry about this,
but maybe you wanted

28
00:01:52.240 --> 00:01:56.860
to use this program onto a different, say
an Android phone or something like that.

29
00:01:56.860 --> 00:02:00.481
This'll make it so it'll check before
actually doing everything else and so

30
00:02:00.481 --> 00:02:04.070
your app won't do some kind
of like weird crashes.

31
00:02:06.010 --> 00:02:08.640
So right here we have a call
to the make the SipManager.

32
00:02:08.640 --> 00:02:10.830
We'll go ahead scroll down.

33
00:02:10.830 --> 00:02:12.000
It's pretty short.

34
00:02:13.090 --> 00:02:13.700
See where is it?

35
00:02:16.610 --> 00:02:18.180
Oh, right here.

36
00:02:18.180 --> 00:02:20.980
So makeSipManager just checks
if the current managers null or

37
00:02:20.980 --> 00:02:22.850
not and will create a new instance.

38
00:02:23.890 --> 00:02:27.240
Instantiate it in the current app context.

39
00:02:27.240 --> 00:02:31.110
And the next thing you do,
if you remember from above,

40
00:02:31.110 --> 00:02:34.390
is we go right into
making the zip profile.

41
00:02:34.390 --> 00:02:35.630
So it checks if there's a manager.

42
00:02:35.630 --> 00:02:38.440
And then after that will just
try to make the profile.

43
00:02:38.440 --> 00:02:43.700
So remember in the previous lesson, The
SipProfile.Builder will allow us to set

44
00:02:43.700 --> 00:02:47.320
our username domain as
well as the password.

45
00:02:48.390 --> 00:02:52.930
And it will create the account
after that we need to

46
00:02:54.240 --> 00:02:58.490
set up the intent to receive calls.

47
00:02:58.490 --> 00:03:03.160
Oh and do note,
if you guys don't quite totally understand

48
00:03:03.160 --> 00:03:07.940
the explanation here,
there is a VOIP application or

49
00:03:07.940 --> 00:03:13.030
Sip demo on the Android website.

50
00:03:13.030 --> 00:03:17.280
So just Google Sip demo Android,
and you should be able to find it.

51
00:03:17.280 --> 00:03:18.610
The code's a bit similar.

52
00:03:20.040 --> 00:03:21.320
All right, so continue on.

53
00:03:21.320 --> 00:03:28.040
We created the receiving intent, which
you'll see later why we'll need this.

54
00:03:28.040 --> 00:03:32.710
Because without this you'll
only be able to send calls,

55
00:03:32.710 --> 00:03:35.009
you won't be able to
actually take in any calls.

56
00:03:38.110 --> 00:03:42.410
So remember we only created Profile, we
haven't actually registered it online, so

57
00:03:42.410 --> 00:03:46.100
this where the manager will
create the registration listener.

58
00:03:46.100 --> 00:03:49.870
And go on line, make sure you're console,
fine and dandy.

59
00:03:49.870 --> 00:03:53.540
You have the,
it'll check if the user name, password and

60
00:03:53.540 --> 00:03:57.520
domain combo is good or not.

61
00:03:57.520 --> 00:04:01.470
Here we actually encounter
a bunch of problems and

62
00:04:01.470 --> 00:04:03.560
it was because of a spotty
internet connection.

63
00:04:03.560 --> 00:04:09.910
So make sure your internet connection is
pretty solid or this will tend to go into

64
00:04:09.910 --> 00:04:14.590
the onRegistrationFailed and the app will
tell you that the login was unsuccessful.

65
00:04:16.670 --> 00:04:20.180
All right, so after we finish making it,
your profile is all ready to go.

66
00:04:21.680 --> 00:04:23.996
Let's head on back up here.

67
00:04:26.957 --> 00:04:28.710
Yeah, so your profile is all ready to go.

68
00:04:30.240 --> 00:04:34.980
So what we did was in this onClick
method we created two buttons,

69
00:04:34.980 --> 00:04:40.800
like a regular phone, you have the make
call button and a end call button.

70
00:04:40.800 --> 00:04:46.230
So when you make a call it'll
first check if you have

71
00:04:46.230 --> 00:04:50.970
the correct authorization like I mentioned
before it checks if the key's correct.

72
00:04:50.970 --> 00:04:54.870
And it'll check for we'll have a space
where you'll actually just add in

73
00:04:54.870 --> 00:04:59.990
the username of the person
you want to call.

74
00:04:59.990 --> 00:05:04.730
RIght now we have it so, right here, so
it takes in this, takes in the user name.

75
00:05:04.730 --> 00:05:05.370
It'll create the,

76
00:05:05.370 --> 00:05:11.160
it will use the zip profile builder to
create a zip profile for you to call.

77
00:05:14.340 --> 00:05:18.889
Do note that right now
the SIpProfile.Builder

78
00:05:18.889 --> 00:05:23.710
will only use the same
domain as your account.

79
00:05:23.710 --> 00:05:28.190
Because everything is hardcoded so
everything will be on the Lync phone,

80
00:05:28.190 --> 00:05:30.980
the free Lync phone sip services.

81
00:05:30.980 --> 00:05:34.960
So, if you want to make your own make it,
you can change it, delete this,

82
00:05:34.960 --> 00:05:35.830
do this domain right here.

83
00:05:35.830 --> 00:05:37.110
Make sure when you type in.

84
00:05:37.110 --> 00:05:41.930
You have to type in the whole entire
profile address so it could work.

85
00:05:43.890 --> 00:05:47.670
Yeah, so then and after that you'll,
it'll just make the call.

86
00:05:47.670 --> 00:05:52.620
You should be able to hear, and
speak into your Dragon board.

87
00:05:52.620 --> 00:05:55.509
And on the other end,
you'll be able to hear your own voice,

88
00:05:55.509 --> 00:05:56.991
you can talk back to yourself.

89
00:05:56.991 --> 00:05:59.057
Cool things like that.

90
00:05:59.057 --> 00:06:00.973
And then finally the incoming call.

91
00:06:00.973 --> 00:06:05.595
So I mention earlier with
this intent right here,

92
00:06:05.595 --> 00:06:10.666
the pending intent to make
sure you can receive calls.

93
00:06:10.666 --> 00:06:15.792
We have this class down here
called the incoming call receiver.

94
00:06:15.792 --> 00:06:24.530
This is where it'll handle the intents
when someone calls your Sip account.

95
00:06:25.700 --> 00:06:29.470
So let's dive right into
the onRecieve method,

96
00:06:29.470 --> 00:06:31.550
where we'll set up
a listener to the calls.

97
00:06:34.740 --> 00:06:38.680
This class will use what I mentioned
before in the previous lesson,

98
00:06:38.680 --> 00:06:40.640
the manager to take in the audio call.

99
00:06:40.640 --> 00:06:47.600
And send the audio call back as
a sipaudio call for your main class.

100
00:06:47.600 --> 00:06:51.570
So see right here in
the incoming call method.

101
00:06:51.570 --> 00:06:53.300
So incoming call method
there's a couple checks.

102
00:06:53.300 --> 00:06:57.410
If you're already in a call
you shouldn't get this call.

103
00:06:57.410 --> 00:06:58.300
Maybe you don't want it like that.

104
00:06:58.300 --> 00:07:02.520
Maybe you'd want call notification to see
if maybe there's a more important call.

105
00:07:02.520 --> 00:07:03.670
Something like that.

106
00:07:03.670 --> 00:07:04.320
Feel free to change it.

107
00:07:04.320 --> 00:07:08.280
Remember this is pretty bare bones app and
then with that

108
00:07:09.280 --> 00:07:16.180
the app will notify you that you have
an incoming call and you can choose

109
00:07:16.180 --> 00:07:21.040
to accept or decline the call because
we also have something where here is.

110
00:07:21.040 --> 00:07:25.410
Where it'll tell you who's calling you.

111
00:07:25.410 --> 00:07:27.740
So maybe it's say, your mother in law.

112
00:07:27.740 --> 00:07:29.130
I mean like,
oh I don't wanna talk to my mother in law.

113
00:07:30.380 --> 00:07:33.700
So at least you'll know beforehand,
who's calling you.

114
00:07:35.140 --> 00:07:39.780
And with that,
that basically covers the entire sip app.

115
00:07:40.940 --> 00:07:46.160
You might not remember everything and
how everything interacts, but

116
00:07:46.160 --> 00:07:51.930
I'm pretty sure you'll be able to see it
in better detail when we actually demo it.

117
00:07:51.930 --> 00:07:53.160
And so we'll see you then.