WEBVTT

1
00:00:01.250 --> 00:00:03.749
Hey, everyone, this first section,
as we've mentioned before,

2
00:00:03.749 --> 00:00:05.850
we'll be talking about a software stack.

3
00:00:05.850 --> 00:00:09.840
The software stack is actually also
known as an application stack at times.

4
00:00:11.440 --> 00:00:14.942
Normally, it's applied for
web app developers,

5
00:00:14.942 --> 00:00:19.911
but honestly, we could probably adapt
it to anything else, a regular,

6
00:00:19.911 --> 00:00:23.920
your own at-home apps or
say some kind of other building.

7
00:00:23.920 --> 00:00:26.294
>> What about the application that we're
gonna build in this course, can we?

8
00:00:26.294 --> 00:00:28.279
>> Yeah, exactly, yeah we can.

9
00:00:28.279 --> 00:00:30.586
We can also apply this concept.

10
00:00:30.586 --> 00:00:35.318
So, the three major biggest parts
of the software stack would be

11
00:00:35.318 --> 00:00:37.600
starting with the frontend.

12
00:00:37.600 --> 00:00:42.550
So, frontend is the client side,
it's where a front end developer will be

13
00:00:42.550 --> 00:00:47.990
working on the UI or UX, which is user
interface, so how the GUI looks and

14
00:00:47.990 --> 00:00:52.430
how it works, how the user
interacts with software, basically.

15
00:00:52.430 --> 00:00:58.540
The goal of the UX is to try to make user
satisfaction as high as it's possible.

16
00:00:58.540 --> 00:01:03.477
Because why would you put a button
in one corner that doesn't work?

17
00:01:03.477 --> 00:01:05.160
What's the point of that button, right?

18
00:01:05.160 --> 00:01:06.055
It doesn't make any sense.

19
00:01:06.055 --> 00:01:09.340
>> [LAUGH] Yeah, I'd be pissed off.

20
00:01:09.340 --> 00:01:13.752
>> [CROSSTALK]
>> That's bad front end development.

21
00:01:13.752 --> 00:01:18.008
So, next, the opposite of that would
be the backend which is more, say,

22
00:01:18.008 --> 00:01:19.360
server sided.

23
00:01:19.360 --> 00:01:24.300
Or something that the client or the user
doesn't actually see, necessarily.

24
00:01:24.300 --> 00:01:27.720
That could be some kind of algorithm,
or some kind of data structure

25
00:01:27.720 --> 00:01:31.870
implementations that are required
to make everything work.

26
00:01:31.870 --> 00:01:35.240
It's like a calculator,
you'd see the buttons on the screen, but

27
00:01:35.240 --> 00:01:39.440
you don't see how it does the
multiplication in the background, right?

28
00:01:39.440 --> 00:01:41.070
>> Or the code it's using or
anything, yeah.

29
00:01:41.070 --> 00:01:48.540
>> Maybe like in the computer
of the calculator it just

30
00:01:48.540 --> 00:01:52.980
stores addition tables, so it does a look
up instead of actually adding the numbers.

31
00:01:52.980 --> 00:01:54.075
>> Oh yeah, you would have no idea.

32
00:01:54.075 --> 00:01:56.990
>> You'd have no idea,
that's what back end is.

33
00:01:56.990 --> 00:02:00.990
And there's full stack where you
basically work on both the front and

34
00:02:00.990 --> 00:02:02.499
the back end and it's.

35
00:02:05.140 --> 00:02:08.810
The full stack developer will basically
see like how everything connects.

36
00:02:08.810 --> 00:02:11.770
They'll be the guy that
bridges everything.

37
00:02:11.770 --> 00:02:15.790
But to be fair, all of these three scopes,

38
00:02:15.790 --> 00:02:19.030
you'll need to know both what
the back end and the front end do.

39
00:02:19.030 --> 00:02:23.550
But when you tend to be a front developer,
you mostly focus on the front end.

40
00:02:23.550 --> 00:02:26.460
>> So, I guess unless you're working on
a team throughout these last courses,

41
00:02:26.460 --> 00:02:28.520
you've kind of been front and back end.

42
00:02:28.520 --> 00:02:29.730
>> So you've been the full stack, right?

43
00:02:29.730 --> 00:02:31.190
>> You've been the full stack developer,
yeah.

44
00:02:31.190 --> 00:02:32.610
>> Yeah, up on the screen,

45
00:02:32.610 --> 00:02:37.160
we have a little diagram of
a complete software stack, basically.

46
00:02:37.160 --> 00:02:42.100
But for our purposes, we're mostly
focused on, say, the GUI, the UI, and

47
00:02:42.100 --> 00:02:47.030
some of the algorithms that are needed to
make your code work, or your programs run.

48
00:02:48.620 --> 00:02:49.750
>> Awesome.
>> Yeah, that's it.

49
00:02:49.750 --> 00:02:52.640
And also, I'll go over one quick example.

50
00:02:53.910 --> 00:02:56.009
So, say you wanna build a Boggle game,
right?

51
00:02:56.009 --> 00:02:57.937
>> We gotta explain what Boggle is first,
right,

52
00:02:57.937 --> 00:02:59.687
cuz maybe people don't know what Boggle.

53
00:02:59.687 --> 00:03:00.744
>> I feel like everyone
should know what Boggle is.

54
00:03:00.744 --> 00:03:02.079
>> [LAUGH]
>> But, so

55
00:03:02.079 --> 00:03:04.841
anyway, if you don't know what Boggle is,

56
00:03:04.841 --> 00:03:09.769
it's basically you have a little board
with some randomized letters on top and

57
00:03:09.769 --> 00:03:14.565
the goal is to try to make as many words
as you can using the letters possible.

58
00:03:14.565 --> 00:03:16.060
By making a path.

59
00:03:16.060 --> 00:03:20.440
So, you start at one corner and go around,
make sure it's a possible word.

60
00:03:20.440 --> 00:03:21.920
So, like Scrabble in another way.

61
00:03:21.920 --> 00:03:22.440
In some way.

62
00:03:23.830 --> 00:03:26.810
So front end developer would
work on how the board looks,

63
00:03:26.810 --> 00:03:32.510
what you can click on,
how the lines look, everything to that,

64
00:03:32.510 --> 00:03:36.690
and sometimes maybe you need to make a
login screen with a point system, whatnot.

65
00:03:36.690 --> 00:03:40.121
Well, the back end would say hold how the
dictionary's stored because you wanna be

66
00:03:40.121 --> 00:03:42.781
able to look up words really fast
to make sure it's a legal word.

67
00:03:42.781 --> 00:03:46.137
And not some like weird
word like Z-Z-X-Y-D-

68
00:03:46.137 --> 00:03:47.577
>> Maybe it could pull from like an online

69
00:03:47.577 --> 00:03:48.344
dictionary, too.

70
00:03:48.344 --> 00:03:49.376
>> Yeah, exactly, do that.

71
00:03:49.376 --> 00:03:51.477
>> So, it's possible that, and
the user wouldn't know, right?

72
00:03:51.477 --> 00:03:52.754
>> Yeah.
>> That's why it's back end.

73
00:03:52.754 --> 00:03:55.837
>> Yeah, if you have a username then you
probably just have to have some way to

74
00:03:55.837 --> 00:03:58.542
store passwords with some kind
of security, so it's back end.

75
00:03:58.542 --> 00:04:02.522
If you have important stuff you wanna keep
track of who's winning, who's losing, etc.

76
00:04:02.522 --> 00:04:07.076
And finally, like we said before, full
stack just takes a look at all these and

77
00:04:07.076 --> 00:04:09.385
they work on all points of the project.

78
00:04:09.385 --> 00:04:11.600
>> Cool, I like that example, nice.

79
00:04:11.600 --> 00:04:14.350
>> With that, that covers basically
everything you need to know about

80
00:04:14.350 --> 00:04:16.055
the software stack.

81
00:04:16.055 --> 00:04:19.545
>> I think we might talk about it
a little bit more obviously as we

82
00:04:19.545 --> 00:04:20.675
kinda go through this course.

83
00:04:20.675 --> 00:04:21.184
But yeah.
>> So

84
00:04:21.184 --> 00:04:23.995
basically it just applies all
your application development.

85
00:04:23.995 --> 00:04:26.198
So, with that,
we'll see you in the next video.