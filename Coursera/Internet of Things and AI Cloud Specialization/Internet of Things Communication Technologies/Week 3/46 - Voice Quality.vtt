WEBVTT

1
00:00:00.880 --> 00:00:06.370
You will see that with so
many cortex, the open source cortex,

2
00:00:06.370 --> 00:00:10.050
IT cortex, Cal-based cortex,
there are many proprietary cortex.

3
00:00:11.050 --> 00:00:18.410
Assisting the cortex voice quality becomes
almost an art and a science by itself.

4
00:00:19.630 --> 00:00:23.390
We can use traditional metrics like SNR.

5
00:00:23.390 --> 00:00:29.300
Signal to Noise Ratio and
segmentive SNR [COUGH] as shown here.

6
00:00:29.300 --> 00:00:33.503
SNR essentially is
the ratio of signal power.

7
00:00:33.503 --> 00:00:38.420
X squared xn squared or certain window and

8
00:00:38.420 --> 00:00:42.810
the arrow that the anchor that is xn,
minus x,

9
00:00:42.810 --> 00:00:48.470
reconstructed end or,
the complete signal, not just on faith.

10
00:00:48.470 --> 00:00:53.020
The segmental lesson r does the same
thing, but breaks the signal into

11
00:00:53.020 --> 00:00:57.550
key segments, and
finds the average over the k segments but,

12
00:00:57.550 --> 00:01:03.130
the problem is that these tools,
these metrics work very well for

13
00:01:03.130 --> 00:01:09.580
wave form cortex but not at all for
parametric and perceptual cortex.

14
00:01:09.580 --> 00:01:17.180
The speech production model is not
well captured in the SNR metric.

15
00:01:17.180 --> 00:01:20.240
So it may tell you that
the SNR is poor but

16
00:01:20.240 --> 00:01:24.700
the signal reconstructor quality
might be very good or vice versa.

17
00:01:26.130 --> 00:01:30.310
Well it might not be vice
versa of course only one bit.

18
00:01:30.310 --> 00:01:36.760
So most codec assessments are done
by subjective experiments.

19
00:01:38.240 --> 00:01:40.840
As odd as it sounds, this is how it falls.

20
00:01:40.840 --> 00:01:44.815
You get a group of people,
put them together, and

21
00:01:44.815 --> 00:01:50.280
[COUGH] ask them to listen
to decoded signals and

22
00:01:50.280 --> 00:01:56.660
you also put some reference signals for
which you already know the quality

23
00:01:56.660 --> 00:02:01.930
and they're asked to assign
a value between one to five.

24
00:02:01.930 --> 00:02:04.010
That's the MOS scale.

25
00:02:04.010 --> 00:02:06.060
So five is excellent.

26
00:02:06.060 --> 00:02:10.187
One is really bad and
the other five in between.

27
00:02:11.810 --> 00:02:15.380
There are some caveats with
prospect to reading the MOS scores.

28
00:02:15.380 --> 00:02:20.880
You cannot really compare MOS
scores from one study to another.

29
00:02:20.880 --> 00:02:27.260
There are way too many variables with
the lapse in voice with the subjects.

30
00:02:27.260 --> 00:02:33.920
The reference signals that you have used,
but still by looking at the MOS values

31
00:02:33.920 --> 00:02:39.560
you do get some insight on
to the quality of the codec.

32
00:02:41.400 --> 00:02:49.410
So, these are the codecs
from one study by Cisco.

33
00:02:49.410 --> 00:02:52.886
In this G.711 is 4.1.

34
00:02:52.886 --> 00:02:56.952
So thatâ€™s the tone quality.

35
00:02:56.952 --> 00:03:04.870
The 726 ADPCM uses more bits than AMR,
but it has lower quality.

36
00:03:04.870 --> 00:03:09.020
It's also lower latency,
and lower complexity.

37
00:03:10.280 --> 00:03:15.665
You can see that AMR, and
GSM full rate use the same number of bits,

38
00:03:15.665 --> 00:03:17.980
4.2 killobits per second, but

39
00:03:17.980 --> 00:03:24.250
the AMR is a lot more complex and
it has much better quality.

40
00:03:24.250 --> 00:03:30.690
So within one study you can go ahead and
make such assessments.

41
00:03:32.430 --> 00:03:39.480
So the standards bodies go through
considerable effort in picking algorithms

42
00:03:39.480 --> 00:03:45.890
for their next question of Kodak and
they do extensive characterization.

43
00:03:46.950 --> 00:03:51.210
These are th results from AMR
wide band characterization.

44
00:03:51.210 --> 00:03:58.500
The first three bars that you see
are the G.7XS series wide band cortex and

45
00:03:58.500 --> 00:04:04.180
the remaining bars are band
at increasing rates.

46
00:04:04.180 --> 00:04:09.859
So you can see the quality
go up consistently and,

47
00:04:14.554 --> 00:04:20.870
codecs operate at multiple,
constant bitrates.

48
00:04:20.870 --> 00:04:25.820
Whereas the codex for CDMA and

49
00:04:25.820 --> 00:04:31.090
3GPP2, they are all
variable bitrate codex.

50
00:04:31.090 --> 00:04:34.990
The DEVRC and Q-CELP the older version.

51
00:04:34.990 --> 00:04:39.400
They changes the number of bits used for
each frame,

52
00:04:39.400 --> 00:04:44.050
based on the speech
characteristics themselves.

53
00:04:44.050 --> 00:04:49.220
So the rate is driven by
the source characteristics.

54
00:04:49.220 --> 00:04:54.150
So this results in full rate,
half rate, quarter rate, and

55
00:04:54.150 --> 00:05:00.900
eighth rate packets and
this is shown conceptually in this picture

56
00:05:00.900 --> 00:05:06.170
and you can actually control
the ascent of the number of,

57
00:05:06.170 --> 00:05:12.880
the probability of each weird packet,
and hence control the average data rate.

58
00:05:14.140 --> 00:05:19.420
When a user drops their average data rate,

59
00:05:19.420 --> 00:05:24.400
they offer that much less
interference to the other users

60
00:05:24.400 --> 00:05:28.970
in the system and hence,
the capacity increases in CDMA.

61
00:05:28.970 --> 00:05:33.450
So the average data rate drop immediately

62
00:05:33.450 --> 00:05:37.290
results in system capacity
increases in CDMA.

63
00:05:38.790 --> 00:05:46.340
So here are the results of one of the
categorization tests I found on the web.

64
00:05:46.340 --> 00:05:50.810
The EVRC-B is a replacement for
EVRC and so

65
00:05:50.810 --> 00:05:58.250
that is used as the anchor code and
as you can see it performs the EVRC-B,

66
00:05:58.250 --> 00:06:03.240
performs as well as the old
one it's replacing and

67
00:06:03.240 --> 00:06:08.138
also it provides three
different data rates at

68
00:06:08.138 --> 00:06:14.050
which this particular test was connected.

69
00:06:16.340 --> 00:06:24.140
So the mass tests are really a burden,
they take a long time

70
00:06:25.770 --> 00:06:30.500
and so there are some objective
metrics that have been doubled up and

71
00:06:30.500 --> 00:06:35.750
standardized to mimic
the mass testing done for

72
00:06:35.750 --> 00:06:39.540
the LPC and Kelp class of codecs.

73
00:06:40.880 --> 00:06:48.210
The ITU standards for
these metrics are PESQ and POLQA.

74
00:06:48.210 --> 00:06:52.310
That's the Perceptual Evaluation
of Speech Quality and

75
00:06:52.310 --> 00:06:57.340
Perceptual Objective
Listening Quality Assessment.

76
00:06:57.340 --> 00:06:59.510
So I just put up this broad diagram here.

77
00:06:59.510 --> 00:07:04.825
I'm not gonna go through it but
essentially it tries to incorporate

78
00:07:04.825 --> 00:07:10.614
the perceptual information

79
00:07:10.614 --> 00:07:15.230
into the metric itself
instead of a blind signal to

80
00:07:15.230 --> 00:07:20.210
noise ratio measurement.

81
00:07:20.210 --> 00:07:23.390
These tools are very good for

82
00:07:23.390 --> 00:07:28.850
trying out various algorithms
during a codec development,

83
00:07:28.850 --> 00:07:33.880
that is to look at incremental
gains within the same system but

84
00:07:33.880 --> 00:07:40.850
they are not good at comparing
across different approaches.

85
00:07:40.850 --> 00:07:46.440
So the case in point, the task was found

86
00:07:46.440 --> 00:07:53.059
to underpredict the quality of EVRC
consistently at all bitrates and

87
00:07:53.059 --> 00:08:01.200
consistently over-predicted the quality
of AMR 12.2 but in a MOS test,

88
00:08:01.200 --> 00:08:08.705
this was not actually the case.

89
00:08:08.705 --> 00:08:14.510
So since this is a very competitive
business, the network operators and

90
00:08:14.510 --> 00:08:18.910
the device renders are all in
competition for subscribers.

91
00:08:18.910 --> 00:08:21.460
So this was not a good thing.

92
00:08:21.460 --> 00:08:25.970
So if you have a brand new
approach that asks all of

93
00:08:25.970 --> 00:08:31.160
this objective tool that you're
trying to use, had never seen before,

94
00:08:31.160 --> 00:08:37.810
you would not want to use that
particular tool during your development.

95
00:08:37.810 --> 00:08:42.253
That's really my take away message for

96
00:08:42.253 --> 00:08:49.935
using objective metrics than in
developing new codec algorithms.