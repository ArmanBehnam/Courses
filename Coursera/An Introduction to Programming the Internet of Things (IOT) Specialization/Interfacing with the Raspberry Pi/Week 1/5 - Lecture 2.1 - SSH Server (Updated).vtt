WEBVTT

1
00:00:00.020 --> 00:00:03.150
We're going to talk
about how to access

2
00:00:03.150 --> 00:00:06.435
your Raspberry Pi remotely
using Secure Shell.

3
00:00:06.435 --> 00:00:09.735
So, the idea here is
let's say you got

4
00:00:09.735 --> 00:00:13.170
a Raspberry Pi and you
want to use it headless.

5
00:00:13.170 --> 00:00:14.445
Okay. Users called it headless.

6
00:00:14.445 --> 00:00:16.050
So, I don't want to connect

7
00:00:16.050 --> 00:00:18.915
my keyboard to it and screen
to it and mouse to it.

8
00:00:18.915 --> 00:00:22.130
I want to have it sitting there
connected to the network,

9
00:00:22.130 --> 00:00:24.040
by Wi-Fi let's say,

10
00:00:24.040 --> 00:00:25.890
and then I'm remote on

11
00:00:25.890 --> 00:00:28.020
another computer and I
just want to connect

12
00:00:28.020 --> 00:00:29.790
to it to my Raspberry Pi and use

13
00:00:29.790 --> 00:00:31.769
my Raspberry Pi from
my other computer,

14
00:00:31.769 --> 00:00:32.955
which is how I use it a lot.

15
00:00:32.955 --> 00:00:34.740
Right? Now to do that,

16
00:00:34.740 --> 00:00:36.570
you need a shell or remote shell.

17
00:00:36.570 --> 00:00:38.940
Okay. You need a
a terminal window

18
00:00:38.940 --> 00:00:40.785
basically that opens up on your,

19
00:00:40.785 --> 00:00:42.195
let's say I'm using my laptop,

20
00:00:42.195 --> 00:00:43.670
opens up my laptop.

21
00:00:43.670 --> 00:00:45.740
But when I type into
that terminal window,

22
00:00:45.740 --> 00:00:48.020
it sends all that straight
to the Raspberry Pi,

23
00:00:48.020 --> 00:00:49.820
and then when the Raspberry
Pi prints something to

24
00:00:49.820 --> 00:00:51.875
the screen it sends it all
to my terminal window.

25
00:00:51.875 --> 00:00:53.180
Right? So, I'm using

26
00:00:53.180 --> 00:00:55.835
the Raspberry Pi but I'm
using it from my laptop.

27
00:00:55.835 --> 00:00:57.355
So, I'm using it remotely.

28
00:00:57.355 --> 00:00:58.790
So, in order to do that,

29
00:00:58.790 --> 00:01:00.500
you have to make a connection to

30
00:01:00.500 --> 00:01:01.820
the Raspberry Pi
and we're going to

31
00:01:01.820 --> 00:01:03.605
use Secure Shell to do this.

32
00:01:03.605 --> 00:01:05.810
So, now Secure Shell
is a good tool,

33
00:01:05.810 --> 00:01:08.495
is the way you do
this by standard,

34
00:01:08.495 --> 00:01:11.555
a common way to do this, a
good safe way to do this.

35
00:01:11.555 --> 00:01:13.400
Secure Shell is secure

36
00:01:13.400 --> 00:01:15.545
because the communication
is encrypted.

37
00:01:15.545 --> 00:01:17.630
In order to make this work,

38
00:01:17.630 --> 00:01:19.490
you have to have on
your [inaudible]

39
00:01:19.490 --> 00:01:22.120
connect my laptop
to my Raspberry Pi.

40
00:01:22.120 --> 00:01:24.275
On my laptop I have to have

41
00:01:24.275 --> 00:01:28.190
a Secure Shell client,
SSH client running.

42
00:01:28.190 --> 00:01:29.840
On my Raspberry Pi,

43
00:01:29.840 --> 00:01:32.875
I have to have a Secure
Shell server running.

44
00:01:32.875 --> 00:01:34.940
Now, the Secure Shell server

45
00:01:34.940 --> 00:01:36.740
on Raspberry Pi is
not activated by

46
00:01:36.740 --> 00:01:41.225
default and its name as
the process name is called SSHD,

47
00:01:41.225 --> 00:01:43.595
Secure Shell D for daemon.

48
00:01:43.595 --> 00:01:47.569
Daemon is a generic term
on Unix Linux machines

49
00:01:47.569 --> 00:01:49.550
that is just a process that is

50
00:01:49.550 --> 00:01:51.020
forever running in the background

51
00:01:51.020 --> 00:01:52.220
waiting for something to happen.

52
00:01:52.220 --> 00:01:53.900
Okay. That's a daemon.

53
00:01:53.900 --> 00:01:55.550
What you want to have happen

54
00:01:55.550 --> 00:01:57.140
is you want to set up
your Raspberry Pi.

55
00:01:57.140 --> 00:01:58.160
So, when you boot it up,

56
00:01:58.160 --> 00:01:59.960
when you turn it on, one

57
00:01:59.960 --> 00:02:01.980
of the things that
automatically happens at boot,

58
00:02:01.980 --> 00:02:03.295
just after boot anyway,

59
00:02:03.295 --> 00:02:06.335
is that it starts
this SSHD process

60
00:02:06.335 --> 00:02:09.530
and it says SSHD process
just sits there.

61
00:02:09.530 --> 00:02:11.630
Its job is to sit
there and wait until

62
00:02:11.630 --> 00:02:13.820
some Secure Shell client tries

63
00:02:13.820 --> 00:02:17.020
to send a message to say
look I want to communicate.

64
00:02:17.020 --> 00:02:19.820
Then when it does then it
allows communication then the

65
00:02:19.820 --> 00:02:22.670
client on your laptop say,

66
00:02:22.670 --> 00:02:25.055
communicates with the SSHD server

67
00:02:25.055 --> 00:02:27.765
running on your Raspberry
Pi and they talk.

68
00:02:27.765 --> 00:02:29.860
So, that's what SSHD is.

69
00:02:29.860 --> 00:02:34.055
So, we need to get SSHD
running on the Raspberry Pi.

70
00:02:34.055 --> 00:02:35.740
It is not by default.

71
00:02:35.740 --> 00:02:38.050
So, how do you do that?

72
00:02:38.050 --> 00:02:39.665
So, we need to enable it.

73
00:02:39.665 --> 00:02:41.615
So, here's how you enable it.

74
00:02:41.615 --> 00:02:44.060
You launch Raspberry
Pi configuration.

75
00:02:44.060 --> 00:02:46.475
So, just boot up
your Raspberry Pi.

76
00:02:46.475 --> 00:02:49.970
Go to the top
bar way in the left,

77
00:02:49.970 --> 00:02:51.560
pull down, you select

78
00:02:51.560 --> 00:02:54.664
Raspberry Pi Configuration,
actually under Preferences,

79
00:02:54.664 --> 00:02:57.215
you select Raspberry
Pi Configuration,

80
00:02:57.215 --> 00:03:01.170
navigate to the Interfaces tab

81
00:03:01.460 --> 00:03:06.120
and then just select
Enabled next to the SSH.

82
00:03:06.120 --> 00:03:08.300
So, you'll see several rows of

83
00:03:08.300 --> 00:03:10.640
several different things
that can be started at

84
00:03:10.640 --> 00:03:13.460
boot time and one of them
is going to be SSH and

85
00:03:13.460 --> 00:03:16.280
it'll have a radio
button for Enabled,

86
00:03:16.280 --> 00:03:17.405
another one for Disabled.

87
00:03:17.405 --> 00:03:19.505
Disabled will probably
be selected by default.

88
00:03:19.505 --> 00:03:21.065
So, you go ahead
and select Enabled

89
00:03:21.065 --> 00:03:23.360
and then click okay
and that's it.

90
00:03:23.360 --> 00:03:25.690
Then the next time you boot,

91
00:03:25.690 --> 00:03:29.000
SSHD will just be running
automatically and you will be

92
00:03:29.000 --> 00:03:32.435
able to connect to
your Raspberry Pi remotely.

93
00:03:32.435 --> 00:03:37.005
Now, one thing about this is,

94
00:03:37.005 --> 00:03:39.210
once you do this,

95
00:03:39.210 --> 00:03:42.920
you're allowing remote network
connections from anybody.

96
00:03:42.920 --> 00:03:44.375
So, you're in some ways

97
00:03:44.375 --> 00:03:46.535
opening up your Raspberry
Pi to attack.

98
00:03:46.535 --> 00:03:49.100
Okay? So, please change

99
00:03:49.100 --> 00:03:51.590
that password in that Raspberry
Pi before you do this.

100
00:03:51.590 --> 00:03:54.600
Okay? You know the default
password, change it.

101
00:03:54.600 --> 00:03:55.955
Change it before you do this.

102
00:03:55.955 --> 00:03:58.040
It is just really stupid

103
00:03:58.040 --> 00:04:00.020
to have it the same
default password that

104
00:04:00.020 --> 00:04:03.980
everybody in the world knows
when you do such a thing.

105
00:04:03.980 --> 00:04:05.800
So, make sure you
change that first.

106
00:04:05.800 --> 00:04:07.880
Okay. So, let's assume
you've done that.

107
00:04:07.880 --> 00:04:11.100
You've got Secure Shell D
activated on your Raspberry Pi,

108
00:04:11.100 --> 00:04:12.350
so SSHD is running.

109
00:04:12.350 --> 00:04:14.240
Now, you want to connect

110
00:04:14.240 --> 00:04:16.795
to your Raspberry Pi
from your laptop say.

111
00:04:16.795 --> 00:04:18.560
Now, what you're going to need to

112
00:04:18.560 --> 00:04:20.010
do is you're going to
start on your laptop.

113
00:04:20.010 --> 00:04:21.920
You're going to start
a Secure Shell client

114
00:04:21.920 --> 00:04:23.690
and we'll talk about
that in a second there.

115
00:04:23.690 --> 00:04:25.160
But if you're doing it in Linux,

116
00:04:25.160 --> 00:04:26.765
it's easy, just type SSH.

117
00:04:26.765 --> 00:04:28.490
So, say you've got Linux
running on your laptop,

118
00:04:28.490 --> 00:04:29.860
we'll assume that for now.

119
00:04:29.860 --> 00:04:31.680
Then you type SSH that starts to

120
00:04:31.680 --> 00:04:33.885
Secure Shell client,
it's built in.

121
00:04:33.885 --> 00:04:37.700
But the argument to
SSH that you have to

122
00:04:37.700 --> 00:04:41.480
provide is the IP address
of the target machine,

123
00:04:41.480 --> 00:04:43.220
of the machine you
want to connect to.

124
00:04:43.220 --> 00:04:44.810
Now, the target machine
in this case

125
00:04:44.810 --> 00:04:46.040
is going to be a Raspberry Pi.

126
00:04:46.040 --> 00:04:47.765
So, you have to know

127
00:04:47.765 --> 00:04:49.850
the IP address of
your Raspberry Pi in order

128
00:04:49.850 --> 00:04:51.005
to make this connection.

129
00:04:51.005 --> 00:04:54.359
Okay. So now, normally,

130
00:04:54.359 --> 00:04:55.965
when I say normally,

131
00:04:55.965 --> 00:04:57.320
when I say I'm doing

132
00:04:57.320 --> 00:04:59.905
Secure Shell to
my machine at school,

133
00:04:59.905 --> 00:05:02.970
I know the domain name
for my machine at school.

134
00:05:02.970 --> 00:05:07.060
It has a domain name,
say ics.uci.edu.

135
00:05:07.060 --> 00:05:09.080
That's a domain name.
Right? So, I could

136
00:05:09.080 --> 00:05:12.940
type secure SSH ics.uci.edu.

137
00:05:12.940 --> 00:05:16.250
That domain name gets
converted into an IP address.

138
00:05:16.250 --> 00:05:18.965
So, using Domain Name
Service, DNS request,

139
00:05:18.965 --> 00:05:23.000
and I don't have to know
the actual numerical IP address.

140
00:05:23.000 --> 00:05:24.770
I just need to know
the domain name.

141
00:05:24.770 --> 00:05:27.650
Now this works if your machine
has a domain name.

142
00:05:27.650 --> 00:05:29.060
Raspberry Pi. Your Raspberry Pi

143
00:05:29.060 --> 00:05:30.815
will not have a domain name.

144
00:05:30.815 --> 00:05:32.840
Unless you paid money to

145
00:05:32.840 --> 00:05:34.775
your ISP to get

146
00:05:34.775 --> 00:05:37.490
a domain name for your Raspberry
Pi which is possible,

147
00:05:37.490 --> 00:05:38.900
you will not have a domain name.

148
00:05:38.900 --> 00:05:40.790
Normally what happens
is when you connect

149
00:05:40.790 --> 00:05:41.990
a Raspberry Pi or a laptop or

150
00:05:41.990 --> 00:05:43.685
something to an open network,

151
00:05:43.685 --> 00:05:45.800
open Wi-Fi network, is

152
00:05:45.800 --> 00:05:48.320
that they get their IP
address dynamically.

153
00:05:48.320 --> 00:05:51.380
Okay? So, there's
a protocol called DHCP

154
00:05:51.380 --> 00:05:55.520
which is enabled by default
on most Wi-Fi networks,

155
00:05:55.520 --> 00:05:58.310
and when you start up
your laptop let's say,

156
00:05:58.310 --> 00:05:59.570
and you connect to the Internet,

157
00:05:59.570 --> 00:06:01.850
it gets an IP address using DHCP.

158
00:06:01.850 --> 00:06:03.140
But this IP address can be

159
00:06:03.140 --> 00:06:05.020
different every time you connect.

160
00:06:05.020 --> 00:06:07.100
Okay? It doesn't have
a stable static.

161
00:06:07.100 --> 00:06:08.765
It doesn't have
a static IP address.

162
00:06:08.765 --> 00:06:10.550
Now the machine on my desk,

163
00:06:10.550 --> 00:06:12.980
let's say, I need to be able
to log into it remotely.

164
00:06:12.980 --> 00:06:15.140
It needs to have one IP
address all the time.

165
00:06:15.140 --> 00:06:17.930
So, I have a static IP
address on that machine.

166
00:06:17.930 --> 00:06:19.280
If you want a static
IP address for

167
00:06:19.280 --> 00:06:21.060
a home machine, you
have to pay for it,

168
00:06:21.060 --> 00:06:23.270
like my cable company
charged me money for

169
00:06:23.270 --> 00:06:26.430
additional static IP addresses.
So, I don't do that.

170
00:06:26.430 --> 00:06:28.700
So, I'm assuming that
for your Raspberry Pi,

171
00:06:28.700 --> 00:06:30.440
you will not have
a static IP address.

172
00:06:30.440 --> 00:06:32.165
If you have a static IP address,

173
00:06:32.165 --> 00:06:33.485
then you have a domain name,

174
00:06:33.485 --> 00:06:34.805
a fixed domain name that can

175
00:06:34.805 --> 00:06:36.305
always map to your Raspberry Pi.

176
00:06:36.305 --> 00:06:39.190
But I'm assuming that you
don't. Almost nobody does.

177
00:06:39.190 --> 00:06:42.345
So, what happens is

178
00:06:42.345 --> 00:06:43.685
your Raspberry Pi can get

179
00:06:43.685 --> 00:06:45.335
a different IP address

180
00:06:45.335 --> 00:06:47.060
every time it connects
to its network.

181
00:06:47.060 --> 00:06:48.380
So, before you can

182
00:06:48.380 --> 00:06:50.330
make a connection like
what we're talking about,

183
00:06:50.330 --> 00:06:52.760
you have to know what
that IP address is.

184
00:06:52.760 --> 00:06:55.025
So, how are you going to know it?

185
00:06:55.025 --> 00:06:56.970
So, here's how you
going to know it.

186
00:06:56.970 --> 00:06:59.760
What you're going to do
is before you do this,

187
00:06:59.760 --> 00:07:01.190
you're going to have to boot up

188
00:07:01.190 --> 00:07:02.750
your Raspberry Pi and

189
00:07:02.750 --> 00:07:04.220
connect a keyboard
and screen and all

190
00:07:04.220 --> 00:07:06.200
that to it and we're
going to issue

191
00:07:06.200 --> 00:07:09.115
a command so that we can
see what its IP address is.

192
00:07:09.115 --> 00:07:11.285
Then this is sort of
the cheating way to do it.

193
00:07:11.285 --> 00:07:12.950
We're going to see it using

194
00:07:12.950 --> 00:07:14.150
the command that I'm
going to describe.

195
00:07:14.150 --> 00:07:16.865
Then, once you see
that IP address,

196
00:07:16.865 --> 00:07:18.560
then you can go to
your laptop and do

197
00:07:18.560 --> 00:07:20.995
SSH and give that IP address
and you can connect.

198
00:07:20.995 --> 00:07:23.075
So, let's see how we do this.

199
00:07:23.075 --> 00:07:26.935
In order to do this, you use
a command called ifconfig.

200
00:07:26.935 --> 00:07:28.420
Okay. So, what we're going to

201
00:07:28.420 --> 00:07:30.605
do is log into your Raspberry Pi,

202
00:07:30.605 --> 00:07:32.870
type ifconfig, and
it's going to give

203
00:07:32.870 --> 00:07:34.190
us the information that we want

204
00:07:34.190 --> 00:07:35.270
and I'll show you how to find it.

205
00:07:35.270 --> 00:07:36.785
It's going to be
a lot of information,

206
00:07:36.785 --> 00:07:38.600
but in there is going
to be your IP address

207
00:07:38.600 --> 00:07:39.985
and let me show you
how to get that.

208
00:07:39.985 --> 00:07:42.440
So, I did ifconfig

209
00:07:42.440 --> 00:07:44.780
on my Raspberry Pi and
it looks like this.

210
00:07:44.780 --> 00:07:46.970
Now, notice basically
there's three,

211
00:07:46.970 --> 00:07:49.340
in this case, there are
three paragraphs of information.

212
00:07:49.340 --> 00:07:52.160
Okay? When I say
three paragraphs, three groups.

213
00:07:52.160 --> 00:07:56.060
First, you can see on
the left column, right?

214
00:07:56.060 --> 00:07:59.720
Eth0 then lo, then wlan0.

215
00:07:59.720 --> 00:08:02.220
So, eth0, the first paragraph,

216
00:08:02.220 --> 00:08:03.390
that's my ethernet connection,

217
00:08:03.390 --> 00:08:04.875
my wired ethernet jack.

218
00:08:04.875 --> 00:08:07.950
Okay? That is not
connected in this case.

219
00:08:07.950 --> 00:08:09.995
So, I don't have an IP
address for that one.

220
00:08:09.995 --> 00:08:12.905
Lo, the next block is
a local loop back.

221
00:08:12.905 --> 00:08:16.010
Okay? That's just for
testing purposes.

222
00:08:16.010 --> 00:08:17.465
Okay? So, we're not
using that either.

223
00:08:17.465 --> 00:08:20.555
The bottom one, wlan
is wireless LAN.

224
00:08:20.555 --> 00:08:21.680
That's what we're interested in.

225
00:08:21.680 --> 00:08:24.610
Okay? Now, I blocked out
some information in red,

226
00:08:24.610 --> 00:08:26.270
my hardware address that
I don't want you to

227
00:08:26.270 --> 00:08:28.160
necessarily see from
my particular machine.

228
00:08:28.160 --> 00:08:30.570
Actually, at this point I
don't care because I haven't

229
00:08:30.570 --> 00:08:33.155
been using that Raspberry Pi
but I blocked there anyway.

230
00:08:33.155 --> 00:08:35.540
But the key thing
that you want to

231
00:08:35.540 --> 00:08:38.735
see if you look at wlan0
down there at the bottom,

232
00:08:38.735 --> 00:08:41.170
see in red I've boxed,

233
00:08:41.170 --> 00:08:42.810
it see it says inet addr

234
00:08:42.810 --> 00:08:45.400
and then there's
a number that I boxed,

235
00:08:45.400 --> 00:08:47.045
that's the Internet address.

236
00:08:47.045 --> 00:08:49.400
That's the wireless
LANs internet address.

237
00:08:49.400 --> 00:08:52.130
So, that address, I
could record that.

238
00:08:52.130 --> 00:08:53.930
Right now I know that.
So, that's where

239
00:08:53.930 --> 00:08:56.095
I'm going to connect to
when I do Secure Shell.

240
00:08:56.095 --> 00:08:57.960
So now, let's say now I

241
00:08:57.960 --> 00:08:59.655
know that number,
that IP address.

242
00:08:59.655 --> 00:09:01.250
So, now say I want to access

243
00:09:01.250 --> 00:09:03.920
the Raspberry Pi with
Secure Shell from a laptop

244
00:09:03.920 --> 00:09:05.840
and let's imagine
the laptop is using

245
00:09:05.840 --> 00:09:09.065
Linux so that it has
Secure Shell built-in.

246
00:09:09.065 --> 00:09:11.100
Linux or Mac OS.

247
00:09:11.100 --> 00:09:14.325
Mac OSX, it's base is,

248
00:09:14.325 --> 00:09:17.120
it has parts, it's
based on Linux.

249
00:09:17.120 --> 00:09:18.770
Okay? I know there's,

250
00:09:18.770 --> 00:09:21.920
I'll get a flame more of that
but it's based on Linux.

251
00:09:21.920 --> 00:09:24.340
So, it also has Secure
Shell built-in.

252
00:09:24.340 --> 00:09:28.670
So, use a terminal window
if you're using Mac OSX.

253
00:09:28.670 --> 00:09:31.610
Let's assume that
we're going to log in.

254
00:09:31.610 --> 00:09:32.960
So, what we want to do is from

255
00:09:32.960 --> 00:09:34.910
our laptop we want to log in

256
00:09:34.910 --> 00:09:37.310
to the Raspberry Pi

257
00:09:37.310 --> 00:09:39.880
and we have to log in with
a particular account.

258
00:09:39.880 --> 00:09:43.225
So, let's assume we are using
the default Pi account.

259
00:09:43.225 --> 00:09:45.695
Right? So, notice at the top,

260
00:09:45.695 --> 00:09:47.480
I type and I'm doing
this from a Mac,

261
00:09:47.480 --> 00:09:50.360
I type ssh and I say,

262
00:09:50.360 --> 00:09:52.220
I give let's say pi.

263
00:09:52.220 --> 00:09:54.000
The username that
I'm going to use,

264
00:09:54.000 --> 00:09:56.105
@, and then I give
the IP address.

265
00:09:56.105 --> 00:09:58.730
You hit enter. There's
some stuff that it

266
00:09:58.730 --> 00:10:01.790
prints out and it connects
you and that's that.

267
00:10:01.790 --> 00:10:03.350
Now, one thing to
note is that the

268
00:10:03.350 --> 00:10:05.750
first time that you do
Secure Shell like this,

269
00:10:05.750 --> 00:10:07.550
the first time you ever
do Secure Shell to

270
00:10:07.550 --> 00:10:09.515
a particular machine,
it will say, look,

271
00:10:09.515 --> 00:10:13.880
I don't have this
IP address on file,

272
00:10:13.880 --> 00:10:15.875
are you sure you want to connect.

273
00:10:15.875 --> 00:10:18.140
If you're sure that you typed
in the right IP address,

274
00:10:18.140 --> 00:10:21.295
then you type yes and then
remember that for the future.

275
00:10:21.295 --> 00:10:23.300
Then once I'm connected,

276
00:10:23.300 --> 00:10:25.475
then I can type
regular Linux commands

277
00:10:25.475 --> 00:10:27.860
and they will be actually
reflecting what's,

278
00:10:27.860 --> 00:10:29.630
it will be sent to
the Raspberry Pi.

279
00:10:29.630 --> 00:10:31.609
So if I type, for instance, ls,

280
00:10:31.609 --> 00:10:33.290
it shows me the directory that it

281
00:10:33.290 --> 00:10:34.670
showed me the contents
of directory or

282
00:10:34.670 --> 00:10:36.200
actually the contents of

283
00:10:36.200 --> 00:10:38.210
the Raspberry Pi's
directory. All right.

284
00:10:38.210 --> 00:10:39.500
So, now I'm just,

285
00:10:39.500 --> 00:10:40.895
everything I type into the shell

286
00:10:40.895 --> 00:10:42.620
is getting sent to
the Raspberry Pi;

287
00:10:42.620 --> 00:10:45.320
everything Raspberry
Pi prints out appears

288
00:10:45.320 --> 00:10:48.080
in the shell on the screen
of my laptop let's say.

289
00:10:48.080 --> 00:10:50.150
So, now I am
successfully accessing

290
00:10:50.150 --> 00:10:53.720
the Raspberry Pi
remotely using SSH.