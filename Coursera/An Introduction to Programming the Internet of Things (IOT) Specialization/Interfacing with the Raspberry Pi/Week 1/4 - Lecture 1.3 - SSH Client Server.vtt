WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:11.961 --> 00:00:14.708
This lecture will talk about
the client server model and

3
00:00:14.708 --> 00:00:16.760
how you can connect to your Raspberry Pi.

4
00:00:18.850 --> 00:00:22.580
So, running the SSH client,
so if you want to connect

5
00:00:22.580 --> 00:00:26.680
to another machine with SSH, secure shell,
you've got to run the client.

6
00:00:26.680 --> 00:00:28.060
Now right now, for this,

7
00:00:28.060 --> 00:00:32.380
I'm going to assume we're using
a Linux machine to run the client on.

8
00:00:32.380 --> 00:00:39.360
Now, that counts, so you could do this
from Raspberry Pi, which is running Linux,

9
00:00:39.360 --> 00:00:43.720
in LX terminal, or
you could this on any Linux machine.

10
00:00:43.720 --> 00:00:45.680
You can type in the same thing.

11
00:00:45.680 --> 00:00:49.490
Or you can also type into
if you're running a Mac.

12
00:00:49.490 --> 00:00:52.880
With Mac OS, because it is a Linux,
you just start the terminal,

13
00:00:52.880 --> 00:00:55.370
run the terminal program, and
you can type into that terminal.

14
00:00:55.370 --> 00:00:59.160
So any of those machines,
this would be exactly the same procedure.

15
00:00:59.160 --> 00:01:04.610
You're running on Windows, then probably
depending on which secure shell

16
00:01:04.610 --> 00:01:09.800
you're using, say you're using putty,
p, u, t, t, y, if you download that one.

17
00:01:09.800 --> 00:01:12.760
If you run that,
then it's a little bit difference

18
00:01:12.760 --> 00:01:15.820
because to start running the program
you double-click on the program.

19
00:01:15.820 --> 00:01:19.170
It opens up a little window, and then you
type in the same information, user name,

20
00:01:19.170 --> 00:01:20.510
domain name, all that.

21
00:01:20.510 --> 00:01:22.570
But it just looks different, depending.

22
00:01:22.570 --> 00:01:26.440
But right now I'll talk about if you doing
it on a Linux machine or a Mac OS machine.

23
00:01:27.560 --> 00:01:31.560
So you type in the following command,
SSH which is the name of program.

24
00:01:31.560 --> 00:01:35.240
Then you give a username, and
then at and then the domain name.

25
00:01:35.240 --> 00:01:38.010
So the username is your
username on the server machine.

26
00:01:38.010 --> 00:01:40.900
Whatever your username is on
the server you put that there.

27
00:01:40.900 --> 00:01:42.010
That's the left of the at sign.

28
00:01:42.010 --> 00:01:44.230
To the right of the at sign
you give the domain name.

29
00:01:44.230 --> 00:01:50.670
That's the mnemonic, the address for
whatever the server machine's name is.

30
00:01:50.670 --> 00:01:54.750
So for instance, that might be uci.edu.

31
00:01:54.750 --> 00:01:56.640
If that's what I want to connect to.

32
00:01:56.640 --> 00:02:00.370
So note that you have to
have a domain name, and

33
00:02:00.370 --> 00:02:02.160
we'll talk about that in a little bit.

34
00:02:02.160 --> 00:02:05.660
But you have to have a domain name, or
some alternative, or just an IP address.

35
00:02:05.660 --> 00:02:06.830
We'll talk about that.

36
00:02:06.830 --> 00:02:08.160
But this is normally how you use it.

37
00:02:08.160 --> 00:02:09.760
So you give the domain name.

38
00:02:09.760 --> 00:02:12.244
Now the first time you connect
to a particular domain,

39
00:02:12.244 --> 00:02:15.702
it's same on raspberry pi, and
I'm connecting to my machine in my office.

40
00:02:15.702 --> 00:02:20.903
The first time I make the connection
it will give what looks like an error.

41
00:02:20.903 --> 00:02:24.405
It'll say that the address
could not be authenticated.

42
00:02:24.405 --> 00:02:26.055
It always does that the first time.

43
00:02:26.055 --> 00:02:27.225
The first time you do the connection.

44
00:02:29.265 --> 00:02:31.505
because it wants,
once you do it the first time,

45
00:02:31.505 --> 00:02:35.065
once you successfully do it the first
time, it will record that address and

46
00:02:35.065 --> 00:02:36.845
you won't get that comment again.

47
00:02:36.845 --> 00:02:39.295
But the first time it'll say that
the address could not be authenticated.

48
00:02:40.355 --> 00:02:43.730
And then it'll ask you, are you sure
you want to make the connection?

49
00:02:43.730 --> 00:02:47.250
So if you know that that
address is correct.

50
00:02:47.250 --> 00:02:51.380
So if you know uci.edu, let's say,
is where you actually want to connect to,

51
00:02:51.380 --> 00:02:55.030
then you type yes, and
hit enter, and it will continue.

52
00:02:55.030 --> 00:02:57.085
And it'll remember that for the next time.

53
00:02:57.085 --> 00:02:58.260
It stores it in a file.

54
00:03:00.040 --> 00:03:01.200
Now then it'll prompt you for

55
00:03:01.200 --> 00:03:05.500
the password, so
you'll type in whatever the password is.

56
00:03:05.500 --> 00:03:09.740
And after you type in the password, you'll
see exactly what you would see if you were

57
00:03:09.740 --> 00:03:13.230
sitting at the machine,
which will eventually be a prompt.

58
00:03:13.230 --> 00:03:16.690
You'll get a command line prompt, a dollar
sign or whatever the prompt looks like.

59
00:03:16.690 --> 00:03:17.830
And you can type in your commands.

60
00:03:17.830 --> 00:03:19.780
So that's basically what
you expect to happen.

61
00:03:21.500 --> 00:03:25.040
So let me show you what it
looks like when I did it.

62
00:03:25.040 --> 00:03:26.870
So I did this from Raspberry Pi.

63
00:03:26.870 --> 00:03:30.330
So I went to Raspberry Pi,
opened up LXTerminal, and

64
00:03:30.330 --> 00:03:34.790
you can see at the top I
circled in red my command.

65
00:03:34.790 --> 00:03:39.360
So I said secure shell,
ssh harris@openlab.ics.uci.edu.

66
00:03:39.360 --> 00:03:42.580
So that's a machine that I can connect to.

67
00:03:42.580 --> 00:03:48.830
So it says, the authenticity of the host
could not be established, it says.

68
00:03:48.830 --> 00:03:51.260
So that's always what it says first time.

69
00:03:51.260 --> 00:03:54.000
So, it tells me the RSA key fingerprint,

70
00:03:54.000 --> 00:03:56.818
which I have blanked out in red,
because you don't need to see that.

71
00:03:56.818 --> 00:03:58.290
That's my fingerprint.

72
00:03:58.290 --> 00:04:00.910
But then they asked me, are you sure
you want to continue connecting?

73
00:04:00.910 --> 00:04:01.650
So I typed, yes.

74
00:04:01.650 --> 00:04:03.690
You could see that I circled in red.

75
00:04:03.690 --> 00:04:06.530
Then, it says okay,
it's permanently added to my list.

76
00:04:07.710 --> 00:04:14.670
Then notice under that it says, password,
harris@openlab.ics.uci password.

77
00:04:14.670 --> 00:04:16.130
So there, I typed in the password.

78
00:04:16.130 --> 00:04:17.850
Now you don't see the password,
that's invisible.

79
00:04:17.850 --> 00:04:19.360
Doesn't show on the screen.

80
00:04:19.360 --> 00:04:20.830
I typed in and I hit return.

81
00:04:20.830 --> 00:04:24.530
And all the lines under that are what
appears whenever I log in to that machine.

82
00:04:24.530 --> 00:04:27.520
Open Lab, that's the stuff that
just appears in the screen, and

83
00:04:27.520 --> 00:04:29.040
you can't see it because I
didn't have enough space.

84
00:04:29.040 --> 00:04:31.880
But after a bunch of garbage
that it prints at the top,

85
00:04:31.880 --> 00:04:34.885
eventually I get a command line, just a
regular prompt, like a dollar bill prompt.

86
00:04:34.885 --> 00:04:37.160
And I can just type in to the machine and

87
00:04:37.160 --> 00:04:41.490
it would be as if I'm sitting
at Open Lab machines connected.

88
00:04:41.490 --> 00:04:45.339
So this is basically how it goes, and
then I can execute commands remotely.

89
00:04:47.280 --> 00:04:51.530
So the Raspberry Pi has
a secure shell server.

90
00:04:51.530 --> 00:04:55.720
Let's say if you want to connect to
the Raspberry Pi remotely, it's useful to

91
00:04:55.720 --> 00:04:59.470
connect the Raspberry Pi without
the keyboard and monitor, and all that.

92
00:04:59.470 --> 00:05:03.235
Actually, I use it now a lot,
to use my Raspberry Pi.

93
00:05:03.235 --> 00:05:05.880
So, SSH server is running by
default in your Raspberry Pi, so

94
00:05:05.880 --> 00:05:06.770
you don't have to do anything.

95
00:05:06.770 --> 00:05:08.329
You just power it up,
and it'll be running.

96
00:05:10.090 --> 00:05:14.320
You should change the private
host ID keys, OK?

97
00:05:14.320 --> 00:05:17.820
Now what happens, and
we don't want to get too much into

98
00:05:17.820 --> 00:05:21.700
how authentication is performed, because
that's a little out of scope of the class.

99
00:05:21.700 --> 00:05:26.650
But there are these private host ID keys,
and when you get your Raspberry Pi and

100
00:05:26.650 --> 00:05:28.490
install raspi on it,

101
00:05:28.490 --> 00:05:33.410
you get these default keys, which are the
same as everybody else's default keys.

102
00:05:33.410 --> 00:05:37.080
So the problem is if you keep using those
default keys, everybody else knows those

103
00:05:37.080 --> 00:05:39.160
keys, so you can have what's
called a man in the middle attack.

104
00:05:39.160 --> 00:05:41.620
Somebody can listen to your
conversation if they wanted to.

105
00:05:41.620 --> 00:05:45.140
Can, you know, decrypt your communication.

106
00:05:45.140 --> 00:05:49.660
So what you should do is, before you start
using the secure shell server on your

107
00:05:49.660 --> 00:05:53.630
Raspberry Pi, you should execute
the following command there.

108
00:05:53.630 --> 00:05:55.340
All that command, it goes on one line,

109
00:05:55.340 --> 00:05:56.830
I just couldn't fit it on
one line on the screen.

110
00:05:56.830 --> 00:06:02.690
But that's one long command that you
you execute to get a new set of keys.

111
00:06:02.690 --> 00:06:07.080
So you just execute that, and even without
executing that, you can connect to your

112
00:06:07.080 --> 00:06:10.110
Raspberry Pi secure shell server,
but you should for safety's sake.

113
00:06:10.110 --> 00:06:13.014
You should do that before
the first time you connect.

114
00:06:13.014 --> 00:06:18.760
Thank you.
[MUSIC]