WEBVTT

1
00:00:00.000 --> 00:00:07.629
[MUSIC]

2
00:00:14.546 --> 00:00:18.380
Module 2, Lesson 1, Lecture 1.1,
setting up your environment.

3
00:00:19.520 --> 00:00:23.380
So this entire module is about
the C programming language.

4
00:00:23.380 --> 00:00:24.921
C, C++.

5
00:00:24.921 --> 00:00:30.250
The reason for this is because
arduino is programmed in C++.

6
00:00:30.250 --> 00:00:33.340
Really, C but a little bit of C++.

7
00:00:33.340 --> 00:00:36.559
So this module is just about C,
teaching you C.

8
00:00:37.590 --> 00:00:41.900
Now because of that,
we're gonna go through C, and

9
00:00:41.900 --> 00:00:45.630
actually we won't be talking in this
module much about Arduino specifically,

10
00:00:45.630 --> 00:00:49.450
we'll just be talking about the C
language, and of course this will apply,

11
00:00:49.450 --> 00:00:56.580
but I'm assuming that your
environment may not be Arduino.

12
00:00:56.580 --> 00:01:00.930
This whole module could generically
be on a desktop, laptop or anything.

13
00:01:00.930 --> 00:01:01.870
Doesn't have to be Arduino.

14
00:01:03.680 --> 00:01:07.300
In fact, our starting example,
in the starting program,

15
00:01:07.300 --> 00:01:11.370
the program you always start with when
you're learning C is hello, world.

16
00:01:11.370 --> 00:01:13.220
Just prints hello, world to the screen.

17
00:01:14.300 --> 00:01:15.650
Now, notice I mentioned screen.

18
00:01:15.650 --> 00:01:17.040
Arduinos don't have screens.

19
00:01:17.040 --> 00:01:20.330
So I'm already assuming that you're
using a desktop or a laptop.

20
00:01:20.330 --> 00:01:23.810
So I just wanna describe for
you how you would set up your desktop,

21
00:01:23.810 --> 00:01:28.360
laptop environment in order to run these
programs to work with the programs that

22
00:01:28.360 --> 00:01:29.840
we're gonna talk about.

23
00:01:29.840 --> 00:01:35.500
So we've already talked about the Arduino
IDE, but that won't be useful for

24
00:01:35.500 --> 00:01:39.150
instance this program, where it prints
hello, world, cuz that print doesn't work.

25
00:01:39.150 --> 00:01:45.050
The printf statement doesn't work properly
on an Arduino cuz there's no screen.

26
00:01:45.050 --> 00:01:50.673
So let's just talk about setting up
the environment on a Windows machine,

27
00:01:50.673 --> 00:01:52.380
a Mac, or a Linux box.

28
00:01:52.380 --> 00:01:56.087
[COUGH] So basic things you're gonna need.

29
00:01:56.087 --> 00:01:58.140
You're gonna need a text editor and
a compiler.

30
00:01:59.170 --> 00:02:03.670
Now notice that the Adruino ID puts
that all together into one tool, right?

31
00:02:03.670 --> 00:02:05.768
We need the same things
on a Windows machine, or

32
00:02:05.768 --> 00:02:07.505
whatever platform you're gonna use.

33
00:02:07.505 --> 00:02:10.585
Actually, I prefer Linux for
this type of thing, but

34
00:02:10.585 --> 00:02:12.713
whatever machine doesn't matter.

35
00:02:12.713 --> 00:02:16.409
Now text editor can be any text editor,
but I mean, if you want to,

36
00:02:16.409 --> 00:02:20.833
you could use Word, but you generally
want to use a programmer's text editor,

37
00:02:20.833 --> 00:02:24.130
one that recognizes
programming constructs.

38
00:02:24.130 --> 00:02:26.840
So there are plenty of those around.

39
00:02:26.840 --> 00:02:30.530
I use GNU tools, GNU tools are free.

40
00:02:30.530 --> 00:02:31.415
Free tools.

41
00:02:31.415 --> 00:02:33.830
[LAUGH] Free, like just great.

42
00:02:33.830 --> 00:02:35.280
Free and open source, and everything.

43
00:02:35.280 --> 00:02:36.660
So I use GNU tools.

44
00:02:36.660 --> 00:02:40.950
So I'm giving you links to where
you can get appropriate GNU tools.

45
00:02:40.950 --> 00:02:43.180
You don't have to use these,
but they're nice.

46
00:02:43.180 --> 00:02:46.560
So Emacs text editor, I always use that.

47
00:02:46.560 --> 00:02:47.510
That's just a text editor.

48
00:02:47.510 --> 00:02:48.440
You can type your code in there.

49
00:02:49.560 --> 00:02:51.770
Gcc C compiler.

50
00:02:51.770 --> 00:02:56.380
You can download the C compiler,
which you're gonna need, CC++ compiler.

51
00:02:56.380 --> 00:02:59.260
And also the debugger, gdb,
you can download that too.

52
00:02:59.260 --> 00:03:02.110
Actually we're not gonna talk
too much about the debugger.

53
00:03:02.110 --> 00:03:04.400
So you don't have to worry about that,
but the text editor and

54
00:03:04.400 --> 00:03:06.660
the compiler are useful.

55
00:03:06.660 --> 00:03:11.200
Actually, Emacs is a text editor
that I've used since way back, and

56
00:03:11.200 --> 00:03:14.325
nowadays I use Notepad++,
which is also a GNU tool.

57
00:03:14.325 --> 00:03:15.170
Notepad++.

58
00:03:15.170 --> 00:03:17.575
You know Notepad,
it comes with your machine.

59
00:03:17.575 --> 00:03:19.510
Notepad++ is much nicer.

60
00:03:19.510 --> 00:03:22.250
And you can use that too,
it's also on www.gnu.org.

61
00:03:22.250 --> 00:03:26.590
So you get some text editor and
a C compiler.

62
00:03:26.590 --> 00:03:31.190
That C compiler, GCC, is great, and
it's open source, and it's great.

63
00:03:31.190 --> 00:03:36.130
The text editor, Emax or NotePad++,
they both understand C constructs, so

64
00:03:36.130 --> 00:03:37.000
they'll indent for

65
00:03:37.000 --> 00:03:39.680
you properly, color things on the screen
for you properly, and all of that.

66
00:03:39.680 --> 00:03:40.180
So they're nice.

67
00:03:41.230 --> 00:03:42.450
You can run on Windows.

68
00:03:42.450 --> 00:03:48.480
I would say MacOS and Linux are even
easier because MacOS is actually a Linux.

69
00:03:48.480 --> 00:03:51.800
It's actually a version
of Linux underneath so

70
00:03:51.800 --> 00:03:53.688
you don't have to install any of this.

71
00:03:53.688 --> 00:03:57.350
Gcc comes pre-installed
on those platforms.

72
00:03:57.350 --> 00:04:01.171
Windows, you have to do it separately and
that's fine.

73
00:04:01.171 --> 00:04:04.365
Now another way to go
rather then using GCC and

74
00:04:04.365 --> 00:04:09.337
E max is to use another integrated
development environment eclipse.

75
00:04:09.337 --> 00:04:12.386
Eclipse is a common one you
can use anyone you want but

76
00:04:12.386 --> 00:04:16.960
you can use eclipse its a common one open
source now the difference is see the way

77
00:04:16.960 --> 00:04:20.213
I write my code I do everything
with the command line, so

78
00:04:20.213 --> 00:04:24.160
I'll go to my text editor,
type in the code, save the file.

79
00:04:24.160 --> 00:04:26.030
Then I'll go to the command line and

80
00:04:26.030 --> 00:04:29.130
say type in the command,
the compile command directly.

81
00:04:29.130 --> 00:04:31.350
Gcc, give the name of my file.

82
00:04:31.350 --> 00:04:33.780
And I'll show you that in the next slide.

83
00:04:33.780 --> 00:04:37.700
So that's a way I do it, but
a lot of people like to use these IDE's.

84
00:04:37.700 --> 00:04:40.850
Like the Arduino IDE that
packages everything in one tool.

85
00:04:40.850 --> 00:04:45.370
So you type the code into the IDE and
in the same IDE you click a button

86
00:04:45.370 --> 00:04:49.930
that compiles the code or in Eclipse
it's called building the code, right?

87
00:04:49.930 --> 00:04:53.610
So people like to use IDEs like
Eclipse and you can download that and

88
00:04:53.610 --> 00:04:54.220
use that too.

89
00:04:54.220 --> 00:04:54.789
That's fine.

90
00:04:55.980 --> 00:04:59.260
It puts all the tools together in one
nice GUI, nice graphic user interface,

91
00:04:59.260 --> 00:05:00.620
just like Arduino on IDE.

92
00:05:01.720 --> 00:05:04.210
You need to run Java Virtual Environments.

93
00:05:04.210 --> 00:05:07.540
So, Java Runtime Environment, you have
to have Java installed on your machine,

94
00:05:07.540 --> 00:05:10.460
because the Eclipse IDE
is written in Java But,

95
00:05:10.460 --> 00:05:13.960
that's also true of the Arduino IDE,
so shouldn't be a problem.

96
00:05:15.260 --> 00:05:19.160
You can download it from here or
Google it and you can find it.

97
00:05:19.160 --> 00:05:23.210
Also, besides using Eclipse you could
also use Microsoft Visual Studio.

98
00:05:23.210 --> 00:05:26.910
That's not free, you have to pay money,
but you can use that too.

99
00:05:26.910 --> 00:05:27.878
Eclipse is nice and free.

100
00:05:29.712 --> 00:05:33.744
Okay, so here's an example of writing
the code and compiling it and

101
00:05:33.744 --> 00:05:35.610
running it the way I do it.

102
00:05:35.610 --> 00:05:39.130
So I do it, this actually, what I'm
doing in here, I'm doing it in Linux.

103
00:05:39.130 --> 00:05:40.320
So I'm running it in the Linux.

104
00:05:40.320 --> 00:05:42.250
I do everything at the command lines.

105
00:05:42.250 --> 00:05:44.080
So the top window that you see up there.

106
00:05:45.100 --> 00:05:46.460
That is my Emacs window.

107
00:05:46.460 --> 00:05:47.770
That's my text editor.

108
00:05:47.770 --> 00:05:49.780
And you can see in there,
I've written my code.

109
00:05:49.780 --> 00:05:52.410
That's my program, print hello world.

110
00:05:52.410 --> 00:05:53.570
And I saved it.

111
00:05:53.570 --> 00:05:56.040
So I saved it to a directory.

112
00:05:56.040 --> 00:05:59.480
Then I go the command line
which is a different window and

113
00:05:59.480 --> 00:06:01.300
you can see that in the bottom,
compile and run.

114
00:06:01.300 --> 00:06:06.470
Where there I compile the code, you can
see I type GCC that calls the compiler,

115
00:06:06.470 --> 00:06:12.920
GCC gave the name of the program -O and
then after the -O, -O is short for output.

116
00:06:12.920 --> 00:06:17.000
It gives the file name that I want
the executable to be, I called it hello.

117
00:06:17.000 --> 00:06:19.830
So -O hello.
So after I do that command, in my local

118
00:06:19.830 --> 00:06:24.070
directory, there will be a program, a file
called Hello, and that is my executable.

119
00:06:24.070 --> 00:06:28.160
So if I type LS, since this is Linnex,
LS gives me a directory listing.

120
00:06:28.160 --> 00:06:31.500
It shows me what's in the directory, and
I see there's a program called Hello.

121
00:06:31.500 --> 00:06:34.650
Note that even though I type LS here, if
you were doing this on a Windows machine,

122
00:06:35.770 --> 00:06:38.860
you would type dir, okay,
in the command prompt.

123
00:06:38.860 --> 00:06:41.820
In the cmd window, you type dir,
it does the same thing.

124
00:06:41.820 --> 00:06:45.960
If you own a Mac, then you would also
type ls, because it's also a Linux box.

125
00:06:45.960 --> 00:06:49.600
If you open up the terminal
you would type LS also.

126
00:06:49.600 --> 00:06:52.923
So I get the directory and I type./hello.

127
00:06:52.923 --> 00:06:56.810
You would think you could just type
hello to just run the code, but

128
00:06:56.810 --> 00:07:00.630
you have to type dot-slash to tell
it to look in the local directory.

129
00:07:00.630 --> 00:07:04.410
So you type ./hello, it takes the hello
program, runs it, and prints hello world.

130
00:07:04.410 --> 00:07:06.030
And that's that.

131
00:07:06.030 --> 00:07:10.440
So that's, you want to have that
whole tool chain installed.

132
00:07:10.440 --> 00:07:14.780
You can use the GNU tool chain
that I talked about, eclipse, GCC.

133
00:07:14.780 --> 00:07:19.830
You can go with IDE like eclipse,
not eclipse, Emacs and GCC.

134
00:07:19.830 --> 00:07:21.570
You can go with an IDE like Eclipse.

135
00:07:21.570 --> 00:07:22.340
You can use NotePad++,

136
00:07:22.340 --> 00:07:27.490
whatever text editor you want, but
get something like this program running.

137
00:07:27.490 --> 00:07:31.380
So you want to install that whole chain
top to bottom so that you can just take

138
00:07:31.380 --> 00:07:35.806
a piece of code, write it, save it,
and execute it like you see there.

139
00:07:35.806 --> 00:07:38.254
Thank you.

140
00:07:38.254 --> 00:07:43.796
[MUSIC]