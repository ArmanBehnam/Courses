WEBVTT

1
00:00:00.000 --> 00:00:09.627
[MUSIC]

2
00:00:09.627 --> 00:00:13.722
So in this lecture we'll talk about basic
components that you see in embedded

3
00:00:13.722 --> 00:00:18.271
systems commonly, different versions of
what you will eventually use in the class.

4
00:00:20.150 --> 00:00:22.780
So development board is very common.

5
00:00:22.780 --> 00:00:26.800
On the development board, see circled in
red is a microprocessor, microcontroller,

6
00:00:26.800 --> 00:00:27.820
actually, in that case.

7
00:00:27.820 --> 00:00:29.270
It looks like a freescale.

8
00:00:29.270 --> 00:00:32.190
And this is a board from my office,
actually.

9
00:00:32.190 --> 00:00:35.060
This freescale board has
a freescale processor on there and

10
00:00:35.060 --> 00:00:36.750
you can program it from a host.

11
00:00:36.750 --> 00:00:39.640
So you go to a host,
like that laptop that is pictured there.

12
00:00:39.640 --> 00:00:43.740
You type in the code, you compile
the code, and you connect the host

13
00:00:43.740 --> 00:00:47.890
to the development board and
transfer the data to the microcontroller.

14
00:00:47.890 --> 00:00:50.950
You should do your programming on a host
not always, like with a raspberry pie,

15
00:00:50.950 --> 00:00:52.280
as you'll see.

16
00:00:52.280 --> 00:00:55.440
You can actually do the development on the
rest of your Pi itself, if you want to.

17
00:00:55.440 --> 00:00:56.650
But it's most common if
you do it on a host,

18
00:00:56.650 --> 00:00:58.810
because a host is generally
in a more powerful platform,

19
00:00:58.810 --> 00:01:00.120
and easier to program all.

20
00:01:01.520 --> 00:01:06.985
So as far as processes go and
microcontrollers as well,

21
00:01:06.985 --> 00:01:10.335
but right now just talking about
general purpose processors.

22
00:01:10.335 --> 00:01:15.515
You can classify them in two broad
categories, general purpose and

23
00:01:15.515 --> 00:01:16.655
digital signal processing.

24
00:01:16.655 --> 00:01:18.655
So general purpose processors,

25
00:01:18.655 --> 00:01:22.580
those are what you see in your
standard desktop, laptop.

26
00:01:22.580 --> 00:01:26.370
They're used for any application and
they include many features.

27
00:01:26.370 --> 00:01:27.870
But they are overkill for most features.

28
00:01:27.870 --> 00:01:31.820
They have many features that
you probably don't even need.

29
00:01:31.820 --> 00:01:36.140
But they can handle anything, so
any particular task they can do it.

30
00:01:36.140 --> 00:01:37.120
They can do it adequately.

31
00:01:38.130 --> 00:01:41.550
But they tend to be more expensive
because they're overdesigned, right?

32
00:01:41.550 --> 00:01:44.510
They're overengineered, and
they have many features that

33
00:01:44.510 --> 00:01:46.610
maybe you don't need a lot of them,
but they have it just in case.

34
00:01:46.610 --> 00:01:48.430
So that's a general purpose processor.

35
00:01:48.430 --> 00:01:51.400
There are also digital
signal processors which

36
00:01:51.400 --> 00:01:54.760
Specific to doing digital
signal processing applications.

37
00:01:54.760 --> 00:01:59.310
So digital signal processing is
basically processing data streams.

38
00:01:59.310 --> 00:02:01.310
So audio streams, video streams.

39
00:02:01.310 --> 00:02:03.960
These are common, these are very common.

40
00:02:03.960 --> 00:02:07.480
Maybe you wanna as audio is coming
in you wanna filter that audio or

41
00:02:07.480 --> 00:02:09.600
you wanna compress that audio.

42
00:02:09.600 --> 00:02:11.348
So same thing with video, same thing.

43
00:02:11.348 --> 00:02:14.840
You might wanna filter it or
do some special effect or compress it or

44
00:02:14.840 --> 00:02:16.080
something like that.

45
00:02:16.080 --> 00:02:20.410
So these are big streams of
temporal data over time and

46
00:02:20.410 --> 00:02:23.110
you wanna do some processing on it.

47
00:02:23.110 --> 00:02:27.020
Digital signal processes are actually
good processes to do that with and

48
00:02:27.020 --> 00:02:28.420
they're made for that with that in mind.

49
00:02:28.420 --> 00:02:29.900
They have special instructions for that,

50
00:02:29.900 --> 00:02:31.930
they have what are called
vector instructions.

51
00:02:31.930 --> 00:02:35.440
So vector instructions are instructions
that do the same thing

52
00:02:35.440 --> 00:02:36.680
to lots of different data.

53
00:02:36.680 --> 00:02:38.793
So for instance, say you got add right?

54
00:02:38.793 --> 00:02:43.070
With add, you might take two numbers and
add them together and get a result.

55
00:02:43.070 --> 00:02:46.250
A vector add might take 32 numbers,

56
00:02:46.250 --> 00:02:51.810
add them to another 32 numbers,
and get a 32 number result.

57
00:02:51.810 --> 00:02:56.190
So we just did the same thing for
many pairs of data, many sets of data.

58
00:02:56.190 --> 00:02:58.460
And this is very common
in signal processing.

59
00:02:58.460 --> 00:03:02.300
So imagine you're processing video, right,
you got some image with a million pixels,

60
00:03:02.300 --> 00:03:03.760
which isn't even a lot.

61
00:03:03.760 --> 00:03:05.260
And you wanna perform some blur or

62
00:03:05.260 --> 00:03:08.780
some operation to the pixels, whatever
operation you performed to one pixel,

63
00:03:08.780 --> 00:03:11.610
you wanna do that to all one million,
the same thing.

64
00:03:11.610 --> 00:03:14.000
So vector operations are very useful for
things like that.

65
00:03:14.000 --> 00:03:16.110
You can just do things in
parallel very quickly.

66
00:03:18.420 --> 00:03:19.550
So, sensors.

67
00:03:19.550 --> 00:03:22.600
Sensors are extremely common,
you need some form of sensors.

68
00:03:22.600 --> 00:03:25.710
And sensors just receive
information from the environment,

69
00:03:25.710 --> 00:03:28.090
there are lots of
different kinds of sensors.

70
00:03:28.090 --> 00:03:32.550
Let's generally say you can have
simple sensors that receive,

71
00:03:32.550 --> 00:03:35.420
say, heat information, like thermistor.

72
00:03:35.420 --> 00:03:37.440
That receives temperature information.

73
00:03:37.440 --> 00:03:39.980
Photoresistor, it reports light intensity,
right?

74
00:03:39.980 --> 00:03:42.180
So these are generally simple sensors.

75
00:03:42.180 --> 00:03:47.240
I'll call them simple sensors
because their inputs and

76
00:03:47.240 --> 00:03:50.400
outputs are just real numbers.

77
00:03:50.400 --> 00:03:52.600
Zero volts to five volts, right?

78
00:03:52.600 --> 00:03:55.490
So it's bright or not bright,
something like that.

79
00:03:55.490 --> 00:03:58.700
But complex sensors can actually
receive information and

80
00:03:58.700 --> 00:04:00.690
receive more complicated data.

81
00:04:00.690 --> 00:04:02.340
So for instance take a camera.

82
00:04:02.340 --> 00:04:06.180
CMOS camera, like in a digital camera.

83
00:04:06.180 --> 00:04:07.800
So it captures images.

84
00:04:07.800 --> 00:04:09.940
Now that's a light sensor,
it's technically a light sensor.

85
00:04:09.940 --> 00:04:11.720
It's a special purpose light sensor.

86
00:04:11.720 --> 00:04:15.670
It doesn't just tell you the intensity
of light like a photoresistor might.

87
00:04:15.670 --> 00:04:19.590
It also tells you what color the light
is at every point in the image.

88
00:04:19.590 --> 00:04:23.050
So it's much more complicated visual
data that this thing is reporting.

89
00:04:23.050 --> 00:04:27.040
So it can't just give you one number,
zero to five yes, this is bright.

90
00:04:27.040 --> 00:04:27.950
No, it's not.

91
00:04:27.950 --> 00:04:31.020
It has to give you, say it's a megapixel,

92
00:04:31.020 --> 00:04:35.000
a million pixels of image data,
to represent what it's capturing.

93
00:04:35.000 --> 00:04:37.821
So this is a sensor, it's still
receiving data from the outside world.

94
00:04:37.821 --> 00:04:42.620
But it's a much more complicated sensor,
so there's a lot more data to receive and

95
00:04:42.620 --> 00:04:44.370
it's more complicated
to work with generally.

96
00:04:45.450 --> 00:04:47.340
Now, we can still work with them, but

97
00:04:47.340 --> 00:04:50.230
you generally have to know a little
bit more about the circuitry in

98
00:04:50.230 --> 00:04:53.010
order to do that, or use library
functions, which we will talk about later.

99
00:04:54.080 --> 00:04:56.800
Now, also an ethernet controller,
you can see that as a sensor.

100
00:04:57.900 --> 00:05:01.240
You know, whether that's a sensor or
not is a question,

101
00:05:01.240 --> 00:05:05.610
is a sort of a judgement call, but
an ethernet controller will allow you to

102
00:05:05.610 --> 00:05:09.620
receive information on the ether,
from the ethernet, from the network.

103
00:05:09.620 --> 00:05:12.390
So that information,
you can call that sensing,

104
00:05:12.390 --> 00:05:14.730
not necessarily from the physical world,
but sensing from the network.

105
00:05:14.730 --> 00:05:18.950
And the type of information they receive
over the network can be very complicated.

106
00:05:18.950 --> 00:05:22.350
So that's a more complicated form of
a sensor, more complicated to use.

107
00:05:23.770 --> 00:05:29.000
Actuators, they cause events to occur in
the environment, there's some simple ones.

108
00:05:29.000 --> 00:05:32.040
LEDs, light emitting diodes,
they turn lights off and on.

109
00:05:32.040 --> 00:05:36.320
LCDs, liquid crystal displays,
that's like what's on my digital watch,

110
00:05:36.320 --> 00:05:37.770
you've seen these.

111
00:05:37.770 --> 00:05:41.140
They're not back lit, so
they're not as bright.

112
00:05:41.140 --> 00:05:43.230
They're low power, but they're useful.

113
00:05:43.230 --> 00:05:45.820
Those, you can put numbers on them,
something like that, so

114
00:05:45.820 --> 00:05:47.130
it's a relatively simple display.

115
00:05:48.170 --> 00:05:51.260
You can also have more complicated
actuators, like a servo motor, so

116
00:05:51.260 --> 00:05:54.570
they're motors, DC motors, servo motors
are a little bit more complicated.

117
00:05:54.570 --> 00:05:58.650
You can control the angle, the precise
angle to which the motor turns,

118
00:05:58.650 --> 00:06:03.070
which is useful in a lot of cases, like
say a robot arm or something like that.

119
00:06:03.070 --> 00:06:05.991
Ethernet controller,
it can also be thought of as an actuator,

120
00:06:05.991 --> 00:06:08.165
because it can output
data to the environment.

121
00:06:08.165 --> 00:06:12.498
If I consider the network itself to be the
environment then an Ethernet controller

122
00:06:12.498 --> 00:06:15.448
allows you to output some
message data to the network and

123
00:06:15.448 --> 00:06:18.169
send it out to wherever
you're going to send it to.

124
00:06:18.169 --> 00:06:22.430
But these are more complicated sensors,
or actuators, I'm sorry.

125
00:06:22.430 --> 00:06:23.509
Thank you.

126
00:06:23.509 --> 00:06:32.019
[MUSIC]