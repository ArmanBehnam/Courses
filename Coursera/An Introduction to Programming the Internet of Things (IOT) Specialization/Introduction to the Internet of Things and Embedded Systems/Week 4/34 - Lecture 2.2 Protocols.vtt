WEBVTT

1
00:00:00.000 --> 00:00:09.838
[MUSIC]

2
00:00:09.838 --> 00:00:13.495
So we'll talk a little bit about
protocols, network protocols,

3
00:00:13.495 --> 00:00:17.630
Internet protocols specifically and
what their responsibilities are.

4
00:00:17.630 --> 00:00:18.710
We won't go into great depth.

5
00:00:18.710 --> 00:00:22.190
But we want to give you a flavor of what's
contained inside these protocols and

6
00:00:22.190 --> 00:00:23.380
what they define.

7
00:00:23.380 --> 00:00:24.710
So what does the protocol do?

8
00:00:24.710 --> 00:00:27.220
An Internet Protocol, it does a lot.

9
00:00:27.220 --> 00:00:32.440
An Internet Protocol, meaning IP or
TCP or UDP, they do several things.

10
00:00:32.440 --> 00:00:34.610
One basic thing is
provide a naming scheme.

11
00:00:34.610 --> 00:00:36.510
Actually that's a very important thing.

12
00:00:36.510 --> 00:00:40.460
So IP,
you've probably heard of an IP address.

13
00:00:40.460 --> 00:00:42.180
That comes from the Internet Protocol and

14
00:00:42.180 --> 00:00:45.770
it's a unique address that
every network component has.

15
00:00:45.770 --> 00:00:49.750
Every component on the Internet
has to have an IP address, and so

16
00:00:49.750 --> 00:00:54.860
each host and router gets assigned at
least one of these Internet addresses.

17
00:00:54.860 --> 00:00:59.220
Now when you say least one, basically it
should be one to every network adapter.

18
00:00:59.220 --> 00:01:01.530
But a particular machine can
have many network adapters.

19
00:01:01.530 --> 00:01:05.060
By network adapter,
I mean hardware interfaces to the network.

20
00:01:05.060 --> 00:01:09.350
So if you look at a laptop,
you'll often have a wi-fi adapter, but

21
00:01:09.350 --> 00:01:12.590
you'll also have a wired adapter and
a wired ethernet jack.

22
00:01:12.590 --> 00:01:13.180
You might not.

23
00:01:13.180 --> 00:01:14.820
Depends on your laptop,

24
00:01:14.820 --> 00:01:18.330
but you might have an ethernet jack
where you can plug into the wall, right?

25
00:01:18.330 --> 00:01:20.790
So, you might have two
network adapters there.

26
00:01:20.790 --> 00:01:23.700
Two ethernet Internet network adapters.

27
00:01:23.700 --> 00:01:26.570
So you might get two IP addresses,
one for each.

28
00:01:26.570 --> 00:01:29.400
Usually you focus on one, but
it's possible to have more.

29
00:01:29.400 --> 00:01:32.430
So, Internet protocol,
one very important thing it does is it

30
00:01:32.430 --> 00:01:35.070
gives this naming scheme,
this unique naming scheme.

31
00:01:35.070 --> 00:01:39.150
Every machine on the Internet
has to have a different name.

32
00:01:39.150 --> 00:01:41.000
And now there are problems with this,
right,

33
00:01:41.000 --> 00:01:43.060
because IP addresses are not that long.

34
00:01:43.060 --> 00:01:47.760
IP addresses are four byte numbers,

35
00:01:47.760 --> 00:01:51.326
four single bytes, so
you've seen them referred to as these,

36
00:01:51.326 --> 00:01:56.717
let's see like 124.254.27.33.

37
00:01:56.717 --> 00:02:00.570
Okay, and
they're four numbers separated by dots.

38
00:02:00.570 --> 00:02:04.020
So it's four numbers and
each number can range from 0 to 255.

39
00:02:04.020 --> 00:02:07.720
So there aren't that many addresses
compared to how many network

40
00:02:07.720 --> 00:02:10.530
components there are these day,
because of IOT.

41
00:02:10.530 --> 00:02:11.840
There's so many things on a network.

42
00:02:11.840 --> 00:02:13.360
You need so many addresses.

43
00:02:13.360 --> 00:02:16.320
So there are a lot of challenges
in dealing with that.

44
00:02:16.320 --> 00:02:17.930
We won't really cover those right now.

45
00:02:17.930 --> 00:02:20.860
But the idea is everything on the network
has to have a unique IP address.

46
00:02:22.120 --> 00:02:24.750
Also, these protocols
provide a delivery mechanism.

47
00:02:24.750 --> 00:02:29.640
So what we mean by that is that whenever
you send a message from one machine

48
00:02:29.640 --> 00:02:34.330
to another machine, you gotta go
through a sequence of machines, okay?

49
00:02:34.330 --> 00:02:39.540
You've gotta define a packet, a chunk of
data, and it's gotta be sent from machine

50
00:02:39.540 --> 00:02:42.650
to machine to machine because these
machines are not directly wired together.

51
00:02:42.650 --> 00:02:44.480
They're not within radio range directly.

52
00:02:44.480 --> 00:02:48.230
There has to be a route taken, so it has
to hop from one machine to the next.

53
00:02:48.230 --> 00:02:51.320
So these protocols define
methods of doing routing.

54
00:02:51.320 --> 00:02:54.010
Of how you send a message through
a sequence of machines to get to

55
00:02:54.010 --> 00:02:57.960
the destination you wanna go to,
that's one important role.

56
00:02:57.960 --> 00:03:00.300
Another thing is that
it defines the header.

57
00:03:00.300 --> 00:03:01.010
All right?

58
00:03:01.010 --> 00:03:02.650
The header and the payload.

59
00:03:02.650 --> 00:03:06.190
So by header, if you look at any packet.

60
00:03:06.190 --> 00:03:09.070
You can usually break it up into header
and payload, maybe footer too, but

61
00:03:09.070 --> 00:03:10.420
let's just talk about header.

62
00:03:10.420 --> 00:03:12.820
So, payload is the actual
data that you want to send.

63
00:03:12.820 --> 00:03:16.580
The header is the information
that is sort of metadata.

64
00:03:16.580 --> 00:03:20.190
It's about the packet, but
it's not the actual payload of the packet,

65
00:03:20.190 --> 00:03:21.630
not the important part of the packet.

66
00:03:21.630 --> 00:03:23.130
It's not the data you want to send.

67
00:03:23.130 --> 00:03:25.420
But it has information about the packet.

68
00:03:25.420 --> 00:03:28.660
Now generally the header information
comes from the network protocols.

69
00:03:28.660 --> 00:03:32.130
So the data in the network protocol,
that the network protocol uses,

70
00:03:32.130 --> 00:03:34.610
it gets put into the header, typically.

71
00:03:34.610 --> 00:03:37.050
So we'll look at that a little bit, here.

72
00:03:38.110 --> 00:03:40.200
So yeah and like I said I
brought this up last lecture.

73
00:03:41.300 --> 00:03:42.270
Citizen ban radio,

74
00:03:42.270 --> 00:03:47.030
you say over at the end of talking and
roger means data received and so on.

75
00:03:47.030 --> 00:03:48.500
So that would be called footer.

76
00:03:48.500 --> 00:03:51.720
So you say a message and then at
the end of your message you say over.

77
00:03:51.720 --> 00:03:54.960
And that word over is actually
added to the end of the message.

78
00:03:54.960 --> 00:03:56.500
So the payload is the text.

79
00:03:56.500 --> 00:04:00.820
So say I say something like, hello,
my name is Ian Harris, over.

80
00:04:00.820 --> 00:04:03.690
Hello, my name is Ian Harris,
that's the actual payload.

81
00:04:03.690 --> 00:04:09.150
And then the over is overhead, we call
that footer because its at the end.

82
00:04:09.150 --> 00:04:12.100
But, text that you put, something that you
add to the beginning you'd call header.

83
00:04:12.100 --> 00:04:14.440
And header and footer same thing
a beginning and an end but

84
00:04:14.440 --> 00:04:15.480
its the same thing.

85
00:04:15.480 --> 00:04:21.220
Excess overhead data is required to
help you adhere to the protocol but

86
00:04:21.220 --> 00:04:22.990
its not the actual data
that you want to send.

87
00:04:24.480 --> 00:04:26.600
So, these rules enable
efficient communication.

88
00:04:26.600 --> 00:04:28.510
These rules, these header and
footer rules,

89
00:04:28.510 --> 00:04:33.080
the data you put in them, you need that so
that at the receiving end you know like,

90
00:04:33.080 --> 00:04:35.780
for instance, with CB, you know oh,
I heard the word, over.

91
00:04:35.780 --> 00:04:37.530
That means I can talk now, right?

92
00:04:37.530 --> 00:04:40.180
So, in order to establish
efficient communication,

93
00:04:40.180 --> 00:04:43.590
you need that information that's
contained in the header and footer.

94
00:04:43.590 --> 00:04:45.620
And, for instance,
with routing and the Internet,

95
00:04:45.620 --> 00:04:49.770
some of that information inside
the header will be important for routing.

96
00:04:49.770 --> 00:04:50.618
Things like this.

97
00:04:50.618 --> 00:04:53.160
So, all the different functions
that these protocols handle,

98
00:04:53.160 --> 00:04:57.580
they use information inside
the header typically to do that.

99
00:04:57.580 --> 00:05:01.740
There are many different tasks
that are performed by protocols,

100
00:05:01.740 --> 00:05:03.300
by network protocols.

101
00:05:03.300 --> 00:05:04.740
A lot of different tasks.

102
00:05:04.740 --> 00:05:06.750
And we can't go into
details of all of those.

103
00:05:06.750 --> 00:05:10.660
But some of those are routing, you know,
figuring out a route sequence of machines

104
00:05:10.660 --> 00:05:13.470
to send a packet through
to get to its destination.

105
00:05:13.470 --> 00:05:14.520
Flow control, right?

106
00:05:14.520 --> 00:05:17.370
So making sure that you
don't have a bottleneck.

107
00:05:17.370 --> 00:05:19.980
That all of your traffic isn't
going through one router.

108
00:05:19.980 --> 00:05:22.340
That you spread it out
over different routers so

109
00:05:22.340 --> 00:05:24.360
that you can get good traffic flow.

110
00:05:24.360 --> 00:05:25.080
Arbitration.

111
00:05:25.080 --> 00:05:29.480
Arbitration means when you have some
kind of a network segment where

112
00:05:29.480 --> 00:05:34.120
only one packet can travel at a time and
two packets want to travel.

113
00:05:34.120 --> 00:05:38.060
So say two machines want to send messages
on this one piece of network segment

114
00:05:38.060 --> 00:05:39.220
at the same time.

115
00:05:39.220 --> 00:05:40.520
Then, somehow you have to arbitrate.

116
00:05:40.520 --> 00:05:43.070
You have to figure out which
one gets to go first, right?

117
00:05:43.070 --> 00:05:45.320
So, there are rules for
all these things, and

118
00:05:45.320 --> 00:05:47.850
all these rules are encoded
inside the network protocols.

119
00:05:47.850 --> 00:05:49.640
So, the protocols define those rules.

120
00:05:49.640 --> 00:05:53.015
What do you do when two machines want
to talk on the same wire at the same

121
00:05:53.015 --> 00:05:54.055
time, right?

122
00:05:54.055 --> 00:05:55.980
The set of rules,
that's called network protocol.

123
00:05:55.980 --> 00:05:59.927
When you want to send a machine message
from A to B, how do you figure out what

124
00:05:59.927 --> 00:06:03.445
the next node is that you want
to send your message to, right?

125
00:06:03.445 --> 00:06:05.615
That's defined by the protocols and so on.

126
00:06:05.615 --> 00:06:09.140
So, these protocols are very
complicated in general.

127
00:06:09.140 --> 00:06:09.840
And because they are so

128
00:06:09.840 --> 00:06:14.900
complicated, what people have done, is
they've divided the protocols into layers.

129
00:06:14.900 --> 00:06:19.400
So, OSI, open system interconnect model,
OSI model.

130
00:06:19.400 --> 00:06:21.340
It presents what's
called a protocol stack.

131
00:06:22.450 --> 00:06:23.730
Classification protocol.

132
00:06:23.730 --> 00:06:26.640
So it takes all the things that
these network protocols do and

133
00:06:26.640 --> 00:06:28.200
it divides them up.

134
00:06:28.200 --> 00:06:29.880
So routing is one layer.

135
00:06:29.880 --> 00:06:31.350
Flow control is another layer.

136
00:06:31.350 --> 00:06:33.330
Arbitration is maybe another layer, right?

137
00:06:33.330 --> 00:06:34.745
It just separates them.

138
00:06:34.745 --> 00:06:38.368
Now, all these layers
have to be taken care of,

139
00:06:38.368 --> 00:06:43.210
but the separation is generally good for
coding frankly.

140
00:06:43.210 --> 00:06:47.240
Because writing one piece of code that
handles all those complex tasks at once,

141
00:06:47.240 --> 00:06:49.320
it would be one nasty piece of code.

142
00:06:49.320 --> 00:06:52.920
So it makes a lot of sense to cut that
code up, to separate the responsibilities

143
00:06:52.920 --> 00:06:56.740
across different layers, and then write
different pieces of code for each layer.

144
00:06:56.740 --> 00:06:59.640
And then let the different
layers of code work together.

145
00:06:59.640 --> 00:07:01.954
So that's what the OSI model does.

146
00:07:01.954 --> 00:07:05.090
It proposes a set of layers.

147
00:07:05.090 --> 00:07:09.290
Now the Internet uses a similar set of
layers, maybe a more compressed version

148
00:07:09.290 --> 00:07:13.550
of that, but definitely the idea of
taking all these complicated tasks and

149
00:07:13.550 --> 00:07:16.160
dividing them amongst
different layers of protocols

150
00:07:16.160 --> 00:07:19.540
is a good thing to reduce the complexity
and make the coding more manageable.

151
00:07:21.580 --> 00:07:23.850
So each layer has it's
own responsibilities, and

152
00:07:23.850 --> 00:07:25.440
each layer uses different data.

153
00:07:25.440 --> 00:07:28.090
So different data usually in the header,
right?

154
00:07:28.090 --> 00:07:30.931
So for instance, if you're looking at
routing, there's a layer that's doing

155
00:07:30.931 --> 00:07:33.605
routing, you're gonna need to use
routing information in the header, and

156
00:07:33.605 --> 00:07:35.950
actually place routing
information in the header.

157
00:07:35.950 --> 00:07:39.433
Where, if on the other hand,
if your working on float control, right?

158
00:07:39.433 --> 00:07:42.389
And flow control's maybe at a different
layer, then flow control doesn't

159
00:07:42.389 --> 00:07:45.470
necessarily need to know the routing
information, not the details of it.

160
00:07:45.470 --> 00:07:47.740
But it might need to know
the capacity at a node,

161
00:07:47.740 --> 00:07:51.220
how many messages can a particular
node take at one time.

162
00:07:51.220 --> 00:07:54.160
So that would be different information
that also might be present in the header,

163
00:07:54.160 --> 00:07:55.800
or something like that.

164
00:07:55.800 --> 00:07:58.486
So each, or not in the header,
but they definitely,

165
00:07:58.486 --> 00:08:01.607
each layer uses different types
of information to do its job.

166
00:08:01.607 --> 00:08:02.386
Thank you.

167
00:08:02.386 --> 00:08:08.178
[MUSIC]