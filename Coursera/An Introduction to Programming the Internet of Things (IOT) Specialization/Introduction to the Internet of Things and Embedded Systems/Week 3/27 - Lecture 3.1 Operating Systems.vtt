WEBVTT

1
00:00:00.000 --> 00:00:09.481
[MUSIC]

2
00:00:09.481 --> 00:00:13.018
In this lesson, this lecture will talk
about operating systems a little bit.

3
00:00:13.018 --> 00:00:14.920
What an operating system is?

4
00:00:14.920 --> 00:00:18.285
Now, they're not always present
in IoT devices and in fact with

5
00:00:18.285 --> 00:00:23.150
the platforms we'll be working on, we'll
be working with Arduino and Raspberry Pi.

6
00:00:23.150 --> 00:00:26.050
With Arduino you do not
have an operating system.

7
00:00:26.050 --> 00:00:29.400
It's really too slow to support that.

8
00:00:29.400 --> 00:00:31.530
But Raspberry Pi you do, typically.

9
00:00:31.530 --> 00:00:34.880
So, we'll talk about the role
of an operating system and

10
00:00:34.880 --> 00:00:37.980
an embedded system and an IoT device.

11
00:00:37.980 --> 00:00:39.420
You may or may not need it.

12
00:00:39.420 --> 00:00:44.160
So an operating system is an extra
layer in between the program,

13
00:00:44.160 --> 00:00:48.670
your application code,
and the actual hardware.

14
00:00:48.670 --> 00:00:51.610
So generally say we're working on right.

15
00:00:51.610 --> 00:00:56.950
There's a user at the top,
whose using some application, right?

16
00:00:56.950 --> 00:00:59.380
By application we mean the actual program,
right?

17
00:00:59.380 --> 00:01:05.770
So you've compiled the program and that
application, that's the application code.

18
00:01:05.770 --> 00:01:09.590
Do we know that application code would
connect directly to the hardware.

19
00:01:09.590 --> 00:01:12.030
So it'd go straight from
the application to the hardware.

20
00:01:12.030 --> 00:01:13.560
No operating system at all.

21
00:01:13.560 --> 00:01:15.370
And the application directly
controls the hardware.

22
00:01:15.370 --> 00:01:17.840
So it signals high and low, and so on.

23
00:01:17.840 --> 00:01:22.840
But in say RetroPie or more complicated
IoT device, you would have something

24
00:01:22.840 --> 00:01:27.230
like what you see here where
the user attacks the application.

25
00:01:27.230 --> 00:01:31.030
The application code actually may not
directly connect to the hardware,

26
00:01:31.030 --> 00:01:32.960
it communicates with the operating system.

27
00:01:32.960 --> 00:01:36.810
So, it makes calls from the operating
system and it's requesting hardware

28
00:01:36.810 --> 00:01:40.980
service and then the operating system
manages the hardware most directly.

29
00:01:40.980 --> 00:01:44.255
So that's where an operating
system fits in, in the picture.

30
00:01:44.255 --> 00:01:46.850
That the code that you write and

31
00:01:46.850 --> 00:01:51.210
compile the application code, that
interfaces with the operating system and

32
00:01:51.210 --> 00:01:54.469
the operating system deals with the
details of interacting with the hardware.

33
00:01:56.220 --> 00:01:58.150
So it manages other programs.

34
00:01:58.150 --> 00:02:01.930
So one thing about an operating system
is that it allows you to have not only

35
00:02:01.930 --> 00:02:04.180
one application but many applications.

36
00:02:04.180 --> 00:02:07.630
So you can run lots of different
applications at one time, and

37
00:02:07.630 --> 00:02:09.850
the operating system itself
manages the hardware.

38
00:02:09.850 --> 00:02:13.170
So it gives them turns,
lets them take turns, and stuff like that.

39
00:02:13.170 --> 00:02:17.720
And you see this in standard operating
systems like Windows or in iOS or

40
00:02:17.720 --> 00:02:22.120
something like that, you run typically
on a laptop, desktop you run

41
00:02:22.120 --> 00:02:26.270
many programs at one time and the
operating system allows you to do that.

42
00:02:26.270 --> 00:02:27.800
Right?
Without an operating system you can only

43
00:02:27.800 --> 00:02:28.850
run one program at a time.

44
00:02:30.630 --> 00:02:33.510
So, you can execute a lot of
programs together and when you're

45
00:02:33.510 --> 00:02:36.470
executing them together remember that
they're not actually executing together,

46
00:02:36.470 --> 00:02:37.700
they just seem like it.

47
00:02:37.700 --> 00:02:41.500
So it's really alternating but very fast,
faster than a human would really notice.

48
00:02:41.500 --> 00:02:43.190
So it looks like they're all
running at the same time.

49
00:02:44.910 --> 00:02:47.520
A nice user interface so often,

50
00:02:47.520 --> 00:02:50.536
now, how nice a user interface really
depends on the operating system.

51
00:02:50.536 --> 00:02:54.130
If you look at a desktop or
a laptop Windows, iOS, Linux,

52
00:02:54.130 --> 00:02:57.190
something like that,
they will have a very nice user interface.

53
00:02:57.190 --> 00:03:00.032
Graphic user interface, GUI,
you can double-click on something.

54
00:03:00.032 --> 00:03:02.592
Double-click on a file,
it'll open it up, that sort of thing.

55
00:03:02.592 --> 00:03:04.950
That's a full-on operating system.

56
00:03:04.950 --> 00:03:09.880
The operating systems that you find in
an IoT device, they're much smaller and

57
00:03:09.880 --> 00:03:10.890
stripped back.

58
00:03:10.890 --> 00:03:14.740
They're not going to have, not likely
to have any graphical user interface or

59
00:03:14.740 --> 00:03:19.290
anything like that, but they will have
a user interface, a command line.

60
00:03:19.290 --> 00:03:23.390
So if you ever use a Windows command line
prompt, or iOS you use a terminal window,

61
00:03:23.390 --> 00:03:24.520
Linux you use a terminal window,

62
00:03:24.520 --> 00:03:27.650
something like that,
I call that a nice user interface.

63
00:03:27.650 --> 00:03:31.940
It's text-based, but
it's nicer than not having it.

64
00:03:31.940 --> 00:03:36.520
So there's a user interface
that's provided of some kind.

65
00:03:36.520 --> 00:03:38.350
And it needs processing power.

66
00:03:38.350 --> 00:03:41.300
So one thing about operating systems
is that operating system itself

67
00:03:41.300 --> 00:03:42.510
is a big program, right?

68
00:03:42.510 --> 00:03:45.240
It's a big program that's
running in addition

69
00:03:45.240 --> 00:03:49.090
to the actual programs that you
wanna run on your IoT device.

70
00:03:49.090 --> 00:03:51.941
So, it's gonna consume clock cycles,
right?

71
00:03:51.941 --> 00:03:55.896
There are some clock cycles that are spent
doing operating system tasks, right?

72
00:03:55.896 --> 00:03:58.660
Some memory that's spent storing
the operating system data.

73
00:03:58.660 --> 00:03:59.640
Things like this.

74
00:03:59.640 --> 00:04:02.380
So, the operating system
itself takes up resources so

75
00:04:02.380 --> 00:04:04.970
you have to make a decision
whether you need one or not.

76
00:04:04.970 --> 00:04:08.954
Because it's gonna cost you resources,
which means cost you money.

77
00:04:08.954 --> 00:04:13.510
It slows down the system because while
the processor is working on the operating

78
00:04:13.510 --> 00:04:16.638
system, doing executing
the operating system code,

79
00:04:16.638 --> 00:04:19.890
it can't be executing
your actual application.

80
00:04:19.890 --> 00:04:20.770
So it slows things down.

81
00:04:20.770 --> 00:04:22.280
And so as a result,

82
00:04:22.280 --> 00:04:26.660
when you use an operating system,
you generally need a faster processor.

83
00:04:26.660 --> 00:04:30.640
That's why, if you look at an Arduino
which is running at maybe eight megahertz,

84
00:04:30.640 --> 00:04:34.100
something like that, usually don't
support an operating system with that.

85
00:04:34.100 --> 00:04:36.810
But if you run Raspberry Pi and
you've got like one gigahertz,

86
00:04:36.810 --> 00:04:38.909
then it's okay to support
an operating system,

87
00:04:38.909 --> 00:04:41.337
because it has enough clock
cycles that you can do that.

88
00:04:43.285 --> 00:04:47.165
A little example of an operating
system that actually I had a group

89
00:04:47.165 --> 00:04:50.960
do something like this a project
like this several years ago.

90
00:04:50.960 --> 00:04:53.090
Where they wanted to have
a control car with a camera.

91
00:04:53.090 --> 00:04:55.230
So it's an RT car
controlled through the web.

92
00:04:55.230 --> 00:04:57.870
So you can go to a laptop,
desktop whatever,

93
00:04:57.870 --> 00:04:59.880
anything that has Wi-Fi, go to a phone.

94
00:04:59.880 --> 00:05:03.910
Open up a browser and connect to the car.

95
00:05:03.910 --> 00:05:08.758
And the car has on it a camera and
it's own web server, right?

96
00:05:08.758 --> 00:05:12.970
So you can cancel this web server and
control the car to its own web server.

97
00:05:12.970 --> 00:05:16.100
So as an interface, it looks roughly
like what you see down here.

98
00:05:16.100 --> 00:05:20.150
On the one side, there's the picture,
the image, of what the car sees.

99
00:05:20.150 --> 00:05:22.070
So that's actually coming
from the car's camera.

100
00:05:22.070 --> 00:05:24.190
So like I said,
the car on it had a camera.

101
00:05:24.190 --> 00:05:25.340
It was connected to a web service.

102
00:05:25.340 --> 00:05:29.975
So, the view from that camera would be
streamed through Wi-Fi over to whatever

103
00:05:29.975 --> 00:05:31.919
your browser device is, right?

104
00:05:31.919 --> 00:05:35.870
Then, it would have buttons forward,
back, left, right, to control the car.

105
00:05:35.870 --> 00:05:37.820
So you'd click forward,
it would move the car forward.

106
00:05:37.820 --> 00:05:39.340
Click back and move back, and so on.

107
00:05:39.340 --> 00:05:45.430
So you can take commands to drive the car,
through Wi-Fi, to the car's web server,

108
00:05:45.430 --> 00:05:48.810
and that would directly control
the steering and the motors and all that.

109
00:05:50.220 --> 00:05:53.660
So in a system like this,
it is useful to have an operating system

110
00:05:53.660 --> 00:05:56.140
because there are so
many things going on at one time.

111
00:05:56.140 --> 00:05:58.980
So the car is controlled over
the Internet, with Wi-Fi generally.

112
00:05:58.980 --> 00:06:04.080
The car has its own web server
which has an actual URL address.

113
00:06:05.310 --> 00:06:08.160
And the web interface allows
you to control the car and

114
00:06:08.160 --> 00:06:09.820
see the images and so on.

115
00:06:09.820 --> 00:06:12.200
Also has an auto brake feature
to avoid collision so,

116
00:06:13.530 --> 00:06:16.490
it'll stop automatically regardless
of what your controls are.

117
00:06:16.490 --> 00:06:19.750
If it sees, if it senses something
in front of it, it will stop.

118
00:06:19.750 --> 00:06:24.070
But the idea that it generally has a lot
of tasks to do, a lot of things to do at

119
00:06:24.070 --> 00:06:28.475
one time, in that type of situation
an operating system can be very useful.

120
00:06:28.475 --> 00:06:29.405
Thank you.

121
00:06:29.405 --> 00:06:35.998
[MUSIC]