WEBVTT

1
00:00:00.000 --> 00:00:08.817
[MUSIC]

2
00:00:10.937 --> 00:00:13.615
So files have permission.

3
00:00:13.615 --> 00:00:16.575
Files have owners first,
a file has an owner,

4
00:00:16.575 --> 00:00:18.615
an owner is the person
who created the file.

5
00:00:18.615 --> 00:00:20.675
The person being the user
who created the file, so

6
00:00:20.675 --> 00:00:23.105
the username of the person
who created the file.

7
00:00:23.105 --> 00:00:25.215
And files can also have permissions,
access permissions.

8
00:00:26.655 --> 00:00:29.065
Now the permissions generally
come in three categories.

9
00:00:29.065 --> 00:00:32.015
Read permission, write permission,
and execute permission.

10
00:00:32.015 --> 00:00:33.815
Read permission,
means you can read the file,

11
00:00:33.815 --> 00:00:36.420
write permission means you
can write data to the file.

12
00:00:36.420 --> 00:00:39.810
Execute means you can run the file,
if it's a program you can run it.

13
00:00:40.990 --> 00:00:42.360
So read, write, execute.

14
00:00:42.360 --> 00:00:46.230
And the initials, the letters you use for
those are R, W, and X for

15
00:00:46.230 --> 00:00:47.120
each one of those permissions.

16
00:00:48.260 --> 00:00:51.620
Now, different permissions can
be assigned to different users

17
00:00:51.620 --> 00:00:53.440
according to the type of user.

18
00:00:53.440 --> 00:00:58.090
So there are three categories of
permission, three grouping of people, or

19
00:00:58.090 --> 00:01:02.050
groupings of users, for every file
when you're talking about permissions.

20
00:01:02.050 --> 00:01:04.790
So you can talk about permissions for
the user.

21
00:01:04.790 --> 00:01:07.150
The user is a file,
is always referring to the file owner.

22
00:01:07.150 --> 00:01:10.160
So the user permissions
are the permissions for the file owner.

23
00:01:10.160 --> 00:01:12.860
Note that the user can be prevented.

24
00:01:12.860 --> 00:01:15.580
The user might prevent himself from
writing to it for safety sake or

25
00:01:15.580 --> 00:01:16.130
something like that.

26
00:01:16.130 --> 00:01:18.680
So, you can have user permissions for
the owner.

27
00:01:18.680 --> 00:01:22.280
You can have group permissions that
are permissions for a group of users.

28
00:01:22.280 --> 00:01:27.080
So we haven't talked about this, but
you can define a group of users.

29
00:01:27.080 --> 00:01:31.480
For instance, say I've got two users,
me and Joe,Ian and Joe.

30
00:01:31.480 --> 00:01:36.580
I can make a group that's called my
group and it just contains Ian and Joe.

31
00:01:36.580 --> 00:01:40.300
Then that group can have permissions for
access in this file.

32
00:01:40.300 --> 00:01:43.040
So you can user permissions,
group permissions, and

33
00:01:43.040 --> 00:01:48.010
then you can other permissions,
which is permissions for everybody else.

34
00:01:48.010 --> 00:01:50.980
These permissions, we're not gonna talk
about how to change them right now.

35
00:01:50.980 --> 00:01:52.259
Let's just talk about how to see them.

36
00:01:53.320 --> 00:01:58.140
The way you view file permissions
generally is to type ls, get a,

37
00:01:58.140 --> 00:01:59.620
ls is a directory, right?

38
00:01:59.620 --> 00:02:00.520
ls -l, use the -l option,

39
00:02:00.520 --> 00:02:05.280
it gives you the long form, and
you see all the data about each file.

40
00:02:05.280 --> 00:02:10.210
So here I'm doing ls -l,
I got there's actually five files in here,

41
00:02:10.210 --> 00:02:11.180
four of which are directory.

42
00:02:11.180 --> 00:02:14.010
So desktop, indiecity,
python_games, and testdir,

43
00:02:14.010 --> 00:02:16.210
those are all directories,
test1 is a file.

44
00:02:16.210 --> 00:02:19.280
They color them differently but
they all have permissions.

45
00:02:19.280 --> 00:02:22.600
So the permissions you can see
in the left-most column [COUGH].

46
00:02:22.600 --> 00:02:24.630
So there's a d for the directory.

47
00:02:24.630 --> 00:02:29.650
D designates directory and dash doesn't
but after that you see nine characters.

48
00:02:30.880 --> 00:02:33.400
Nine characters in a row and
some of those characters are dashes.

49
00:02:33.400 --> 00:02:36.630
So let's look at that first file,
desktop, for a second, right?

50
00:02:36.630 --> 00:02:41.310
If you look in its permission fields
there's a d, telling me it's a directory,

51
00:02:41.310 --> 00:02:42.353
but then there's rwx.

52
00:02:42.353 --> 00:02:46.310
Then there's r-x, then there's r-x.

53
00:02:46.310 --> 00:02:51.150
So, the r, w, and x stand for
read, write, and execute.

54
00:02:51.150 --> 00:02:53.820
The first three characters
are the user permissions.

55
00:02:53.820 --> 00:02:56.050
The next three characters
are the group permissions.

56
00:02:56.050 --> 00:02:59.060
The next three characters are the other
permissions, for everybody else.

57
00:02:59.060 --> 00:03:02.450
So for desktop, what that says is,
the user can read or write or

58
00:03:02.450 --> 00:03:04.490
execute the file or the directory.

59
00:03:04.490 --> 00:03:09.280
In this case, a directory, but then,
the group can only, if there were a group,

60
00:03:09.280 --> 00:03:11.300
which there is not, but
if there were a group, it could read and

61
00:03:11.300 --> 00:03:14.380
execute, could not write to the directory.

62
00:03:14.380 --> 00:03:18.710
And the other, which is everybody else in
the world, can read from the directory,

63
00:03:18.710 --> 00:03:21.870
and execute things in the directory,
but it cannot write to the directory.

64
00:03:21.870 --> 00:03:23.340
There's a dash there, instead of a W,

65
00:03:23.340 --> 00:03:25.889
there's a dash, so they indicate
they don't have write permission.

66
00:03:26.970 --> 00:03:29.940
Now, if you look at that file,
test1, right?

67
00:03:29.940 --> 00:03:34.830
Test 1 a few rows down, the user has
read permission and write permission but

68
00:03:34.830 --> 00:03:39.380
no execute permission, which is fine
cuz it's not an executable program.

69
00:03:39.380 --> 00:03:44.970
Then the group and the other have only
read permission, but no write permission.

70
00:03:44.970 --> 00:03:47.881
So that's how you read the file
permissions and you can change those to,

71
00:03:47.881 --> 00:03:49.467
we'll talk about those another time.

72
00:03:51.667 --> 00:03:54.924
Now, [COUGH] in addition to
the user account that we're using,

73
00:03:54.924 --> 00:03:58.910
we're using the pi account,
that's the default account.

74
00:03:58.910 --> 00:04:00.500
There's another account
called the Root Account.

75
00:04:00.500 --> 00:04:02.530
Linux machines all have a root account.

76
00:04:02.530 --> 00:04:04.710
Root Account has the highest
permission level.

77
00:04:04.710 --> 00:04:08.460
So the Root Account has access
permission for everything.

78
00:04:08.460 --> 00:04:11.830
Key files and
directories are only accessible by root.

79
00:04:11.830 --> 00:04:14.784
So, if you look at [COUGH]
a Linux operating system,

80
00:04:14.784 --> 00:04:18.438
the operating system itself is
composed of many files, okay?

81
00:04:18.438 --> 00:04:22.806
There are many files and executables and
things that make up the operating system.

82
00:04:22.806 --> 00:04:25.334
And so some of these files and
directories,

83
00:04:25.334 --> 00:04:28.120
some subset of these are tagged only for
root.

84
00:04:28.120 --> 00:04:31.960
Only by root and only root has permission,
read and write access permission, or

85
00:04:31.960 --> 00:04:33.280
at least write access.

86
00:04:33.280 --> 00:04:36.490
This is for safety's sake because
if you start going around and

87
00:04:36.490 --> 00:04:39.230
messing with some of these files you're
actually altering the operating system

88
00:04:39.230 --> 00:04:42.800
itself, altering features
of the operating system.

89
00:04:42.800 --> 00:04:45.690
If you don't know what you're doing
you can ruin the operating system.

90
00:04:45.690 --> 00:04:49.540
So some of these files have
only root permission and

91
00:04:49.540 --> 00:04:51.680
some of these directories
only root can access them.

92
00:04:52.690 --> 00:04:55.130
Now, sometimes you need root permission.

93
00:04:55.130 --> 00:04:56.680
You don't wanna have root
permission in general,

94
00:04:56.680 --> 00:04:59.180
because it's a little bit dangerous,
it's not safe.

95
00:04:59.180 --> 00:05:01.440
If you do something in root, it's done.

96
00:05:01.440 --> 00:05:03.910
If I accidentally delete a file and

97
00:05:03.910 --> 00:05:07.160
it's some critical file,
if you're not root it won't let you.

98
00:05:07.160 --> 00:05:08.560
But if you're root, it will let you.

99
00:05:08.560 --> 00:05:11.930
So root is dangerous
to be in all the time.

100
00:05:11.930 --> 00:05:15.400
But, there are certain cases
where you need root permission,

101
00:05:15.400 --> 00:05:16.540
say to install a program.

102
00:05:16.540 --> 00:05:19.520
A lot of times installing programs you
need to be root, because installing

103
00:05:19.520 --> 00:05:23.130
a program requires putting files in
all kinds of directories, and certain

104
00:05:23.130 --> 00:05:27.260
directories are only accessible by root,
and maybe you need to modify a registry,

105
00:05:27.260 --> 00:05:32.110
I'm talking Windows, you need to modify
some file that only root has access to.

106
00:05:32.110 --> 00:05:34.780
So maybe installing
programs a lot of time,

107
00:05:34.780 --> 00:05:37.780
you need to be rude,
not always, but sometimes.

108
00:05:37.780 --> 00:05:39.200
Change in the operating systems, so

109
00:05:39.200 --> 00:05:42.380
if you wanna modify the operating system,
update the operating system,

110
00:05:42.380 --> 00:05:46.570
installs drivers into the operating
system, you often need to be root.

111
00:05:46.570 --> 00:05:49.110
So there are a set of things
that you need to do with root.

112
00:05:49.110 --> 00:05:53.180
The way you generally do that is you
use a command called Sudo, S-U-D-O.

113
00:05:53.180 --> 00:05:56.860
SU is short for Switch User,
that's a command, switch user DO.

114
00:05:56.860 --> 00:06:00.770
So you prefix your command with Sudo.

115
00:06:00.770 --> 00:06:03.530
So, let's say I wanna do LS,
I wanna get a directory.

116
00:06:03.530 --> 00:06:06.480
I type LS and that's fine, right?

117
00:06:06.480 --> 00:06:09.820
But if I want to get it directly that
only root has permission to look at,

118
00:06:09.820 --> 00:06:11.100
I wanna look at that directory.

119
00:06:11.100 --> 00:06:15.000
I can't just type ls,
I have to type sudo ls, sudo ls and

120
00:06:15.000 --> 00:06:19.480
it will do the ls command
as if I were root.

121
00:06:19.480 --> 00:06:23.305
So it just applies root permission to
a single command which is a safer way

122
00:06:23.305 --> 00:06:23.816
to do it.

123
00:06:23.816 --> 00:06:27.856
You don't wanna generally become root
unless you really know what you're doing.

124
00:06:27.856 --> 00:06:28.776
Thank you.

125
00:06:28.776 --> 00:06:34.872
[MUSIC]