WEBVTT

1
00:00:00.000 --> 00:00:10.796
[MUSIC]

2
00:00:10.796 --> 00:00:13.030
So we're gonna go through a few commands.

3
00:00:13.030 --> 00:00:15.720
A few other Linux commands for
accessing files,

4
00:00:15.720 --> 00:00:18.920
doing things to files,
basic file operations.

5
00:00:18.920 --> 00:00:21.560
First, say you want to view a file,
you wanna see what's in a file.

6
00:00:21.560 --> 00:00:24.240
One way to do that is
to use a text editor.

7
00:00:24.240 --> 00:00:26.300
Let's say you got a file, like in my case.

8
00:00:26.300 --> 00:00:30.087
I have a file called testfile,
see how you're doing ls.

9
00:00:30.087 --> 00:00:32.753
And I look in my directories,
and I see three sub-directories.

10
00:00:32.753 --> 00:00:34.634
But I also see this file called testfile,

11
00:00:34.634 --> 00:00:38.830
which notice it colors it differently
than the directories but that's fine.

12
00:00:38.830 --> 00:00:42.830
So if I wanna see that file, one way to do
it would be to just use my text editor.

13
00:00:42.830 --> 00:00:44.130
Type nano testfile.

14
00:00:44.130 --> 00:00:45.680
If I did that, it would open up nano.

15
00:00:45.680 --> 00:00:48.350
And I would see the contents
of the testfile there.

16
00:00:48.350 --> 00:00:49.990
So you can use your text editor.

17
00:00:49.990 --> 00:00:51.350
But sometimes you don't care to do that.

18
00:00:51.350 --> 00:00:53.004
You just want to get
a print out of the file.

19
00:00:53.004 --> 00:00:55.879
So you can use cat.

20
00:00:55.879 --> 00:00:59.270
Cat testfile, you can see there, it just
prints out the contents of the file.

21
00:00:59.270 --> 00:01:02.270
Test, test,
just some junk I put in a file.

22
00:01:02.270 --> 00:01:04.280
So cat is another way of viewing a file.

23
00:01:04.280 --> 00:01:05.370
Cat prints it to the terminal.

24
00:01:06.770 --> 00:01:08.810
Now, there's another command called head,

25
00:01:08.810 --> 00:01:11.750
which prints the first
ten lines of a file.

26
00:01:11.750 --> 00:01:13.400
And then there's last or

27
00:01:13.400 --> 00:01:16.335
tail, which is the same thing,
which prints the last ten lines.

28
00:01:16.335 --> 00:01:19.220
Now head and tail both would do
the exactly the same thing on this

29
00:01:19.220 --> 00:01:19.910
file, right?

30
00:01:19.910 --> 00:01:22.080
Because it's less than ten lines long.

31
00:01:22.080 --> 00:01:23.350
You can modify head and tail.

32
00:01:23.350 --> 00:01:26.520
If you look at head and tail, they have
options to change the number of lines.

33
00:01:26.520 --> 00:01:28.690
So, say I want to look
at the first 20 lines.

34
00:01:28.690 --> 00:01:32.449
You can say head dash 20, I think,
and it'll print out 20 lines,

35
00:01:32.449 --> 00:01:33.671
something like that.

36
00:01:33.671 --> 00:01:38.520
So you can change those,
but that's what they are.

37
00:01:38.520 --> 00:01:39.588
CP, CP is copy.

38
00:01:39.588 --> 00:01:43.480
It stands for copy, for copying a file.

39
00:01:43.480 --> 00:01:45.406
We use that here, so
I get it in my directory, ls.

40
00:01:45.406 --> 00:01:48.390
And you see in the directory,
I've got a testfile.

41
00:01:48.390 --> 00:01:49.680
So, I do a CP.

42
00:01:49.680 --> 00:01:52.213
CP takes two arguments, generally.

43
00:01:52.213 --> 00:01:55.797
One argument is the name
of the original file.

44
00:01:55.797 --> 00:01:58.450
And the second argument is
the name of the new file.

45
00:01:58.450 --> 00:02:00.170
The copy that you want to create.

46
00:02:00.170 --> 00:02:03.910
So, in this case,
I'm saying cp testfile test2.

47
00:02:03.910 --> 00:02:05.760
Then if I type ls, get a directory.

48
00:02:05.760 --> 00:02:07.730
You can see now there
are two files in there.

49
00:02:07.730 --> 00:02:10.879
There's testfile and there's
another file in there called test2.

50
00:02:10.879 --> 00:02:16.296
So it created a new file called test2,
and if I cat testfile, and I cat test2.

51
00:02:16.296 --> 00:02:18.530
You can see that they're exactly the same.

52
00:02:18.530 --> 00:02:22.310
So it just made a copy,
gave it the name test2 that I specified.

53
00:02:24.290 --> 00:02:28.040
Now another command for
manipulating files is MV, stands for move.

54
00:02:29.120 --> 00:02:32.786
So, to move a file, now you can use
that really in one of two ways,

55
00:02:32.786 --> 00:02:34.460
at least two ways.

56
00:02:34.460 --> 00:02:38.300
One way is to change the name of the file,
and

57
00:02:38.300 --> 00:02:40.830
the other way is to
move it to a new place.

58
00:02:40.830 --> 00:02:43.768
So, changing the name of a file,
we're doing that first.

59
00:02:43.768 --> 00:02:46.412
We say ls.
We see there are two files, test2 and

60
00:02:46.412 --> 00:02:47.129
testfile.

61
00:02:47.129 --> 00:02:50.238
All right now,
let's say I want to move testfile.

62
00:02:50.238 --> 00:02:54.070
[COUGH] I want to rename testfile.

63
00:02:54.070 --> 00:02:56.620
So I can say move testfile test1.

64
00:02:56.620 --> 00:03:00.370
It will move testfile to
a new file called test1.

65
00:03:00.370 --> 00:03:02.920
So that all I'm really doing is rename,
right?

66
00:03:02.920 --> 00:03:06.480
And now if I do an ls,
you can see there's test1 and test2.

67
00:03:06.480 --> 00:03:09.770
So there's no longer a testfile in there,
it's now called test1.

68
00:03:09.770 --> 00:03:10.800
It's been moved to a new name.

69
00:03:12.090 --> 00:03:15.130
Now another thing I can use move for
is to move it to a new directory.

70
00:03:15.130 --> 00:03:17.770
So, say I make a directory
called test directory.

71
00:03:17.770 --> 00:03:19.337
Makedir testdir.

72
00:03:19.337 --> 00:03:23.150
And then I type ls, and you see there's
a directory called testdir there.

73
00:03:23.150 --> 00:03:27.060
Then I can do move test2 testdir.

74
00:03:27.060 --> 00:03:30.090
And in that case,
what it does is, it doesn't say,

75
00:03:30.090 --> 00:03:32.910
oh let me rename test2 to be testdir.

76
00:03:32.910 --> 00:03:35.490
It sees that testdir exists and
that it's a directory.

77
00:03:35.490 --> 00:03:39.930
So it says, okay, it takes test2 and
moves it into the testdir directory.

78
00:03:39.930 --> 00:03:43.730
So now after I do that, if I type ls,
you'll see in my current directory.

79
00:03:43.730 --> 00:03:45.570
I don't see test2 anymore.

80
00:03:45.570 --> 00:03:47.720
That's because we moved
to a new directory.

81
00:03:47.720 --> 00:03:51.060
Now if I type cd testdir,
if I change directory to testdir.

82
00:03:51.060 --> 00:03:55.940
And then I type ls,
I can say test2 is now in that directory.

83
00:03:55.940 --> 00:03:59.379
So it successfully moved
it to a new directory.

84
00:03:59.379 --> 00:04:00.350
Thank you.

85
00:04:00.350 --> 00:04:08.619
[MUSIC]