WEBVTT

1
00:00:00.000 --> 00:00:02.040
Now, I'm going to talk
a little bit about

2
00:00:02.040 --> 00:00:03.240
some of the commands that are

3
00:00:03.240 --> 00:00:05.940
used in Linux to navigate
the file system,

4
00:00:05.940 --> 00:00:07.530
to move through the file system.

5
00:00:07.530 --> 00:00:09.630
So, like I said,
every shell has it's

6
00:00:09.630 --> 00:00:13.140
own local directory
that it defaults to.

7
00:00:13.140 --> 00:00:16.020
You can move around the
directories and go up and

8
00:00:16.020 --> 00:00:17.685
down through the directory tree

9
00:00:17.685 --> 00:00:19.755
and find the files
that you want to find.

10
00:00:19.755 --> 00:00:23.075
So, we'll go to this command cd.

11
00:00:23.075 --> 00:00:25.500
Cd stands for change
directory and that's what you

12
00:00:25.500 --> 00:00:27.060
use to change your
local directory

13
00:00:27.060 --> 00:00:28.500
from one directory to another.

14
00:00:28.500 --> 00:00:30.450
So, you can see the first line

15
00:00:30.450 --> 00:00:33.030
of this list of commands here,

16
00:00:33.030 --> 00:00:35.300
I'm typing in pwd, that

17
00:00:35.300 --> 00:00:36.880
shows me what directory
I'm currently in.

18
00:00:36.880 --> 00:00:39.670
So, /home,/pi, that's
my current directory.

19
00:00:39.670 --> 00:00:42.605
Then, if I'd say cd /bin,

20
00:00:42.605 --> 00:00:45.150
that puts me into
the /bin directory.

21
00:00:45.150 --> 00:00:46.535
So, then if I say pwd,

22
00:00:46.535 --> 00:00:48.530
you can see it prints out /bin

23
00:00:48.530 --> 00:00:50.450
because cd did just
what it supposed to do,

24
00:00:50.450 --> 00:00:54.025
it changed my directory to
exactly what I typed, cd /bin.

25
00:00:54.025 --> 00:00:56.460
Now, right after that I type

26
00:00:56.460 --> 00:00:59.940
just cd with
no argument, just cd.

27
00:00:59.940 --> 00:01:01.240
What that does is,

28
00:01:01.240 --> 00:01:04.520
it brings you to the
default directory,

29
00:01:04.520 --> 00:01:06.680
the home directory
for your account.

30
00:01:06.680 --> 00:01:08.430
So, what happens is, in

31
00:01:08.430 --> 00:01:10.350
every shell you're running
it in some account,

32
00:01:10.350 --> 00:01:12.255
some running in the
Pi account, right?

33
00:01:12.255 --> 00:01:13.860
Because the Pi account is sort of

34
00:01:13.860 --> 00:01:16.965
the default user account
in a raspberry Pi.

35
00:01:16.965 --> 00:01:20.310
So, every account has
it's local directory,

36
00:01:20.310 --> 00:01:21.825
it's own home directory.

37
00:01:21.825 --> 00:01:25.635
In raspberry Pi, it's
in /home/pi, right?

38
00:01:25.635 --> 00:01:27.795
That's so typical,
you'll say /home,

39
00:01:27.795 --> 00:01:30.630
so say I made a new directory,
/home/harris, right?

40
00:01:30.630 --> 00:01:32.025
I made a new account
called Harris,

41
00:01:32.025 --> 00:01:34.200
it would make a directory
called /home/harris

42
00:01:34.200 --> 00:01:36.040
and then when I'm
logged in as Harris,

43
00:01:36.040 --> 00:01:39.565
it would put me by default
into that /home/harris.

44
00:01:39.565 --> 00:01:42.080
So, when you type cd
with no argument,

45
00:01:42.080 --> 00:01:43.789
it just brings you
back to whatever

46
00:01:43.789 --> 00:01:45.020
the default directory is for

47
00:01:45.020 --> 00:01:46.775
the account that
you're logged in as

48
00:01:46.775 --> 00:01:48.740
which in this case is /home/pi.

49
00:01:48.740 --> 00:01:52.360
So, you can say pwd,
I see it's /home/pi.

50
00:01:52.360 --> 00:01:54.380
But in this case, I'm using cd to

51
00:01:54.380 --> 00:01:56.210
bring me to a
particular directory.

52
00:01:56.210 --> 00:01:58.339
So, the argument to cd,

53
00:01:58.339 --> 00:02:01.535
if I give it an argument is
the entire path, basically,

54
00:02:01.535 --> 00:02:04.895
the whole directory name
all the way from the top.

55
00:02:04.895 --> 00:02:07.910
When I say the top I mean
from that slash directory.

56
00:02:07.910 --> 00:02:10.845
So, say I want to go to /home/pi,

57
00:02:10.845 --> 00:02:13.080
I have to specify
the whole thing,

58
00:02:13.120 --> 00:02:17.100
cd/home/pi or
cd/home/indiegames or

59
00:02:17.100 --> 00:02:19.160
whatever the directory is.

60
00:02:19.160 --> 00:02:22.130
So, you specify
the whole path from the top.

61
00:02:22.130 --> 00:02:24.755
Now, another way to use cd,

62
00:02:24.755 --> 00:02:25.910
so this is for
change in directory.

63
00:02:25.910 --> 00:02:28.415
Another way to use cd is to,

64
00:02:28.415 --> 00:02:30.500
instead of specifying
the whole path,

65
00:02:30.500 --> 00:02:33.200
the whole directory that you
want to go to from the top,

66
00:02:33.200 --> 00:02:35.195
you can just move yourself

67
00:02:35.195 --> 00:02:37.615
relative to the current
local directory.

68
00:02:37.615 --> 00:02:40.340
So, the typical way you
move is you either move

69
00:02:40.340 --> 00:02:42.920
up one directory in
the tree or down one.

70
00:02:42.920 --> 00:02:44.029
So, if you remember,

71
00:02:44.029 --> 00:02:46.965
this whole file system
is one big tree, right?

72
00:02:46.965 --> 00:02:49.140
It doesn't have to be a tree,

73
00:02:49.140 --> 00:02:50.400
but think of it as a tree.

74
00:02:50.400 --> 00:02:52.920
So, you can move up
one or down one.

75
00:02:52.920 --> 00:02:56.115
So, pwd, I see I'm in /home/pi,

76
00:02:56.115 --> 00:02:59.450
if I say cd.., that
moves me up one level.

77
00:02:59.450 --> 00:03:00.680
So, now if I do pwd,

78
00:03:00.680 --> 00:03:02.210
I see I'm in /home,

79
00:03:02.210 --> 00:03:05.135
I moved up one from Pi.

80
00:03:05.135 --> 00:03:07.505
Then I can go down a level.

81
00:03:07.505 --> 00:03:10.335
So, I can type cd Pi

82
00:03:10.335 --> 00:03:12.540
and it'll move into
the pi directory.

83
00:03:12.540 --> 00:03:14.700
Now notice, when I specify Pi,

84
00:03:14.700 --> 00:03:16.320
I didn't specify the whole path,

85
00:03:16.320 --> 00:03:19.890
I didn't say /home/pi,
I just said Pi.

86
00:03:19.890 --> 00:03:21.300
Now, when I do that,

87
00:03:21.300 --> 00:03:22.920
it looks for Pi,

88
00:03:22.920 --> 00:03:25.115
the Pi directory in
the local directory.

89
00:03:25.115 --> 00:03:28.085
That's what the point of
the local directory is,

90
00:03:28.085 --> 00:03:29.300
is if you don't specify

91
00:03:29.300 --> 00:03:31.190
the entire path
which I didn't here,

92
00:03:31.190 --> 00:03:32.435
I just said Pi, right?

93
00:03:32.435 --> 00:03:34.160
If you don't specify
the entire path,

94
00:03:34.160 --> 00:03:35.330
it will look in

95
00:03:35.330 --> 00:03:36.890
the local directory for

96
00:03:36.890 --> 00:03:38.100
whatever it is
you're referring to,

97
00:03:38.100 --> 00:03:40.350
in this case, Pi and it
finds it there, right?

98
00:03:40.350 --> 00:03:43.240
Because under /home
there is a Pi directory,

99
00:03:43.240 --> 00:03:45.290
so it finds it and then it
moves me to that directory.

100
00:03:45.290 --> 00:03:47.510
So, if I type pwd, I get

101
00:03:47.510 --> 00:03:50.000
/home/pi which is where
I expect it to be.

102
00:03:50.000 --> 00:03:52.550
So, this is another way
to use cd to just move up

103
00:03:52.550 --> 00:03:56.245
one level or down one level
in our directory hierarchy.

104
00:03:56.245 --> 00:04:00.300
Another command, very
commonly used, command is ls.

105
00:04:00.300 --> 00:04:03.590
Ls gives you the contents
of a directory.

106
00:04:03.590 --> 00:04:05.420
So remember, every directory

107
00:04:05.420 --> 00:04:09.420
contain other
directories or files.

108
00:04:09.420 --> 00:04:11.540
If you type ls, it will show

109
00:04:11.540 --> 00:04:13.430
you all the contents
of the directory.

110
00:04:13.430 --> 00:04:14.660
So, we started off,

111
00:04:14.660 --> 00:04:18.110
I type pwd, remember,
I'm in /home/pi.

112
00:04:18.110 --> 00:04:21.065
Then I type ls and notice
it types three things,

113
00:04:21.065 --> 00:04:22.130
it prints out three things:

114
00:04:22.130 --> 00:04:24.590
Desktop, indiecity
and python_games.

115
00:04:24.590 --> 00:04:26.660
Each one of these is a
directory and these are

116
00:04:26.660 --> 00:04:27.815
the three directories that are

117
00:04:27.815 --> 00:04:29.945
inside my current directory,

118
00:04:29.945 --> 00:04:32.670
/home/pi, so that
are under it, right?

119
00:04:32.670 --> 00:04:34.320
So, that's what it prints out.

120
00:04:34.320 --> 00:04:38.880
Now, notice that after
that I type ls-l. Now, the

121
00:04:38.880 --> 00:04:40.530
-l option, there are

122
00:04:40.530 --> 00:04:42.660
a lot of options to each one
of these Linux commands.

123
00:04:42.660 --> 00:04:45.670
The -l option just gives
me lots of detail.

124
00:04:45.670 --> 00:04:49.230
So again, when I type ls-l it,

125
00:04:49.230 --> 00:04:51.495
shows me the same
three directories, Desktop,

126
00:04:51.495 --> 00:04:54.260
indiecity, python_games,
but it gives me on

127
00:04:54.260 --> 00:04:57.830
the same line a lot of
information about each directory.

128
00:04:57.830 --> 00:05:00.470
So, we'll go through these later.

129
00:05:00.470 --> 00:05:01.610
We're not going to go
through every one of these,

130
00:05:01.610 --> 00:05:02.780
but just to show you,

131
00:05:02.780 --> 00:05:04.190
give you an idea what kind
of data is on it.

132
00:05:04.190 --> 00:05:08.150
It'll take the first line with
desktop at it at the end.

133
00:05:08.150 --> 00:05:09.625
So, in the left,

134
00:05:09.625 --> 00:05:11.010
what you see are the permissions,

135
00:05:11.010 --> 00:05:14.310
the access permissions,
r means read,

136
00:05:14.310 --> 00:05:17.415
w means write, x
means the execute.

137
00:05:17.415 --> 00:05:19.520
So, this is describing who

138
00:05:19.520 --> 00:05:21.680
has permissions and
it can be user,

139
00:05:21.680 --> 00:05:24.230
so the owner gets

140
00:05:24.230 --> 00:05:26.015
all the permissions,
read, write and execute.

141
00:05:26.015 --> 00:05:30.080
Then if there's a group
associated with the file which

142
00:05:30.080 --> 00:05:31.520
there isn't in this case and

143
00:05:31.520 --> 00:05:35.225
then other which is just r-x,

144
00:05:35.225 --> 00:05:37.115
so read and execute.

145
00:05:37.115 --> 00:05:39.415
Other means anybody
can access it.

146
00:05:39.415 --> 00:05:41.070
So anyway, we'll talk

147
00:05:41.070 --> 00:05:43.160
about permissions
a little bit more later,

148
00:05:43.160 --> 00:05:45.980
but this is the idea that you
can get information about

149
00:05:45.980 --> 00:05:49.900
every directory or file inside
a directory by typing ls.

150
00:05:49.900 --> 00:05:53.205
In this case, this Pi directory

151
00:05:53.205 --> 00:05:55.310
only has three directories in it,

152
00:05:55.310 --> 00:05:57.335
but it could have
files just as well.

153
00:05:57.335 --> 00:06:00.830
Now, one thing to
note about what you

154
00:06:00.830 --> 00:06:02.375
see on my screen and what you see

155
00:06:02.375 --> 00:06:04.625
by default in a raspberry Pi,

156
00:06:04.625 --> 00:06:06.890
notice the coloring, okay?

157
00:06:06.890 --> 00:06:10.880
See how some things are blue
or this is bright blue.

158
00:06:10.880 --> 00:06:13.840
This coloring actually
has a meaning

159
00:06:13.840 --> 00:06:15.740
and this coloring though,

160
00:06:15.740 --> 00:06:17.380
I don't like to rely
on the coloring.

161
00:06:17.380 --> 00:06:20.200
So, what I mean by
that is raspberry Pi,

162
00:06:20.200 --> 00:06:22.690
the default setup for the shell
is to color in this way.

163
00:06:22.690 --> 00:06:24.850
So, this blue means
that it's a directory.

164
00:06:24.850 --> 00:06:26.605
So, I can just type ls,

165
00:06:26.605 --> 00:06:28.690
it prints out these three names

166
00:06:28.690 --> 00:06:31.000
and by seeing the fact
that they're blue,

167
00:06:31.000 --> 00:06:32.725
I know that they are directories,

168
00:06:32.725 --> 00:06:35.165
where if it was just a file
it would not appear blue.

169
00:06:35.165 --> 00:06:36.750
Now, the coloring is nice,

170
00:06:36.750 --> 00:06:38.910
it's useful, but
I don't trust it.

171
00:06:38.910 --> 00:06:40.255
The reason I don't
trust it is because

172
00:06:40.255 --> 00:06:41.860
I use lots of different machines,

173
00:06:41.860 --> 00:06:43.150
lots of different Linux machines.

174
00:06:43.150 --> 00:06:44.710
Some of them have that coloring

175
00:06:44.710 --> 00:06:46.570
defined by default,
some of them don't.

176
00:06:46.570 --> 00:06:48.640
Some of them use
different colorings, right?

177
00:06:48.640 --> 00:06:50.260
This is one of those
things that you can do

178
00:06:50.260 --> 00:06:52.510
to personalize your setup.

179
00:06:52.510 --> 00:06:53.910
We're not going to talk
about how to do that,

180
00:06:53.910 --> 00:06:56.760
but you can go into
your setup for

181
00:06:56.760 --> 00:06:59.690
your shell RC files and

182
00:06:59.690 --> 00:07:01.070
you can set the coloring

183
00:07:01.070 --> 00:07:02.630
of different things
on the screen,

184
00:07:02.630 --> 00:07:05.200
so it can be nice to
customize it that way,

185
00:07:05.200 --> 00:07:07.415
but I don't like to
trust it just because

186
00:07:07.415 --> 00:07:09.710
different machines
have different setups

187
00:07:09.710 --> 00:07:11.770
and I don't like to
sort of rely on that.

188
00:07:11.770 --> 00:07:14.430
Another way to
tell, in this case,

189
00:07:14.430 --> 00:07:15.890
if each one of these files is

190
00:07:15.890 --> 00:07:18.650
a directory is when
you do that ls-l,

191
00:07:18.650 --> 00:07:20.330
you can see that
there are three rows,

192
00:07:20.330 --> 00:07:22.295
Desktop, indiecity, python_games.

193
00:07:22.295 --> 00:07:23.450
If you look all the way to

194
00:07:23.450 --> 00:07:25.340
the left end of each
one of those rows,

195
00:07:25.340 --> 00:07:26.590
see that letter d?

196
00:07:26.590 --> 00:07:28.290
That d means directory, right?

197
00:07:28.290 --> 00:07:29.830
So, even without the coloring,

198
00:07:29.830 --> 00:07:31.610
I can tell that this is

199
00:07:31.610 --> 00:07:35.950
a directory if I do ls-l
and I see the d there.

200
00:07:35.950 --> 00:07:37.875
But notice that if
I just type ls,

201
00:07:37.875 --> 00:07:38.970
you don't get the detail,

202
00:07:38.970 --> 00:07:41.430
you wouldn't see the d, but
you get the blue, right?

203
00:07:41.430 --> 00:07:44.230
So, it's kind of nice to
have the coloring too.

204
00:07:44.600 --> 00:07:47.430
Couple of more commands,

205
00:07:47.430 --> 00:07:50.710
this is make directory
and remove directory.

206
00:07:50.710 --> 00:07:53.725
So, mkdir is make directory,

207
00:07:53.725 --> 00:07:55.440
rmdir is remove directory,

208
00:07:55.440 --> 00:07:57.075
so they do what they sound like

209
00:07:57.075 --> 00:07:59.010
and mkdir makes a directory,

210
00:07:59.010 --> 00:08:00.105
it creates a new directory where

211
00:08:00.105 --> 00:08:02.715
rmdir removes
a directory, deletes it.

212
00:08:02.715 --> 00:08:06.660
Now, one thing to
note is that rmdir,

213
00:08:06.660 --> 00:08:07.730
when it's removing a directory,

214
00:08:07.730 --> 00:08:09.620
it only works if the
directory is empty,

215
00:08:09.620 --> 00:08:11.210
has no files in it, right?

216
00:08:11.210 --> 00:08:14.090
If you try to rmdir a directory
that has a file on it,

217
00:08:14.090 --> 00:08:15.200
it will not allow you to do

218
00:08:15.200 --> 00:08:19.605
that which is a safety
precaution, right?

219
00:08:19.605 --> 00:08:21.780
But you can see we do an ls,

220
00:08:21.780 --> 00:08:23.310
we can see what's
in the directory,

221
00:08:23.310 --> 00:08:25.290
then I make a new directory,
then you do an ls,

222
00:08:25.290 --> 00:08:26.700
you see it's there then I can

223
00:08:26.700 --> 00:08:28.735
rmdir that directory
and it's gone.

224
00:08:28.735 --> 00:08:33.025
So, that's what it's
for and it's a useful,

225
00:08:33.025 --> 00:08:34.730
sometimes you need to
make directories and

226
00:08:34.730 --> 00:08:36.440
it's good for organizational
purposes, right?

227
00:08:36.440 --> 00:08:39.350
Remember, file systems,
they're for organization,

228
00:08:39.350 --> 00:08:41.030
they help you organize your data.

229
00:08:41.030 --> 00:08:42.950
So, you want to start

230
00:08:42.950 --> 00:08:44.210
a new project and
you're going to have

231
00:08:44.210 --> 00:08:45.590
a bunch of files
involved in that,

232
00:08:45.590 --> 00:08:48.015
make a new directory and put
your stuff in it, right?

233
00:08:48.015 --> 00:08:51.155
It's easy to do and it helps
you with organization later,

234
00:08:51.155 --> 00:08:53.430
so you can find things later.