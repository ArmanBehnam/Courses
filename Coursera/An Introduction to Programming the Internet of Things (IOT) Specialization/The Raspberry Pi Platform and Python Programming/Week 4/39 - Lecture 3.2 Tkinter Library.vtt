WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:11.310 --> 00:00:13.967
This lecture is about the Tkinter Library.

3
00:00:13.967 --> 00:00:16.371
It's a graph user interface library for
Python, and

4
00:00:16.371 --> 00:00:18.517
it allows you to make
graphic user interfaces.

5
00:00:18.517 --> 00:00:21.030
So we'll talk about that
library a little bit.

6
00:00:21.030 --> 00:00:23.560
We'll only go over a little bit,
actually, right now.

7
00:00:23.560 --> 00:00:25.960
We'll get into more depth
in that in the next course.

8
00:00:27.130 --> 00:00:31.026
So, Tkinter is a library
commonly used Python library for

9
00:00:31.026 --> 00:00:33.337
making graphic user interfaces.

10
00:00:33.337 --> 00:00:37.981
It provides you the tools you need so,
many widgets, buttons, menus,

11
00:00:37.981 --> 00:00:39.516
labels, scroll bars.

12
00:00:39.516 --> 00:00:43.470
All the widgets you expect to see,
you can create those using this library.

13
00:00:44.790 --> 00:00:46.380
It provides a canvas widget,

14
00:00:46.380 --> 00:00:49.690
so, a canvas widget it something
where you can draw pictures.

15
00:00:49.690 --> 00:00:52.500
So either the user or
the code can draw things,

16
00:00:52.500 --> 00:00:56.720
rectangles and whatever you wanna draw,
you can draw them in a canvas.

17
00:00:56.720 --> 00:00:58.250
That's what canvases are for.

18
00:00:58.250 --> 00:01:00.026
Remember that the GUI doesn't
have to have a canvas, right?

19
00:01:00.026 --> 00:01:04.680
A GUI could just have a bunch of button
and scroll bars and things like this, but

20
00:01:04.680 --> 00:01:07.880
a canvas is useful, right, for drawing
any kind of image that you wanna draw.

21
00:01:09.060 --> 00:01:13.300
So we're gonna go through very briefly,
just go through our little program,

22
00:01:13.300 --> 00:01:18.450
just to give you an idea of what this
library can do is just one little example.

23
00:01:18.450 --> 00:01:22.377
So first, you do an import at the top,
from Tkinter import *,

24
00:01:22.377 --> 00:01:25.851
that imports all the classes
from the Tkinter library.

25
00:01:25.851 --> 00:01:29.010
So we do that to start, we do our import.

26
00:01:29.010 --> 00:01:31.400
Then root, so we make a root window.

27
00:01:31.400 --> 00:01:34.021
For that, we call this Tk(),

28
00:01:34.021 --> 00:01:38.500
Tk()'s a constructor function for
the main class in the library.

29
00:01:38.500 --> 00:01:41.880
So, you have to create this
root object right there.

30
00:01:41.880 --> 00:01:45.770
So, you create the root object, and
that's going to be a window on the screen.

31
00:01:45.770 --> 00:01:48.319
Then next line, root.geometry,
that sets it's size, right?

32
00:01:48.319 --> 00:01:53.340
So, root.geometry, we're going to make it
800 by 600 or whatever we want to make it.

33
00:01:53.340 --> 00:01:57.610
So we set its geometry, then next thing
we're doing is we're creating a canvas.

34
00:01:57.610 --> 00:01:59.100
C = canvas.

35
00:01:59.100 --> 00:02:01.280
So that canvas function creates a canvas.

36
00:02:01.280 --> 00:02:03.900
Notice the first argument to
that canvas is the root, right?

37
00:02:03.900 --> 00:02:05.460
So this canvas is gonna be created.

38
00:02:05.460 --> 00:02:06.570
This canvas is for drawing.

39
00:02:06.570 --> 00:02:09.590
For drawing images, squares,
rectangles, whatever you want.

40
00:02:09.590 --> 00:02:12.070
This canvas is gonna be
created in the root window,

41
00:02:12.070 --> 00:02:15.230
because that's the first
argument to the canvas function.

42
00:02:15.230 --> 00:02:19.310
And we give the dimensions of the canvas,
800 by 600,

43
00:02:19.310 --> 00:02:23.300
which coincidentally matches
exactly the root window.

44
00:02:23.300 --> 00:02:24.050
Which it doesn't have to.

45
00:02:24.050 --> 00:02:25.420
It could be smaller.

46
00:02:25.420 --> 00:02:29.418
But, we give the canvas some kind of size.

47
00:02:29.418 --> 00:02:32.690
Then c.pack {], what that path function,

48
00:02:32.690 --> 00:02:35.960
what that does to the canvas is that
actually makes it appear on the screen.

49
00:02:35.960 --> 00:02:37.650
Without the pack it won't
appear on the screen.

50
00:02:37.650 --> 00:02:39.830
So you codec.pack {] to make
it appear on the screen.

51
00:02:41.510 --> 00:02:42.240
Then we draw.

52
00:02:42.240 --> 00:02:44.040
Now we can draw inside the canvas.

53
00:02:44.040 --> 00:02:47.995
So, we're calling this create rectangle
function c.create_rectangle, and

54
00:02:47.995 --> 00:02:49.723
it does just what you think it does.

55
00:02:49.723 --> 00:02:54.139
It makes a rectangle, 0, 0, 50, 50.

56
00:02:54.139 --> 00:02:56.915
So it takes those two
points on the screen, 0, 0,

57
00:02:56.915 --> 00:03:01.841
which is upper left-hand corner, and 50,
50, which is 50 down, 50 to the right,

58
00:03:01.841 --> 00:03:04.330
and it makes a little square,
red rectangle.

59
00:03:04.330 --> 00:03:06.410
It's red because we said fill is red,
outline's red.

60
00:03:06.410 --> 00:03:09.410
So it makes a red square in
the upper left-hand corner.

61
00:03:10.520 --> 00:03:13.404
So that's all you would see if you ran
this code, that's what you would see.

62
00:03:13.404 --> 00:03:16.272
It's a very simple code,
just to give you an idea of some of

63
00:03:16.272 --> 00:03:19.924
the functions inside this library,
and we'll talk about it more later.

64
00:03:19.924 --> 00:03:20.690
Thank you.

65
00:03:20.690 --> 00:03:28.085
[MUSIC]