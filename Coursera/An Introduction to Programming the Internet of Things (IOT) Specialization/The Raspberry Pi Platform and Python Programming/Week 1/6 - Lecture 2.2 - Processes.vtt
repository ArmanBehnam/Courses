WEBVTT

1
00:00:00.000 --> 00:00:10.000
[MUSIC]

2
00:00:11.279 --> 00:00:16.204
So some of the advantages of using
an operating system on a Raspberry Pi like

3
00:00:16.204 --> 00:00:19.070
you couldn't under Arduino.

4
00:00:19.070 --> 00:00:23.780
We've been talking about those, and one of
the important advantages is the existence,

5
00:00:23.780 --> 00:00:28.300
the fact that you can run multiple
processes at the same time.

6
00:00:28.300 --> 00:00:29.590
What does that mean?

7
00:00:29.590 --> 00:00:32.480
Say you had an Arduino and you write
a piece of code and you're running it

8
00:00:32.480 --> 00:00:37.030
on there, that program is the only program
running on your Arduino at a given time.

9
00:00:37.030 --> 00:00:38.210
Okay.

10
00:00:38.210 --> 00:00:40.260
But with a Linux machine, and

11
00:00:40.260 --> 00:00:42.629
a Rasberry Pi is essentially
a Linux machine, so running Linux.

12
00:00:43.950 --> 00:00:47.220
The operating system allows you to run
multiple programs at the same time.

13
00:00:49.566 --> 00:00:52.150
Now first, let me say that when I say
they're running at the same time,

14
00:00:52.150 --> 00:00:54.490
they're not really running
at exactly the same time.

15
00:00:55.675 --> 00:00:57.270
Basically, you've got one processor.

16
00:00:57.270 --> 00:00:59.750
Let's assume one processor,
single core, okay?

17
00:00:59.750 --> 00:01:04.130
You've got one processor and that
processor, say there are ten processes,

18
00:01:04.130 --> 00:01:05.650
ten different programs
running at the same time.

19
00:01:05.650 --> 00:01:08.880
They're not actually running at the same
time, they're swapping quickly, so

20
00:01:08.880 --> 00:01:11.030
the operating system swaps them in an out.

21
00:01:11.030 --> 00:01:12.710
But to the human, it swaps them so

22
00:01:12.710 --> 00:01:16.550
fast that to the human it looks like
they're running at the same time.

23
00:01:16.550 --> 00:01:19.290
Okay, so I can do 10, 20 processes running
at the same time, looking like they're

24
00:01:19.290 --> 00:01:22.320
running at the same time, even though
they're swapping in and out fast.

25
00:01:22.320 --> 00:01:25.130
And this can be very convenient
to be able to run multiple

26
00:01:25.130 --> 00:01:26.510
processes at the same time.

27
00:01:26.510 --> 00:01:29.680
What we see on the screen here,
you see a terminal window, so

28
00:01:29.680 --> 00:01:34.090
this is a Linux, actually in my desktop,
so this isn't an actually, I didn't take

29
00:01:34.090 --> 00:01:37.360
this screenshot of a Rasberry Pi, but
it looks actually, exactly the same.

30
00:01:37.360 --> 00:01:42.150
And what I'm doing there is, I type the
command ps, which gives me a listing of

31
00:01:42.150 --> 00:01:46.550
all the processes running on my
machine at the time when I did this.

32
00:01:46.550 --> 00:01:49.930
And every row is a process, and
it has all it's information,

33
00:01:49.930 --> 00:01:51.680
we'll go into more
detail about this later.

34
00:01:51.680 --> 00:01:54.430
But the idea is that every
row is a particular process.

35
00:01:54.430 --> 00:01:56.610
The right hand column
where it says command,

36
00:01:56.610 --> 00:02:00.790
that's the name of the job,
the name of the task that's running.

37
00:02:00.790 --> 00:02:02.020
Which we can't interpret those,

38
00:02:02.020 --> 00:02:05.820
those are all processes that
are part of the operating system.

39
00:02:05.820 --> 00:02:08.810
The idea though, is that many
processes can run at the same time.

40
00:02:09.890 --> 00:02:13.250
So, why is it beneficial?

41
00:02:13.250 --> 00:02:19.000
On one hand, you may say, look,
a human can only do one thing at a time.

42
00:02:19.000 --> 00:02:22.250
So why do I need multiple things
running at the same time?

43
00:02:22.250 --> 00:02:24.910
Well, it's nice to have multiple things
running at the same time because you can

44
00:02:24.910 --> 00:02:30.270
have background processes that are
handling things that in the background for

45
00:02:30.270 --> 00:02:31.830
you that are helpful.

46
00:02:31.830 --> 00:02:35.680
So while you, the user are interacting,
maybe playing a video game or something

47
00:02:35.680 --> 00:02:39.430
like that, in the background there
are processes doing other useful tasks.

48
00:02:41.270 --> 00:02:44.100
Which we'll talk more about
this later when we get to

49
00:02:44.100 --> 00:02:45.890
in more detail about
Linux in the next module.

50
00:02:46.910 --> 00:02:49.100
But that's a helpful thing.

51
00:02:49.100 --> 00:02:52.650
Now another thing that
operating systems give you

52
00:02:52.650 --> 00:02:57.070
is the ability to use different
hardware devices easily.

53
00:02:57.070 --> 00:02:59.610
Okay?
Now you don't need an operating system to

54
00:02:59.610 --> 00:03:00.299
use different hardware devices.

55
00:03:01.520 --> 00:03:03.220
Take an Arduino,

56
00:03:03.220 --> 00:03:07.550
you can use different hardware devices by
buying an Arduino shield, stick it on top.

57
00:03:07.550 --> 00:03:09.950
And then,
you call in library functions, right?

58
00:03:09.950 --> 00:03:16.830
But in order to use a hardware device
in an Arduino, you have to write code.

59
00:03:16.830 --> 00:03:19.850
You as a programmer have to write
a program that invokes certain library

60
00:03:19.850 --> 00:03:22.290
functions and
uses the hardware device, okay?

61
00:03:22.290 --> 00:03:25.520
So, you can do it, but
you have to write code to do it.

62
00:03:25.520 --> 00:03:29.580
Where with an operating system,
you're allowed to use these

63
00:03:29.580 --> 00:03:34.450
different hardware devices to plug in, and
you don't have to write code to do it.

64
00:03:34.450 --> 00:03:35.470
That's really the difference.

65
00:03:35.470 --> 00:03:36.970
You don't have to write code.

66
00:03:36.970 --> 00:03:41.180
Now if you're comfortable writing code,
as I am, then I can write some code and

67
00:03:41.180 --> 00:03:42.120
I don't need that.

68
00:03:42.120 --> 00:03:45.320
But most users don't want to write code
for every little thing they want to do.

69
00:03:45.320 --> 00:03:48.610
They want to just be able to plug
in a device, and use that device.

70
00:03:48.610 --> 00:03:50.480
And so operating systems allow that, so

71
00:03:50.480 --> 00:03:54.490
this picture here is trying
to give you a bit of an idea

72
00:03:54.490 --> 00:03:57.750
about how an operating system,
let's say Linux, accomplishes that.

73
00:03:57.750 --> 00:04:01.590
Specifically Linux, but
other operating system's are similar.

74
00:04:01.590 --> 00:04:05.000
So, at the top you got a user application,
right up there.

75
00:04:05.000 --> 00:04:07.970
So that user application,
just some program you wrote, or

76
00:04:07.970 --> 00:04:08.910
some program you bought.

77
00:04:08.910 --> 00:04:12.350
Maybe you bought some application and
you're running that, right?

78
00:04:12.350 --> 00:04:13.090
So, that's the program.

79
00:04:13.090 --> 00:04:16.530
Now, say that program wants
to use a hardware device.

80
00:04:16.530 --> 00:04:21.250
And by hardware device, maybe I'm talking
about a webcam I plugged into USB, right?

81
00:04:21.250 --> 00:04:23.320
So, that program wants to use that webcam.

82
00:04:23.320 --> 00:04:24.800
So, what does it do?

83
00:04:24.800 --> 00:04:27.530
What it does is it accesses a file.

84
00:04:27.530 --> 00:04:28.630
Now that's the next level down.

85
00:04:28.630 --> 00:04:32.650
See it says slash dev slash XXX,
that slash notation,

86
00:04:32.650 --> 00:04:33.860
that's the directory notation.

87
00:04:33.860 --> 00:04:35.150
Path notation, right?

88
00:04:35.150 --> 00:04:36.160
So slash dev.

89
00:04:36.160 --> 00:04:38.210
Dev is short for device.

90
00:04:38.210 --> 00:04:42.085
If you look in a Linux box under slash
dev, you see a bunch of sub-directories,

91
00:04:42.085 --> 00:04:44.755
a bunch of files and XXX is one them.

92
00:04:44.755 --> 00:04:48.305
It's not one of them, but
xx is just a generic term for a file.

93
00:04:48.305 --> 00:04:53.405
And you got a file in there for every
device that's connected to your machine.

94
00:04:53.405 --> 00:04:55.985
So, if you've got a web
cam plugged into USB,

95
00:04:55.985 --> 00:05:01.360
there will be some file in that slash dev
directory just devoted to that web cam.

96
00:05:01.360 --> 00:05:02.170
Okay.

97
00:05:02.170 --> 00:05:05.670
So that file is associated with
the hardware device that you plugged in.

98
00:05:05.670 --> 00:05:09.010
Then, from the user point of view,
from the user application or user point of

99
00:05:09.010 --> 00:05:14.170
view, all you need to, say you wanna read
data from the webcam, you read the file.

100
00:05:14.170 --> 00:05:15.280
You read the file context.

101
00:05:15.280 --> 00:05:17.530
You read data at the file content.

102
00:05:17.530 --> 00:05:21.750
And that data would be the image data,
for instance, from the video And

103
00:05:21.750 --> 00:05:24.700
if was another type of device, say it was
a disc drive or something like that or

104
00:05:24.700 --> 00:05:26.890
whatever it was,
say you want to write to the disc drive.

105
00:05:26.890 --> 00:05:29.350
Then, if you want to write to it,
you write to the file and

106
00:05:29.350 --> 00:05:31.580
that will go into the drive, okay?

107
00:05:31.580 --> 00:05:35.840
So what Linux and a lot of operating
systems do is they say look let's,

108
00:05:35.840 --> 00:05:39.360
they give you this uniform
interface to all these devices.

109
00:05:39.360 --> 00:05:43.060
They say look, all these devices, how you
access a disc drive, and a web cam, and

110
00:05:43.060 --> 00:05:46.130
a microphone is all different But
a user doesn't want to see that,

111
00:05:46.130 --> 00:05:47.080
that's way too complicated.

112
00:05:47.080 --> 00:05:50.330
So they say look we're just going
to give you a set of files.

113
00:05:50.330 --> 00:05:52.390
You write to the file and
read from the file and

114
00:05:52.390 --> 00:05:55.840
that allows you to access
every device in the same way.

115
00:05:55.840 --> 00:05:59.770
I want to read from a microphone I want
to see what the microphone is hearing.

116
00:05:59.770 --> 00:06:00.930
I read from the appropriate file.

117
00:06:00.930 --> 00:06:04.640
If I want to write to a drive I
write to the appropriate file.

118
00:06:04.640 --> 00:06:07.420
So it gives you this nice easy interface.

119
00:06:07.420 --> 00:06:09.740
To access all your hardware devices.

120
00:06:09.740 --> 00:06:13.130
So, there's a file and
underneath that, or behind that,

121
00:06:13.130 --> 00:06:16.790
inside the operating system, there's a
device driver which I've highlighted here.

122
00:06:16.790 --> 00:06:18.290
And that's a bunch of code.

123
00:06:18.290 --> 00:06:23.310
And what the device driver does is it
translates these file accesses into actual

124
00:06:23.310 --> 00:06:28.800
hardware device accesses So that's
where the real rubber hits the road.

125
00:06:28.800 --> 00:06:30.630
If you, say it's a disk drive.

126
00:06:30.630 --> 00:06:36.560
You write to the disk drive by writing to
a file, so then the device driver has to

127
00:06:36.560 --> 00:06:40.630
say, look, they wanna put this data into
this disk drive, I'm gonna have to spin

128
00:06:40.630 --> 00:06:45.000
this disk drive and move the head this
way and write the data in this fashion.

129
00:06:45.000 --> 00:06:48.350
The details,
the physical details Of how you actually

130
00:06:48.350 --> 00:06:51.690
access the hardware components,
the microphone, disk drive,

131
00:06:51.690 --> 00:06:55.430
whatever the hardware component is,
that is understood by the device driver.

132
00:06:55.430 --> 00:06:58.450
The device driver handles
all those details for you.

133
00:06:58.450 --> 00:07:02.290
So that's why if you ever take
let's say a windows machine and

134
00:07:02.290 --> 00:07:06.830
you plug in new device, sometimes in
the lower right a little pop up will say

135
00:07:06.830 --> 00:07:09.980
downloading device drivers,
searching for device driver and so on.

136
00:07:09.980 --> 00:07:12.190
It's looking for
the appropriate device driver.

137
00:07:12.190 --> 00:07:16.720
For that component, to know how to
access that particular component.

138
00:07:16.720 --> 00:07:20.180
And once it finds that then it can use
that and it makes it very easy for

139
00:07:20.180 --> 00:07:22.720
a user to access any hardware device

140
00:07:22.720 --> 00:07:25.780
without having to write code
explicitly for that purpose.

141
00:07:25.780 --> 00:07:27.240
So that's what a device driver is and

142
00:07:27.240 --> 00:07:29.290
there are a set of them,
libraries of them.

143
00:07:29.290 --> 00:07:31.090
And then underneath that
is the hardware device,

144
00:07:31.090 --> 00:07:34.300
whatever the hardware device is, that is
controlled by the device driver code.

145
00:07:35.530 --> 00:07:38.446
So this is another advantage
of having an operating system,

146
00:07:38.446 --> 00:07:42.217
is you can have these device drives which
are part of the operating system, and

147
00:07:42.217 --> 00:07:45.100
they deal with all the hardware
interface details for you.

148
00:07:45.100 --> 00:07:48.618
All you have to do is access files and
it makes it a much easier,

149
00:07:48.618 --> 00:07:50.186
more pleasant interface.

150
00:07:50.186 --> 00:07:51.138
Thank you.

151
00:07:51.138 --> 00:07:58.927
[MUSIC]